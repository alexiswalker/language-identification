'(Declarations)
On Error Resume Next
Set objXmlDoc = CreateObject("Msxml2.DOMDocument.6.0")
Set objGrpClient = CreateObject("Cxgrp.grpClient")
Set objAcsClient = CreateObject("Cxacs.acsClient")
Set g_FacClient = CreateObject("CxFac.FacClient.1")

Dim bInt
bInt = True

strType = "WELL;~attryn3=yes"

Dim g_strSite 
Dim g_strAcsSvc, g_strAppsSvc, g_strAudSvc, g_strCasSvc, g_strDdsSvc, g_strElsSvc, g_strElsAlmSvc 
Dim g_strFacSvc, g_strGmrSvc, g_strGnsSvc, g_strGrpSvc, g_strGrpBssSvc, g_strHssSvc, g_strMssSvc 
Dim g_strNotesSvc, g_strOpcIsSvc, g_strPntSvc, g_strRsmSvc, g_strSvcMonSvc, g_strTrsSvc, g_strUisSvc, g_strVhsSvc

Dim g_objUserProfile, g_strUserProfileGroup, g_objTabNavigator

Sub Include(strFilePath)
	Dim strContents
	Dim fileTxtOb
	Dim fileSysOb
	Dim blobSysOb
	Set fileSysOb = CreateObject("Scripting.FileSystemObject")
	Set blobSysOb = CreateObject("CxScript.FileSystemObject")

	On Error Resume Next

	'Attempt to determine Site name from File Path
	If instr(theview.FilePath, "\\") = 1 Then
		strSite = left(theview.FilePath, instr(theview.FilePath, ".")-1)
		g_strSite =	right(strSite, len(strSite)-2)
	End If
	
	'If Site Name can not be determined from File Path, see if it is hard-coded on screen.
	If g_strSite = "" Then
		If theview.SiteService <> "" Then
			arrSiteSvc = split(theview.SiteService, ".")
			g_strSite = arrSiteSvc(0)
		End If
	End If

	If theview.SiteService = "" And g_strSite <> "" Then
		theview.SiteService = g_strSite & ".UIS"
	End If

	If g_strSite = "" Then
		strMsg = "Site name is not defined or cannot be determined." & vbCr & vbCr & "Enter a SiteService on the screen or open the screen from a BSS."
		msgbox strMsg, 0, "Screen Error"
		exit sub
	End If

	strPath = g_strSite & ".BSS\Include\"
	strFilePath = strPath & strFilePath
	
	err.clear
	strContents = blobSysOb.ReadBlobString(strFilePath)

	If err <> 0 Then
		err.clear
		Set fileTxtOb = fileSysOb.OpenTextFile(strFilePath, 1)
		If err = 0 Then
			strContents = fileTxtOb.ReadAll
			fileTxtOb.Close
		End If
	End If

	If err = 0 Then
		ExecuteGlobal strContents
	Else
		MsgBox "Unable to import the script file: " & strFilePath & vbCrlf & "Please contact your CygNet administrator"
		err.clear
	End If

	err.clear
	On Error Goto 0
End Sub


Sub GridDoubleClick()
	tabStrip.Tabs(2).Selected = True
	Call FillNestedView(nvtPL, gridPL, theview.Tag, tabStrip)
End Sub
	
'End of (Declarations)

'(GlobalDeclarations)

'End of (GlobalDeclarations)

Sub ButtonTool1_EventClick()
Dim This : Set This = ButtonTool1
	GroupNavigationBarTool1.X.NavPrev false
End Sub 

Sub ButtonTool2_EventClick()
Dim This : Set This = ButtonTool2
	GroupNavigationBarTool1.X.NavNext False
End Sub 

Sub gridPl_EventContextMenu(Col, Row, EventID)
Dim This : Set This = gridPl
	Set objPoint = this.X.GetPointTag(col,row)
	strFac = objPoint.Facility
	strUdc = objPoint.UDC
	strSiteService = objPoint.SiteService

	Process_GridEventContextMenuObjects EventID, strSiteService, strFac, strUdc	
End Sub 

Sub gridPl_EventDClick(Column, Row)
Dim This : Set This = gridPl
	Call GridDoubleClick
End Sub 

Sub gridPl_EventDClickRow(Row)
Dim This : Set This = gridPl
	Call GridDoubleClick
End Sub 

Sub gridPl_EventInitialize()
Dim This : Set This = gridPl
	Call SetGridWatchListContentMenuByObj(this)
End Sub 

Sub GroupNavigationBarTool1_EventOnSelChangeLevel(Level)
Dim This : Set This = GroupNavigationBarTool1
	If level = 0 Then
		Call SetNavBar(GroupNavigationBarTool1, strType)
		theview.Restart
	End If
End Sub 

Sub nvtPL_EventHyperLink(FilePath, SiteService, Facility, AutoClose)
Dim This : Set This = nvtPL
	theview.HyperLink filepath, siteservice, facility
End Sub 

Sub tabStrip_EventClick()
Dim This : Set This = tabStrip
	Call FillNestedView(nvtPL, gridPL, theview.Tag, tabStrip)
End Sub 

Sub TheView_EventCustom(EventID, Data, ViewID)
Dim This : Set This = TheView
	ProcessCustomPlayBackEvents EventId, Data, ViewID
End Sub 

Sub TheView_EventInitialize()
Dim This : Set This = TheView
	Call Include("SolSupp.txt")
	Call SetNavBar(GroupNavigationBarTool1, strType)
	bInt = True
	
	Call FillNavTabs(tabStrip, theview.Tag)
	Call FillNestedView(nvtPL, gridPL, theview.Tag, tabStrip)	
End Sub 

Sub TheView_EventRestarted()
Dim This : Set This = TheView
	If Not bInt Then
		facilities.ResolveNow
	
		Call FillNavTabs(tabStrip, theview.Tag)
		Call FillNestedView(nvtPL, gridPL, theview.Tag, tabStrip)
	Else
		GroupNavigationBarTool1.NotifySelChange
		iLevel = GroupNavigationBarTool1.X.TargetLevel
		strNavBarFac = GroupNavigationBarTool1.X.GetSelectedNodeAttrValue(iLevel,"~ref_id")
		If strNavBarFac <> this.Facility Then
			GroupNavigationBarTool1.X.SetTargetNode("~ref_id="+this.Facility)
			GroupNavigationBarTool1.NotifySelChange
		End If			
	
		bInt = False
	End If
End Sub