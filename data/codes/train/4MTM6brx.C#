using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 * ---
 * Hint: You can use the debug stream to print initialTX and initialTY, if Thor seems not follow your orders.
 **/
class Player
{
    static void Main(string[] args)
    {
        string[] inputs = Console.ReadLine().Split(' ');
        int lightX = int.Parse(inputs[0]); // the X position of the light of power
        int lightY = int.Parse(inputs[1]); // the Y position of the light of power
        int initialTX = int.Parse(inputs[2]); // Thor's starting X position
        int initialTY = int.Parse(inputs[3]); // Thor's starting Y position
        int thorX = initialTX;
        int thorY = initialTY;  

        // game loop
        while (true)
        {
            int remainingTurns = int.Parse(Console.ReadLine());

            String direction ="";
                

            if(thorX < lightX && thorY == lightY){
                direction = "E";
                thorX++;
            }
            else if(thorX > lightX && thorY == lightY){
                direction = "W";
                thorX--;
            }
            
            else if(thorY < lightY && thorX == lightX){
                direction = "S";
                thorY++;
            }
            else if(thorY > lightY && thorX == lightX){
                direction = "N";
                thorY--;
            }
            else if(thorY < lightY && thorX > lightX){
                direction = "SW";
                thorY++;
                thorX--;
             }
            else if(thorY < lightY && thorX < lightX){
                direction = "SE";
                thorY++;
                thorX--;
             }
            else if(thorY > lightY && thorX < lightX){
                direction = "NE";
                thorY++;
                thorX--;
             }
            else if(thorY > lightY && thorX > lightX){
                direction = "NW";
                thorY++;
                thorX--;
             }
            Console.WriteLine(direction);
        }
    }
}