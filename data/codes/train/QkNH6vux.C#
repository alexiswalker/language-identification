using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using UnityEngine.UI;

public class DialogueManager : MonoBehaviour {

	public string[] fileLines;

	public List<string> subtitleLines = new List<string>();
	public List<string> subtitleText = new List<string>();
	public List<string> subtitleTimingStrings = new List<string>();
	public List<float> subtitleTimings = new List<float>();

	public bool dialoguePlaying = false;

	public float subtitleTimePassed = 0;

	private int nextSubtitle = 0;
	private string displaySubtitle;

	private Text txt;

	public static DialogueManager Instance {get; private set;}

	void Awake()
	{
		Instance = this;
		txt = GetComponentInChildren<Text>();
	}

	void Update()
	{
		if(Input.GetKeyDown(KeyCode.Space))
		{
			BeginDialogue();
		}
		else if(Input.GetKeyDown(KeyCode.Space) && dialoguePlaying)
		{
			nextSubtitle++;
		}

		if((nextSubtitle > 0) && (!subtitleText[nextSubtitle - 1 ].Contains("<break/>")))
		{
			txt.alignment = TextAnchor.MiddleCenter;
			txt.color = Color.white;
			txt.fontSize = 25;
			txt.text = displaySubtitle;
		}
		if(nextSubtitle < subtitleText.Count)
		{
			if(subtitleTimePassed > subtitleTimings[nextSubtitle])
			{
				displaySubtitle = subtitleText[nextSubtitle];
				nextSubtitle++;
			}
		}
	}


	public void BeginDialogue()
	{
		subtitleLines = new List<string>();
		subtitleText = new List<string>();
		subtitleTimingStrings = new List<string>();
		subtitleTimings = new List<float>();

		nextSubtitle = 0;
		
		//work around this
		TextAsset temp = Resources.Load("Dialogues/Dialogue") as TextAsset;
		fileLines = temp.text.Split('\n');

		foreach (string line in fileLines)
		{
			subtitleLines.Add(line);
		}

		for (int cnt = 0; cnt < subtitleLines.Count; cnt++) 
		{
			string[] splitTemp = subtitleLines[cnt].Split('|');
			subtitleTimingStrings.Add(splitTemp[0]);
			subtitleTimings.Add(float.Parse(CleanTimeString(subtitleTimingStrings[cnt])));
			subtitleText.Add(splitTemp[1]);
		}

		if(subtitleText[0] != null)
		{
			displaySubtitle = subtitleText[0];
			dialoguePlaying = true;
		}
		else
		{
			dialoguePlaying = false;
		}

	}

	//clearing strings so its only digits
	private string CleanTimeString(string timeString) 
	{
		Regex digitsOnly = new Regex(@"[^\d+(\.\d+)*$]");
		return digitsOnly.Replace(timeString, "");
	}

}