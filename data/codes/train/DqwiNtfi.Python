# Hello world

studentNames = []
courseNames = []
numStudents = 0
numCourses = 0

# These would usually be "Priviate"
studentCourseGrades = []  # Shall store information in the format studentIndex,courseIndex,gradePoint EX: 1,1,78.5


def storegradepoint(studentindex, courseindex, gradepoint):
    studentCourseGrades.append(str(studentindex) + "," + str(courseindex) + "," + str(gradepoint))


def getgradepoint(studentindex, courseindex):
    for i in range(len(studentCourseGrades)):
        temp = str(studentCourseGrades[i]).split(",")
        if temp[0] == str(studentindex):
            if temp[1] == str(courseindex):
                return float(temp[2])


def getstudentaverage(studentindex, numcourses):
    averagetemp = 0
    for i in range(len(studentCourseGrades)):
        temp = str(studentCourseGrades[i]).split(",")
        if temp[0] == str(studentindex):
            averagetemp += float(temp[2])
    return averagetemp / numcourses


def calculateGrade(gradePoint):
    if gradePoint >= 80:
        return "High Distinction"
    elif gradePoint >= 70:
        return "Distinction"
    elif gradePoint >= 60:
        return "Credit"
    elif gradePoint >= 50:
        return "Pass"
    else:
        return "Fail"


while True:
    print("Enter total number of students.")
    while True:
        try:
            numStudents = int(input("> "))
            if numStudents > 0:
                break
            else:
                print("You can't have negative students.")
        except ValueError:
            print("Non-negative whole number required.")
    print("And how many courses do these students partake in?")
    while True:
        try:
            numCourses = int(input("> "))
            if numCourses > 0:
                break
            else:
                print("You can't have negative courses.")
        except ValueError:
            print("Non-negative whole number required.")
    print("Confirm:", numStudents, "student(s) partaking in", numCourses, "course(s).")
    print("y/n")
    if input("> ").lower() == "y":
        break
    else:
        print()
        print()

for i in range(numStudents):
    print("Name of Student", i + 1, "of", numStudents, ":")
    studentNames.append(input(">"))

for i in range(numCourses):
    print("Name of Course", i + 1, "of", numCourses, ":")
    courseNames.append(input(">"))

for studentIndex in range(numStudents):
    print()  # better formatting.
    for courseIndex in range(numCourses):
        print("Enter ", studentNames[studentIndex], "'s grade for ", courseNames[courseIndex], ":", sep='')
        while True:
            try:
                gradePoint = float(input("> "))
                if gradePoint > 100.0:
                    gradePoint = 100
                    print("Entered grade point exceeded 100; defaulting to 100.")
                    storegradepoint(studentIndex, courseIndex, gradePoint)
                    break
                elif gradePoint <= 0.0:
                    gradePoint = 0
                    print("Entered grade point deceeded 0; defaulting to 0.")
                    print("Trivia: The term 'deceed' is the suggested antonym to 'exceed'.")
                    storegradepoint(studentIndex, courseIndex, gradePoint)
                    break
                else:
                    storegradepoint(studentIndex, courseIndex, gradePoint)
                    break
            except ValueError:
                print("Non-negative number required.")
    print(studentNames[studentIndex], " achieved:", sep='')
    for i in range(numCourses):
        print(courseNames[i], ": ", getgradepoint(studentIndex, i), " out of 100 - ",
              calculateGrade(getgradepoint(studentIndex, i)), sep='')
    print("On average ", studentNames[studentIndex], " is achieving ",
          int(round(getstudentaverage(studentIndex, numCourses), 0)), " - ",
          calculateGrade(getstudentaverage(studentIndex, numCourses)), sep='')

print("")