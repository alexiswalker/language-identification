m = 10

# list of numbers we'll check for 'primeness' :p
theRange = range(0, m)

# basically copies the array, is range(2, m) expressed as a list comprehension with variable 'i'
identityListComprehension = [i for i in range(0, m)]

print identityListComprehension

# get a list of lists, each inner list are for a number and is all the numbers inbtween 1 and itself (not including 1 and itself)
potentialFactors = [range(2,i-1) for i in range(0, m)]

print potentialFactors

# same as potentialFactors but the range(2,i-1) is now expressed as a list comprehension with variable 'j'
potentialFactors2 = [[j for j in range(2,i-1)] for i in range(0, m)]

print potentialFactors2

# adds an if statement in the 'j' list comprehension to check if it can be divided by i ('i' is the number we are checkign for primeness)
wholeFactors = [[j for j in range(2,i-1) if i%j==0] for i in range(0, m)]

print wholeFactors

# same as wholeFactors but we count the number of whole factors
wholeFactorCount = [len([j for j in range(2,i-1) if i%j==0]) for i in range(0, m)]

print wholeFactorCount

# if it has 0 whole factors then it is a prime (we quietly ignore 0 and 1 :p )
isPrime = [0==len([j for j in range(2,i-1) if i%j==0]) for i in range(0, m)]

print isPrime

# use list comprehension to make a list of output strings
print [str(i)+" "+str(isPrime[i]) for i in range(0,m)]

#same as above but with a join function
print '\n'.join([str(i)+" "+str(isPrime[i]) for i in range(0,m)])