//-----------------------------------------------------------------------
// <copyright file="TestScreen1.cs" company="Viqual">
//     Copyright (c) 2015. All rights reserved.
// </copyright>
// <author>Katrina Swales</author>
// <date>16/08/2015 16:11</date>
// <summary>Just a test screen 1</summary>
//-----------------------------------------------------------------------

namespace SwivelTest.Screens
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using SwivelEngine.Screens;

    public class TestScreen1 : BaseScreen
    {
        /// <summary>
        /// The temporary variable
        /// </summary>
        public double tmp = 0;

        /// <summary>
        /// Gets or sets a value indicating whether [transparent update].
        /// </summary>
        /// <value>
        ///   <c>true</c> if [transparent update]; otherwise, <c>false</c>.
        /// </value>
        public override bool TransparentUpdate => true;

        /// <summary>
        /// Gets or sets a value indicating whether this <see cref="TestScreen1" /> is transparent.
        /// </summary>
        /// <value>
        ///   <c>true</c> if transparent; otherwise, <c>false</c>.
        /// </value>
        public override bool Transparent => true;

        /// <summary>
        /// Updates the specified ticks.
        /// </summary>
        /// <param name="ticks">The ticks.</param>
        public override void Update(double ticks)
        {
            tmp = tmp + ticks;
            Console.WriteLine(tmp);
            if (tmp >= 20)
                ScreenManager.Instance.PushScreen(new TestScreen2());
        }

        /// <summary>
        /// Renders the specified ticks.
        /// </summary>
        /// <param name="ticks">The ticks.</param>
        public override void Render(double ticks)
        {
        }

        /// <summary>
        /// Resizes the specified width.
        /// </summary>
        /// <param name="width">The width.</param>
        /// <param name="height">The height.</param>
        public override void Resize(int width, int height)
        {
        }

        /// <summary>
        /// Releases unmanaged and - optionally - managed resources.
        /// </summary>
        public override void Dispose()
        {
        }
    }
}