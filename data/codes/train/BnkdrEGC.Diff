### Eclipse Workspace Patch 1.0
#P L2J_Mobius_Ertheia
Index: java/com/l2jserver/gameserver/data/xml/impl/SkillTreesData.java
===================================================================
--- java/com/l2jserver/gameserver/data/xml/impl/SkillTreesData.java	(revision 177)
+++ java/com/l2jserver/gameserver/data/xml/impl/SkillTreesData.java	(working copy)
@@ -78,7 +78,7 @@
  */
 public final class SkillTreesData implements IXmlReader
 {
-	// ClassId, FastMap of Skill Hash Code, L2SkillLearn
+	// ClassId, HashMap of Skill Hash Code, L2SkillLearn
 	private static final Map<ClassId, Map<Integer, L2SkillLearn>> _classSkillTrees = new HashMap<>();
 	private static final Map<ClassId, Map<Integer, L2SkillLearn>> _transferSkillTrees = new HashMap<>();
 	private static final Map<Race, Map<Integer, L2SkillLearn>> _raceSkillTree = new HashMap<>();
Index: java/com/l2jserver/gameserver/ai/L2CharacterAI.java
===================================================================
--- java/com/l2jserver/gameserver/ai/L2CharacterAI.java	(revision 177)
+++ java/com/l2jserver/gameserver/ai/L2CharacterAI.java	(working copy)
@@ -28,10 +28,9 @@
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_PICK_UP;
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_REST;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -1205,19 +1204,19 @@
 		public boolean isHealer = false;
 		public boolean isFighter = false;
 		public boolean cannotMoveOnLand = false;
-		public List<Skill> generalSkills = new FastList<>();
-		public List<Skill> buffSkills = new FastList<>();
+		public List<Skill> generalSkills = new ArrayList<>();
+		public List<Skill> buffSkills = new ArrayList<>();
 		public int lastBuffTick = 0;
-		public List<Skill> debuffSkills = new FastList<>();
+		public List<Skill> debuffSkills = new ArrayList<>();
 		public int lastDebuffTick = 0;
-		public List<Skill> cancelSkills = new FastList<>();
-		public List<Skill> healSkills = new FastList<>();
-		// public List<L2Skill> trickSkills = new FastList<>();
-		public List<Skill> generalDisablers = new FastList<>();
-		public List<Skill> sleepSkills = new FastList<>();
-		public List<Skill> rootSkills = new FastList<>();
-		public List<Skill> muteSkills = new FastList<>();
-		public List<Skill> resurrectSkills = new FastList<>();
+		public List<Skill> cancelSkills = new ArrayList<>();
+		public List<Skill> healSkills = new ArrayList<>();
+		// public List<L2Skill> trickSkills = new ArrayList<>();
+		public List<Skill> generalDisablers = new ArrayList<>();
+		public List<Skill> sleepSkills = new ArrayList<>();
+		public List<Skill> rootSkills = new ArrayList<>();
+		public List<Skill> muteSkills = new ArrayList<>();
+		public List<Skill> resurrectSkills = new ArrayList<>();
 		public boolean hasHealOrResurrect = false;
 		public boolean hasLongRangeSkills = false;
 		public boolean hasLongRangeDamageSkills = false;
Index: java/com/l2jserver/gameserver/model/entity/ClanHall.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/ClanHall.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/ClanHall.java	(working copy)
@@ -22,12 +22,11 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.sql.impl.ClanTable;
@@ -213,7 +212,7 @@
 		_ownerId = set.getInt("ownerId");
 		_desc = set.getString("desc");
 		_location = set.getString("location");
-		_functions = new FastMap<>();
+		_functions = new HashMap<>();
 		
 		if (_ownerId > 0)
 		{
Index: java/com/l2jserver/gameserver/instancemanager/BoatManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/BoatManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/BoatManager.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.instancemanager;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.idfactory.IdFactory;
 import com.l2jserver.gameserver.model.L2World;
@@ -34,7 +33,7 @@
 
 public class BoatManager
 {
-	private final Map<Integer, L2BoatInstance> _boats = new FastMap<>();
+	private final Map<Integer, L2BoatInstance> _boats = new HashMap<>();
 	private final boolean[] _docksBusy = new boolean[3];
 	
 	public static final int TALKING_ISLAND = 1;
Index: java/com/l2jserver/gameserver/model/AutoSpawnHandler.java
===================================================================
--- java/com/l2jserver/gameserver/model/AutoSpawnHandler.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/AutoSpawnHandler.java	(working copy)
@@ -22,6 +22,8 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ScheduledFuture;
@@ -29,9 +31,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -75,8 +74,8 @@
 	
 	protected AutoSpawnHandler()
 	{
-		_registeredSpawns = new FastMap<>();
-		_runningSpawns = new FastMap<>();
+		_registeredSpawns = new HashMap<>();
+		_runningSpawns = new HashMap<>();
 		
 		restoreSpawnData();
 	}
@@ -111,8 +110,8 @@
 		}
 		
 		// create clean list
-		_registeredSpawns = new FastMap<>();
-		_runningSpawns = new FastMap<>();
+		_registeredSpawns = new HashMap<>();
+		_runningSpawns = new HashMap<>();
 		
 		// load
 		restoreSpawnData();
@@ -372,7 +371,7 @@
 	
 	public Map<Integer, AutoSpawnInstance> getAutoSpawnInstances(int npcId)
 	{
-		Map<Integer, AutoSpawnInstance> spawnInstList = new FastMap<>();
+		Map<Integer, AutoSpawnInstance> spawnInstList = new HashMap<>();
 		
 		for (AutoSpawnInstance spawnInst : _registeredSpawns.values())
 		{
@@ -606,9 +605,9 @@
 		
 		protected int _lastLocIndex = -1;
 		
-		private final List<L2Npc> _npcList = new FastList<>();
+		private final List<L2Npc> _npcList = new ArrayList<>();
 		
-		private final List<Location> _locList = new FastList<>();
+		private final List<Location> _locList = new ArrayList<>();
 		
 		private boolean _spawnActive;
 		
@@ -693,7 +692,7 @@
 		
 		public L2Spawn[] getSpawns()
 		{
-			List<L2Spawn> npcSpawns = new FastList<>();
+			List<L2Spawn> npcSpawns = new ArrayList<>();
 			
 			for (L2Npc npcInst : _npcList)
 			{
Index: java/com/l2jserver/gameserver/model/L2Clan.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Clan.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Clan.java	(working copy)
@@ -22,16 +22,15 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.util.ArrayList;
 import java.util.Collection;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.communitybbs.BB.Forum;
@@ -110,7 +109,7 @@
 	private String _name;
 	private int _clanId;
 	private L2ClanMember _leader;
-	private final Map<Integer, L2ClanMember> _members = new FastMap<>();
+	private final Map<Integer, L2ClanMember> _members = new HashMap<>();
 	
 	private String _allyName;
 	private int _allyId;
@@ -131,16 +130,16 @@
 	private int _bloodOathCount;
 	
 	private final ItemContainer _warehouse = new ClanWarehouse(this);
-	private final List<Integer> _atWarWith = new FastList<>();
-	private final List<Integer> _atWarAttackers = new FastList<>();
+	private final List<Integer> _atWarWith = new ArrayList<>();
+	private final List<Integer> _atWarAttackers = new ArrayList<>();
 	
 	private Forum _forum;
 	
-	/** FastMap(Integer, L2Skill) containing all skills of the L2Clan */
-	private final Map<Integer, Skill> _skills = new FastMap<>();
-	private final Map<Integer, RankPrivs> _privs = new FastMap<>();
-	private final Map<Integer, SubPledge> _subPledges = new FastMap<>();
-	private final Map<Integer, Skill> _subPledgeSkills = new FastMap<>();
+	/** HashMap(Integer, L2Skill) containing all skills of the L2Clan */
+	private final Map<Integer, Skill> _skills = new HashMap<>();
+	private final Map<Integer, RankPrivs> _privs = new HashMap<>();
+	private final Map<Integer, SubPledge> _subPledges = new HashMap<>();
+	private final Map<Integer, Skill> _subPledgeSkills = new HashMap<>();
 	
 	private int _reputationScore = 0;
 	private int _rank = 0;
@@ -610,9 +609,9 @@
 	 * @param exclude the object Id to exclude from list.
 	 * @return all online members excluding the one with object id {code exclude}.
 	 */
-	public FastList<L2PcInstance> getOnlineMembers(int exclude)
+	public ArrayList<L2PcInstance> getOnlineMembers(int exclude)
 	{
-		final FastList<L2PcInstance> onlineMembers = new FastList<>();
+		final ArrayList<L2PcInstance> onlineMembers = new ArrayList<>();
 		for (L2ClanMember temp : _members.values())
 		{
 			if ((temp != null) && temp.isOnline() && (temp.getObjectId() != exclude))
@@ -1712,7 +1711,7 @@
 		private final int _id;
 		private String _subPledgeName;
 		private int _leaderId;
-		private final Map<Integer, Skill> _subPledgeSkills = new FastMap<>();
+		private final Map<Integer, Skill> _subPledgeSkills = new HashMap<>();
 		
 		public SubPledge(int id, String name, int leaderId)
 		{
@@ -2991,7 +2990,7 @@
 	
 	public SubPledgeSkill[] getAllSubSkills()
 	{
-		FastList<SubPledgeSkill> list = FastList.newInstance();
+		final ArrayList<SubPledgeSkill> list = new ArrayList<>();
 		for (Skill skill : _subPledgeSkills.values())
 		{
 			list.add(new SubPledgeSkill(0, skill.getId(), skill.getLevel()));
@@ -3004,7 +3003,6 @@
 			}
 		}
 		SubPledgeSkill[] result = list.toArray(new SubPledgeSkill[list.size()]);
-		FastList.recycle(list);
 		return result;
 	}
 	
Index: java/com/l2jserver/loginserver/LoginController.java
===================================================================
--- java/com/l2jserver/loginserver/LoginController.java	(revision 177)
+++ java/com/l2jserver/loginserver/LoginController.java	(working copy)
@@ -35,13 +35,12 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
 import javax.crypto.Cipher;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.loginserver.GameServerTable.GameServerInfo;
@@ -62,10 +61,10 @@
 	public static final int LOGIN_TIMEOUT = 60 * 1000;
 	
 	/** Authed Clients on LoginServer */
-	protected FastMap<String, L2LoginClient> _loginServerClients = new FastMap<String, L2LoginClient>().shared();
+	protected ConcurrentHashMap<String, L2LoginClient> _loginServerClients = new ConcurrentHashMap<>();
 	
 	private final Map<InetAddress, Integer> _failedLoginAttemps = new HashMap<>();
-	private final Map<InetAddress, Long> _bannedIps = new FastMap<InetAddress, Long>().shared();
+	private final Map<InetAddress, Long> _bannedIps = new ConcurrentHashMap<>();
 	
 	protected ScrambledKeyPair[] _keyPairs;
 	
Index: java/com/l2jserver/gameserver/datatables/EventDroplist.java
===================================================================
--- java/com/l2jserver/gameserver/datatables/EventDroplist.java	(revision 177)
+++ java/com/l2jserver/gameserver/datatables/EventDroplist.java	(working copy)
@@ -18,11 +18,10 @@
  */
 package com.l2jserver.gameserver.datatables;
 
+import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.script.DateRange;
 import com.l2jserver.gameserver.script.EventDrop;
 
@@ -37,7 +36,7 @@
 	/**
 	 * The table containing all DataDrop object
 	 */
-	private static final List<DateDrop> _allNpcDateDrops = new FastList<>();
+	private static final List<DateDrop> _allNpcDateDrops = new ArrayList<>();
 	
 	public static class DateDrop
 	{
@@ -106,7 +105,7 @@
 	 */
 	public List<DateDrop> getAllDrops()
 	{
-		final List<DateDrop> list = new FastList<>();
+		final List<DateDrop> list = new ArrayList<>();
 		final Date currentDate = new Date();
 		for (DateDrop drop : _allNpcDateDrops)
 		{
Index: java/com/l2jserver/gameserver/model/entity/Siege.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Siege.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Siege.java	(working copy)
@@ -31,8 +31,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -223,9 +221,9 @@
 	}
 	
 	// must support Concurrent Modifications
-	private final List<L2SiegeClan> _attackerClans = new FastList<>();
-	private final List<L2SiegeClan> _defenderClans = new FastList<>();
-	private final List<L2SiegeClan> _defenderWaitingClans = new FastList<>();
+	private final List<L2SiegeClan> _attackerClans = new ArrayList<>();
+	private final List<L2SiegeClan> _defenderClans = new ArrayList<>();
+	private final List<L2SiegeClan> _defenderWaitingClans = new ArrayList<>();
 	
 	// Castle setting
 	private final List<L2ControlTowerInstance> _controlTowers = new ArrayList<>();
Index: dist/game/data/scripts/hellbound/AI/DemonPrince.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/DemonPrince.java	(revision 177)
+++ dist/game/data/scripts/hellbound/AI/DemonPrince.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package hellbound.AI;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.model.actor.L2Npc;
@@ -46,7 +46,7 @@
 		new SkillHolder(5376, 6),
 	};
 	
-	private static final Map<Integer, Boolean> ATTACK_STATE = new FastMap<>();
+	private static final Map<Integer, Boolean> ATTACK_STATE = new HashMap<>();
 	
 	public DemonPrince()
 	{
Index: java/com/l2jserver/gameserver/data/xml/impl/AdminData.java
===================================================================
--- java/com/l2jserver/gameserver/data/xml/impl/AdminData.java	(revision 177)
+++ java/com/l2jserver/gameserver/data/xml/impl/AdminData.java	(working copy)
@@ -23,10 +23,9 @@
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -48,7 +47,7 @@
 {
 	private final Map<Integer, L2AccessLevel> _accessLevels = new HashMap<>();
 	private final Map<String, L2AdminCommandAccessRight> _adminCommandAccessRights = new HashMap<>();
-	private final Map<L2PcInstance, Boolean> _gmList = new FastMap<L2PcInstance, Boolean>().shared();
+	private final Map<L2PcInstance, Boolean> _gmList = new ConcurrentHashMap<>();
 	private int _highestLevel = 0;
 	
 	protected AdminData()
Index: java/com/l2jserver/gameserver/instancemanager/FourSepulchersManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/FourSepulchersManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/FourSepulchersManager.java	(working copy)
@@ -21,6 +21,7 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.HashMap;
 import java.util.List;
@@ -31,9 +32,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -124,9 +122,9 @@
 	};
 	// @formatter:on
 	
-	protected Map<Integer, Boolean> _archonSpawned = new FastMap<>();
-	protected Map<Integer, Boolean> _hallInUse = new FastMap<>();
-	protected Map<Integer, L2PcInstance> _challengers = new FastMap<>();
+	protected Map<Integer, Boolean> _archonSpawned = new HashMap<>();
+	protected Map<Integer, Boolean> _hallInUse = new HashMap<>();
+	protected Map<Integer, L2PcInstance> _challengers = new HashMap<>();
 	protected Map<Integer, int[]> _startHallSpawns = new HashMap<>();
 	protected Map<Integer, Integer> _hallGateKeepers = new HashMap<>();
 	protected Map<Integer, Integer> _keyBoxNpc = new HashMap<>();
@@ -147,7 +145,7 @@
 	protected List<L2Spawn> _managers;
 	protected List<L2Spawn> _dukeFinalSpawns;
 	protected List<L2Spawn> _emperorsGraveSpawns;
-	protected List<L2Npc> _allMobs = new FastList<>();
+	protected List<L2Npc> _allMobs = new ArrayList<>();
 	
 	private long _attackTimeEnd = 0;
 	private long _coolDownTimeEnd = 0;
@@ -276,7 +274,7 @@
 	
 	protected void spawnManagers()
 	{
-		_managers = new FastList<>();
+		_managers = new ArrayList<>();
 		
 		int i = 31921;
 		for (L2Spawn spawnDat; i <= 31924; i++)
@@ -518,7 +516,7 @@
 					ps2.setInt(2, 1);
 					try (ResultSet rs2 = ps2.executeQuery())
 					{
-						_physicalSpawns = new FastList<>();
+						_physicalSpawns = new ArrayList<>();
 						while (rs2.next())
 						{
 							template1 = NpcData.getInstance().getTemplate(rs2.getInt("npc_templateid"));
@@ -575,7 +573,7 @@
 					ps2.setInt(2, 2);
 					try (ResultSet rset2 = ps2.executeQuery())
 					{
-						_magicalSpawns = new FastList<>();
+						_magicalSpawns = new ArrayList<>();
 						
 						while (rset2.next())
 						{
@@ -636,7 +634,7 @@
 					{
 						ps2.clearParameters();
 						
-						_dukeFinalSpawns = new FastList<>();
+						_dukeFinalSpawns = new ArrayList<>();
 						
 						while (rset2.next())
 						{
@@ -695,7 +693,7 @@
 					ps2.setInt(2, 6);
 					try (ResultSet rs2 = ps2.executeQuery())
 					{
-						_emperorsGraveSpawns = new FastList<>();
+						_emperorsGraveSpawns = new ArrayList<>();
 						
 						while (rs2.next())
 						{
@@ -1071,7 +1069,7 @@
 		
 		if (Config.FS_PARTY_MEMBER_COUNT > 1)
 		{
-			List<L2PcInstance> members = new FastList<>();
+			List<L2PcInstance> members = new ArrayList<>();
 			for (L2PcInstance mem : player.getParty().getMembers())
 			{
 				if (!mem.isDead() && Util.checkIfInRange(700, player, mem, true))
@@ -1105,7 +1103,7 @@
 		}
 		if ((Config.FS_PARTY_MEMBER_COUNT <= 1) && player.isInParty())
 		{
-			List<L2PcInstance> members = new FastList<>();
+			List<L2PcInstance> members = new ArrayList<>();
 			for (L2PcInstance mem : player.getParty().getMembers())
 			{
 				if (!mem.isDead() && Util.checkIfInRange(700, player, mem, true))
@@ -1184,7 +1182,7 @@
 		}
 		
 		List<L2Spawn> monsterList;
-		List<L2SepulcherMonsterInstance> mobs = new FastList<>();
+		List<L2SepulcherMonsterInstance> mobs = new ArrayList<>();
 		L2Spawn keyBoxMobSpawn;
 		
 		if (Rnd.get(2) == 0)
Index: java/com/l2jserver/gameserver/model/actor/instance/L2ControlTowerInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2ControlTowerInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2ControlTowerInstance.java	(working copy)
@@ -18,11 +18,10 @@
  */
 package com.l2jserver.gameserver.model.actor.instance;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.enums.InstanceType;
 import com.l2jserver.gameserver.model.L2Spawn;
 import com.l2jserver.gameserver.model.actor.L2Character;
@@ -86,7 +85,7 @@
 			{
 				if (_guards == null)
 				{
-					_guards = new FastList<>();
+					_guards = new ArrayList<>();
 				}
 			}
 		}
Index: java/com/l2jserver/gameserver/ItemsAutoDestroy.java
===================================================================
--- java/com/l2jserver/gameserver/ItemsAutoDestroy.java	(revision 177)
+++ java/com/l2jserver/gameserver/ItemsAutoDestroy.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.enums.ItemLocation;
 import com.l2jserver.gameserver.instancemanager.ItemsOnGroundManager;
@@ -30,7 +29,7 @@
 
 public final class ItemsAutoDestroy
 {
-	private final List<L2ItemInstance> _items = new FastList<>();
+	private final List<L2ItemInstance> _items = new ArrayList<>();
 	
 	protected ItemsAutoDestroy()
 	{
Index: java/com/l2jserver/gameserver/datatables/ItemTable.java
===================================================================
--- java/com/l2jserver/gameserver/datatables/ItemTable.java	(revision 177)
+++ java/com/l2jserver/gameserver/datatables/ItemTable.java	(working copy)
@@ -23,6 +23,7 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.util.Collection;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ScheduledFuture;
@@ -30,8 +31,6 @@
 import java.util.logging.LogRecord;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -61,7 +60,7 @@
 	private static Logger LOGGER = Logger.getLogger(ItemTable.class.getName());
 	private static Logger LOGGER_ITEMS = Logger.getLogger("item");
 	
-	public static final Map<String, Integer> _slots = new FastMap<>();
+	public static final Map<String, Integer> _slots = new HashMap<>();
 	
 	private L2Item[] _allTemplates;
 	private final Map<Integer, L2EtcItem> _etcItems;
@@ -120,9 +119,9 @@
 	
 	protected ItemTable()
 	{
-		_etcItems = new FastMap<>();
-		_armors = new FastMap<>();
-		_weapons = new FastMap<>();
+		_etcItems = new HashMap<>();
+		_armors = new HashMap<>();
+		_weapons = new HashMap<>();
 		load();
 	}
 	
Index: dist/game/data/scripts/handlers/telnethandlers/DebugHandler.java
===================================================================
--- dist/game/data/scripts/handlers/telnethandlers/DebugHandler.java	(revision 178)
+++ dist/game/data/scripts/handlers/telnethandlers/DebugHandler.java	(working copy)
@@ -22,19 +22,11 @@
 import java.io.FileOutputStream;
 import java.io.OutputStreamWriter;
 import java.io.PrintWriter;
-import java.lang.management.ManagementFactory;
-import java.lang.management.ThreadInfo;
-import java.lang.management.ThreadMXBean;
 import java.net.Socket;
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
-import java.util.Map;
-import java.util.Map.Entry;
 import java.util.StringTokenizer;
 
-import javolution.util.FastComparator;
-import javolution.util.FastTable;
-
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.LoginServerThread;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -202,76 +194,6 @@
 						sb.append('\n');
 					}
 					
-					sb.append('\n');
-					sb.append("## Threads Information ##\n");
-					Map<Thread, StackTraceElement[]> allThread = Thread.getAllStackTraces();
-					
-					FastTable<Entry<Thread, StackTraceElement[]>> entries = new FastTable<>();
-					entries.setValueComparator(new FastComparator<Entry<Thread, StackTraceElement[]>>()
-					{
-						private static final long serialVersionUID = 1L;
-						
-						@Override
-						public boolean areEqual(Entry<Thread, StackTraceElement[]> e1, Entry<Thread, StackTraceElement[]> e2)
-						{
-							return e1.getKey().getName().equals(e2.getKey().getName());
-						}
-						
-						@Override
-						public int compare(Entry<Thread, StackTraceElement[]> e1, Entry<Thread, StackTraceElement[]> e2)
-						{
-							return e1.getKey().getName().compareTo(e2.getKey().getName());
-						}
-						
-						@Override
-						public int hashCodeOf(Entry<Thread, StackTraceElement[]> e)
-						{
-							return e.hashCode();
-						}
-						
-					});
-					entries.addAll(allThread.entrySet());
-					entries.sort();
-					for (Entry<Thread, StackTraceElement[]> entry : entries)
-					{
-						StackTraceElement[] stes = entry.getValue();
-						Thread t = entry.getKey();
-						sb.append("--------------\n");
-						sb.append(t.toString() + " (" + t.getId() + ")\n");
-						sb.append("State: " + t.getState() + '\n');
-						sb.append("isAlive: " + t.isAlive() + " | isDaemon: " + t.isDaemon() + " | isInterrupted: " + t.isInterrupted() + '\n');
-						sb.append('\n');
-						for (StackTraceElement ste : stes)
-						{
-							sb.append(ste.toString());
-							sb.append('\n');
-						}
-						sb.append('\n');
-					}
-					
-					sb.append('\n');
-					ThreadMXBean mbean = ManagementFactory.getThreadMXBean();
-					long[] ids = findDeadlockedThreads(mbean);
-					if ((ids != null) && (ids.length > 0))
-					{
-						Thread[] threads = new Thread[ids.length];
-						for (int i = 0; i < threads.length; i++)
-						{
-							threads[i] = findMatchingThread(mbean.getThreadInfo(ids[i]));
-						}
-						sb.append("Deadlocked Threads:\n");
-						sb.append("-------------------\n");
-						for (Thread thread : threads)
-						{
-							System.err.println(thread);
-							for (StackTraceElement ste : thread.getStackTrace())
-							{
-								sb.append("\t" + ste);
-								sb.append('\n');
-							}
-						}
-					}
-					
 					sb.append("\n\n## Thread Pool Manager Statistics ##\n");
 					for (String line : ThreadPoolManager.getInstance().getStats())
 					{
@@ -330,29 +252,6 @@
 		return false;
 	}
 	
-	private long[] findDeadlockedThreads(ThreadMXBean mbean)
-	{
-		// JDK 1.5 only supports the findMonitorDeadlockedThreads()
-		// method, so you need to comment out the following three lines
-		if (mbean.isSynchronizerUsageSupported())
-		{
-			return mbean.findDeadlockedThreads();
-		}
-		return mbean.findMonitorDeadlockedThreads();
-	}
-	
-	private Thread findMatchingThread(ThreadInfo inf)
-	{
-		for (Thread thread : Thread.getAllStackTraces().keySet())
-		{
-			if (thread.getId() == inf.getThreadId())
-			{
-				return thread;
-			}
-		}
-		throw new IllegalStateException("Deadlocked Thread not found");
-	}
-	
 	public String getServerStatus()
 	{
 		int playerCount = 0, objectCount = 0;
Index: java/com/l2jserver/gameserver/datatables/MerchantPriceConfigTable.java
===================================================================
--- java/com/l2jserver/gameserver/datatables/MerchantPriceConfigTable.java	(revision 177)
+++ java/com/l2jserver/gameserver/datatables/MerchantPriceConfigTable.java	(working copy)
@@ -20,6 +20,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
@@ -27,8 +28,6 @@
 import javax.xml.parsers.DocumentBuilderFactory;
 import javax.xml.parsers.ParserConfigurationException;
 
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.Node;
 import org.xml.sax.SAXException;
@@ -54,7 +53,7 @@
 	
 	private static final String MPCS_FILE = "MerchantPriceConfig.xml";
 	
-	private final Map<Integer, MerchantPriceConfig> _mpcs = new FastMap<>();
+	private final Map<Integer, MerchantPriceConfig> _mpcs = new HashMap<>();
 	private MerchantPriceConfig _defaultMpc;
 	
 	public MerchantPriceConfig getMerchantPriceConfig(L2MerchantInstance npc)
Index: java/com/l2jserver/gameserver/model/StatsSet.java
===================================================================
--- java/com/l2jserver/gameserver/model/StatsSet.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/StatsSet.java	(working copy)
@@ -21,13 +21,12 @@
 import java.time.Duration;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.model.holders.MinionHolder;
 import com.l2jserver.gameserver.model.holders.SkillHolder;
 import com.l2jserver.gameserver.model.interfaces.IParserAdvUtils;
@@ -48,7 +47,7 @@
 	
 	public StatsSet()
 	{
-		this(new FastMap<String, Object>());
+		this(new HashMap<String, Object>());
 	}
 	
 	public StatsSet(Map<String, Object> map)
Index: java/com/l2jserver/gameserver/model/entity/Hero.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Hero.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Hero.java	(working copy)
@@ -24,18 +24,17 @@
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collections;
 import java.util.Date;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.cache.HtmCache;
@@ -77,14 +76,14 @@
 	// delete hero items
 	private static final String DELETE_ITEMS = "DELETE FROM items WHERE item_id IN (6842, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 9388, 9389, 9390) AND owner_id NOT IN (SELECT charId FROM characters WHERE accesslevel > 0)";
 	
-	private static final Map<Integer, StatsSet> _heroes = new FastMap<>();
-	private static final Map<Integer, StatsSet> _completeHeroes = new FastMap<>();
+	private static final Map<Integer, StatsSet> _heroes = new HashMap<>();
+	private static final Map<Integer, StatsSet> _completeHeroes = new HashMap<>();
 	
-	private static final Map<Integer, StatsSet> _herocounts = new FastMap<>();
-	private static final Map<Integer, List<StatsSet>> _herofights = new FastMap<>();
+	private static final Map<Integer, StatsSet> _herocounts = new HashMap<>();
+	private static final Map<Integer, List<StatsSet>> _herofights = new HashMap<>();
 	
-	private static final Map<Integer, List<StatsSet>> _herodiary = new FastMap<>();
-	private static final Map<Integer, String> _heroMessage = new FastMap<>();
+	private static final Map<Integer, List<StatsSet>> _herodiary = new HashMap<>();
+	private static final Map<Integer, String> _heroMessage = new HashMap<>();
 	
 	public static final String COUNT = "count";
 	public static final String PLAYED = "played";
@@ -235,7 +234,7 @@
 	
 	public void loadDiary(int charId)
 	{
-		final List<StatsSet> _diary = new FastList<>();
+		final List<StatsSet> _diary = new ArrayList<>();
 		int diaryentries = 0;
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			PreparedStatement statement = con.prepareStatement("SELECT * FROM  heroes_diary WHERE charId=? ORDER BY time ASC"))
@@ -290,7 +289,7 @@
 	
 	public void loadFights(int charId)
 	{
-		final List<StatsSet> _fights = new FastList<>();
+		final List<StatsSet> _fights = new ArrayList<>();
 		StatsSet _herocountdata = new StatsSet();
 		Calendar _data = Calendar.getInstance();
 		_data.set(Calendar.DAY_OF_MONTH, 1);
@@ -464,7 +463,7 @@
 				
 				if (!_mainlist.isEmpty())
 				{
-					FastList<StatsSet> _list = FastList.newInstance();
+					final ArrayList<StatsSet> _list = new ArrayList<>();
 					_list.addAll(_mainlist);
 					Collections.reverse(_list);
 					
@@ -516,8 +515,6 @@
 					}
 					
 					DiaryReply.replace("%list%", fList.toString());
-					
-					FastList.recycle(_list);
 				}
 				else
 				{
@@ -671,7 +668,7 @@
 			return;
 		}
 		
-		Map<Integer, StatsSet> heroes = new FastMap<>();
+		Map<Integer, StatsSet> heroes = new HashMap<>();
 		
 		for (StatsSet hero : newHeroes)
 		{
Index: java/com/l2jserver/gameserver/model/L2CommandChannel.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2CommandChannel.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2CommandChannel.java	(working copy)
@@ -19,10 +19,9 @@
 package com.l2jserver.gameserver.model;
 
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.function.Function;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.model.actor.L2Character;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -50,7 +49,7 @@
 	{
 		_commandLeader = leader;
 		L2Party party = leader.getParty();
-		_parties = new FastList<L2Party>().shared();
+		_parties = new CopyOnWriteArrayList<>();
 		_parties.add(party);
 		_channelLvl = party.getLevel();
 		party.setCommandChannel(this);
@@ -164,7 +163,7 @@
 	@Override
 	public List<L2PcInstance> getMembers()
 	{
-		List<L2PcInstance> members = new FastList<L2PcInstance>().shared();
+		List<L2PcInstance> members = new CopyOnWriteArrayList<>();
 		for (L2Party party : getPartys())
 		{
 			members.addAll(party.getMembers());
Index: java/com/l2jserver/gameserver/util/Util.java
===================================================================
--- java/com/l2jserver/gameserver/util/Util.java	(revision 177)
+++ java/com/l2jserver/gameserver/util/Util.java	(working copy)
@@ -24,6 +24,7 @@
 import java.text.DecimalFormatSymbols;
 import java.text.NumberFormat;
 import java.text.SimpleDateFormat;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Date;
 import java.util.List;
@@ -31,9 +32,6 @@
 import java.util.StringTokenizer;
 import java.util.logging.Logger;
 
-import javolution.text.TextBuilder;
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -309,7 +307,7 @@
 	 */
 	public static String implodeString(Iterable<String> strArray, String strDelim)
 	{
-		final TextBuilder sbString = TextBuilder.newInstance();
+		final StringBuilder sbString = new StringBuilder();
 		
 		for (String strValue : strArray)
 		{
@@ -318,7 +316,6 @@
 		}
 		
 		String result = sbString.toString();
-		TextBuilder.recycle(sbString);
 		return result;
 	}
 	
@@ -715,7 +712,7 @@
 	public static void fillMultiEditContent(L2PcInstance activeChar, String text)
 	{
 		text = text.replaceAll("<br>", Config.EOL);
-		List<String> arg = new FastList<>();
+		List<String> arg = new ArrayList<>();
 		arg.add("0");
 		arg.add("0");
 		arg.add("0");
Index: java/com/l2jserver/gameserver/instancemanager/MailManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/MailManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/MailManager.java	(working copy)
@@ -23,6 +23,7 @@
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
@@ -30,8 +31,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.idfactory.IdFactory;
@@ -143,7 +142,7 @@
 	
 	public final List<Message> getInbox(int objectId)
 	{
-		final List<Message> inbox = new FastList<>();
+		final List<Message> inbox = new ArrayList<>();
 		for (Message msg : getMessages())
 		{
 			if ((msg != null) && (msg.getReceiverId() == objectId) && !msg.isDeletedByReceiver())
@@ -161,7 +160,7 @@
 	
 	public final List<Message> getOutbox(int objectId)
 	{
-		final List<Message> outbox = new FastList<>();
+		final List<Message> outbox = new ArrayList<>();
 		for (Message msg : getMessages())
 		{
 			if ((msg != null) && (msg.getSenderId() == objectId) && !msg.isDeletedBySender())
Index: dist/game/data/scripts/hellbound/AI/Zones/BaseTower/BaseTower.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/Zones/BaseTower/BaseTower.java	(revision 177)
+++ dist/game/data/scripts/hellbound/AI/Zones/BaseTower/BaseTower.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package hellbound.AI.Zones.BaseTower;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.data.xml.impl.DoorData;
@@ -42,7 +42,7 @@
 	// Skills
 	private static final SkillHolder DEATH_WORD = new SkillHolder(5256, 1);
 	// Misc
-	private static final Map<Integer, L2PcInstance> BODY_DESTROYER_TARGET_LIST = new FastMap<>();
+	private static final Map<Integer, L2PcInstance> BODY_DESTROYER_TARGET_LIST = new HashMap<>();
 	
 	public BaseTower()
 	{
Index: java/com/l2jserver/gameserver/communitybbs/BB/Post.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/BB/Post.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/BB/Post.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.communitybbs.Manager.PostBBSManager;
 
@@ -60,7 +59,7 @@
 	 */
 	public Post(String _PostOwner, int _PostOwnerID, long date, int tid, int _PostForumID, String txt)
 	{
-		_post = new FastList<>();
+		_post = new ArrayList<>();
 		CPost cp = new CPost();
 		cp.postId = 0;
 		cp.postOwner = _PostOwner;
@@ -96,7 +95,7 @@
 	
 	public Post(Topic t)
 	{
-		_post = new FastList<>();
+		_post = new ArrayList<>();
 		load(t);
 	}
 	
Index: java/com/l2jserver/gameserver/model/instancezone/InstanceWorld.java
===================================================================
--- java/com/l2jserver/gameserver/model/instancezone/InstanceWorld.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/instancezone/InstanceWorld.java	(working copy)
@@ -18,11 +18,10 @@
  */
 package com.l2jserver.gameserver.model.instancezone;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.instancemanager.InstanceManager;
 import com.l2jserver.gameserver.model.actor.L2Character;
 import com.l2jserver.gameserver.model.entity.Instance;
@@ -37,7 +36,7 @@
 {
 	private int _instanceId;
 	private int _templateId = -1;
-	private final List<Integer> _allowed = new FastList<>();
+	private final List<Integer> _allowed = new ArrayList<>();
 	private final AtomicInteger _status = new AtomicInteger();
 	
 	public List<Integer> getAllowed()
Index: dist/game/data/scripts/ai/npc/Teleports/NewbieTravelToken/NewbieTravelToken.java
===================================================================
--- dist/game/data/scripts/ai/npc/Teleports/NewbieTravelToken/NewbieTravelToken.java	(revision 177)
+++ dist/game/data/scripts/ai/npc/Teleports/NewbieTravelToken/NewbieTravelToken.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.npc.Teleports.NewbieTravelToken;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.model.Location;
@@ -39,7 +39,7 @@
 	// Item
 	private static final int NEWBIE_TRAVEL_TOKEN = 8542;
 	// NPC Id - Teleport Location
-	private static final Map<Integer, Location> DATA = new FastMap<>();
+	private static final Map<Integer, Location> DATA = new HashMap<>();
 	
 	private NewbieTravelToken()
 	{
Index: dist/game/data/scripts/gracia/AI/SeedOfAnnihilation/SeedOfAnnihilation.java
===================================================================
--- dist/game/data/scripts/gracia/AI/SeedOfAnnihilation/SeedOfAnnihilation.java	(revision 177)
+++ dist/game/data/scripts/gracia/AI/SeedOfAnnihilation/SeedOfAnnihilation.java	(working copy)
@@ -19,9 +19,9 @@
 package gracia.AI.SeedOfAnnihilation;
 
 import java.util.Calendar;
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.datatables.SkillData;
@@ -41,7 +41,7 @@
  */
 public class SeedOfAnnihilation extends AbstractNpcAI
 {
-	private static final Map<Integer, Location> _teleportZones = new FastMap<>();
+	private static final Map<Integer, Location> _teleportZones = new HashMap<>();
 	private static final int ANNIHILATION_FURNACE = 18928;
 	
 	// Strength, Agility, Wisdom
Index: java/com/l2jserver/gameserver/network/clientpackets/MultiSellChoose.java
===================================================================
--- java/com/l2jserver/gameserver/network/clientpackets/MultiSellChoose.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/clientpackets/MultiSellChoose.java	(working copy)
@@ -20,8 +20,6 @@
 
 import java.util.ArrayList;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.data.xml.impl.MultisellData;
 import com.l2jserver.gameserver.model.Elementals;
@@ -216,7 +214,7 @@
 					}
 				}
 				
-				FastList<L2Augmentation> augmentation = FastList.newInstance();
+				ArrayList<L2Augmentation> augmentation = new ArrayList<>();
 				Elementals[] elemental = null;
 				/** All ok, remove items and add final product */
 				
@@ -455,7 +453,7 @@
 				}
 				finally
 				{
-					FastList.recycle(augmentation);
+					augmentation.clear(); // ?
 				}
 				
 				// finally, give the tax to the castle...
Index: java/com/l2jserver/gameserver/model/MobGroup.java
===================================================================
--- java/com/l2jserver/gameserver/model/MobGroup.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/MobGroup.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.ai.CtrlIntention;
 import com.l2jserver.gameserver.ai.L2ControllableMobAI;
 import com.l2jserver.gameserver.datatables.SpawnTable;
@@ -68,7 +67,7 @@
 	{
 		if (_mobs == null)
 		{
-			_mobs = new FastList<>();
+			_mobs = new ArrayList<>();
 		}
 		
 		return _mobs;
@@ -370,7 +369,7 @@
 	
 	protected void removeDead()
 	{
-		List<L2ControllableMobInstance> deadMobs = new FastList<>();
+		List<L2ControllableMobInstance> deadMobs = new ArrayList<>();
 		
 		for (L2ControllableMobInstance mobInst : getMobs())
 		{
Index: java/com/l2jserver/gameserver/model/entity/Instance.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Instance.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/entity/Instance.java	(working copy)
@@ -28,15 +28,13 @@
 import java.util.Map;
 import java.util.Objects;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
 import javax.xml.parsers.DocumentBuilderFactory;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -82,8 +80,8 @@
 	private int _ejectTime = Config.EJECT_DEAD_PLAYER_TIME;
 	/** Allow random walk for NPCs, global parameter. */
 	private boolean _allowRandomWalk = true;
-	private final List<Integer> _players = new FastList<Integer>().shared();
-	private final List<L2Npc> _npcs = new FastList<L2Npc>().shared();
+	private final List<Integer> _players = new CopyOnWriteArrayList<>();
+	private final List<L2Npc> _npcs = new CopyOnWriteArrayList<>();
 	private final Map<Integer, L2DoorInstance> _doors = new ConcurrentHashMap<>();
 	private final Map<String, List<L2Spawn>> _manualSpawn = new HashMap<>();
 	private Location _spawnLoc = null;
@@ -104,7 +102,7 @@
 	private final List<Integer> _exceptionList = new ArrayList<>();
 	
 	protected ScheduledFuture<?> _checkTimeUpTask = null;
-	protected final Map<Integer, ScheduledFuture<?>> _ejectDeadTasks = new FastMap<>();
+	protected final Map<Integer, ScheduledFuture<?>> _ejectDeadTasks = new HashMap<>();
 	
 	public Instance(int id)
 	{
Index: java/com/l2jserver/gameserver/model/multisell/PreparedListContainer.java
===================================================================
--- java/com/l2jserver/gameserver/model/multisell/PreparedListContainer.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/multisell/PreparedListContainer.java	(working copy)
@@ -20,8 +20,6 @@
 
 import java.util.ArrayList;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.L2Npc;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 import com.l2jserver.gameserver.model.items.L2Armor;
@@ -66,8 +64,8 @@
 				items = player.getInventory().getUniqueItems(false, false, false);
 			}
 			
-			// size is not known - using FastList
-			_entries = new FastList<>();
+			// size is not known - using ArrayList
+			_entries = new ArrayList<>();
 			for (L2ItemInstance item : items)
 			{
 				// only do the match up on equippable items that are not currently equipped
Index: java/com/l2jserver/util/StringUtil.java
===================================================================
--- java/com/l2jserver/util/StringUtil.java	(revision 177)
+++ java/com/l2jserver/util/StringUtil.java	(working copy)
@@ -141,43 +141,43 @@
  * <br>
  * <h2>How much faster is it?</h2><br>
  * Here are some results of my tests. Count is number of strings concatenated. Don't take the numbers as 100% true as the numbers are affected by other programs running on my computer at the same time. Anyway, from the results it is obvious that using StringBuilder with predefined size is the
- * fastest (and also most memory efficient) solution. It is about 5 times faster when concatenating 7 strings, compared to TextBuilder. Also, with more strings concatenated, the difference between StringBuilder and TextBuilder gets larger. In code, there are many cases, where there are concatenated
+ * fastest (and also most memory efficient) solution. It is about 5 times faster when concatenating 7 strings, compared to StringBuilder. Also, with more strings concatenated, the difference between StringBuilder and StringBuilder gets larger. In code, there are many cases, where there are concatenated
  * 50+ strings so the time saving is even greater.<br>
  * 
  * <pre>
  * Count: 2
- * TextBuilder: 1893
- * TextBuilder with size: 1703
+ * StringBuilder: 1893
+ * StringBuilder with size: 1703
  * String: 1033
  * StringBuilder: 993
  * StringBuilder with size: 1024
  * Count: 3
- * TextBuilder: 1973
- * TextBuilder with size: 1872
+ * StringBuilder: 1973
+ * StringBuilder with size: 1872
  * String: 2583
  * StringBuilder: 1633
  * StringBuilder with size: 1156
  * Count: 4
- * TextBuilder: 2188
- * TextBuilder with size: 2229
+ * StringBuilder: 2188
+ * StringBuilder with size: 2229
  * String: 4207
  * StringBuilder: 1816
  * StringBuilder with size: 1444
  * Count: 5
- * TextBuilder: 9185
- * TextBuilder with size: 9464
+ * StringBuilder: 9185
+ * StringBuilder with size: 9464
  * String: 6937
  * StringBuilder: 2745
  * StringBuilder with size: 1882
  * Count: 6
- * TextBuilder: 9785
- * TextBuilder with size: 10082
+ * StringBuilder: 9785
+ * StringBuilder with size: 10082
  * String: 9471
  * StringBuilder: 2889
  * StringBuilder with size: 1857
  * Count: 7
- * TextBuilder: 10169
- * TextBuilder with size: 10528
+ * StringBuilder: 10169
+ * StringBuilder with size: 10528
  * String: 12746
  * StringBuilder: 3081
  * StringBuilder with size: 2139
Index: java/com/l2jserver/gameserver/model/MobGroupTable.java
===================================================================
--- java/com/l2jserver/gameserver/model/MobGroupTable.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/MobGroupTable.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.model.actor.instance.L2ControllableMobInstance;
 
 /**
@@ -36,7 +35,7 @@
 	
 	protected MobGroupTable()
 	{
-		_groupMap = new FastMap<>();
+		_groupMap = new HashMap<>();
 	}
 	
 	public static MobGroupTable getInstance()
Index: java/com/l2jserver/gameserver/model/actor/L2Vehicle.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/L2Vehicle.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/L2Vehicle.java	(working copy)
@@ -18,13 +18,12 @@
  */
 package com.l2jserver.gameserver.model.actor;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -54,7 +53,7 @@
 public abstract class L2Vehicle extends L2Character
 {
 	protected int _dockId = 0;
-	protected final FastList<L2PcInstance> _passengers = new FastList<>();
+	protected final ArrayList<L2PcInstance> _passengers = new ArrayList<>();
 	protected Location _oustLoc = null;
 	private Runnable _engine = null;
 	
Index: java/com/l2jserver/gameserver/instancemanager/CastleManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/CastleManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/CastleManager.java	(working copy)
@@ -22,14 +22,13 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.InstanceListManager;
 import com.l2jserver.gameserver.model.L2Clan;
@@ -181,7 +180,7 @@
 	{
 		if (_castles == null)
 		{
-			_castles = new FastList<>();
+			_castles = new ArrayList<>();
 		}
 		return _castles;
 	}
Index: java/com/l2jserver/gameserver/pathfinding/geonodes/GeoPathFinding.java
===================================================================
--- java/com/l2jserver/gameserver/pathfinding/geonodes/GeoPathFinding.java	(revision 177)
+++ java/com/l2jserver/gameserver/pathfinding/geonodes/GeoPathFinding.java	(working copy)
@@ -28,15 +28,14 @@
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.model.L2World;
@@ -53,8 +52,8 @@
 public class GeoPathFinding extends PathFinding
 {
 	private static Logger _log = Logger.getLogger(GeoPathFinding.class.getName());
-	private static Map<Short, ByteBuffer> _pathNodes = new FastMap<>();
-	private static Map<Short, IntBuffer> _pathNodesIndex = new FastMap<>();
+	private static Map<Short, ByteBuffer> _pathNodes = new HashMap<>();
+	private static Map<Short, IntBuffer> _pathNodesIndex = new HashMap<>();
 	
 	public static GeoPathFinding getInstance()
 	{
@@ -226,7 +225,7 @@
 		short regoffset = getRegionOffset(getRegionX(node_x), getRegionY(node_y));
 		ByteBuffer pn = _pathNodes.get(regoffset);
 		
-		List<AbstractNode> Neighbors = new FastList<>(8);
+		List<AbstractNode> Neighbors = new ArrayList<>(8);
 		GeoNode newNode;
 		short new_node_x, new_node_y;
 		
Index: java/com/l2jserver/loginserver/GameServerThread.java
===================================================================
--- java/com/l2jserver/loginserver/GameServerThread.java	(revision 177)
+++ java/com/l2jserver/loginserver/GameServerThread.java	(working copy)
@@ -26,11 +26,10 @@
 import java.security.KeyPair;
 import java.security.interfaces.RSAPrivateKey;
 import java.security.interfaces.RSAPublicKey;
+import java.util.HashSet;
 import java.util.Set;
 import java.util.logging.Logger;
 
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.loginserver.GameServerTable.GameServerInfo;
 import com.l2jserver.loginserver.network.L2JGameServerPacketHandler;
@@ -64,7 +63,7 @@
 	private GameServerInfo _gsi;
 	
 	/** Authed Clients on a GameServer */
-	private final Set<String> _accountsOnGameServer = new FastSet<>();
+	private final Set<String> _accountsOnGameServer = new HashSet<>();
 	
 	private String _connectionIPAddress;
 	
Index: java/com/l2jserver/gameserver/model/zone/type/L2BossZone.java
===================================================================
--- java/com/l2jserver/gameserver/model/zone/type/L2BossZone.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/zone/type/L2BossZone.java	(working copy)
@@ -18,12 +18,11 @@
  */
 package com.l2jserver.gameserver.model.zone.type;
 
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.GameServer;
 import com.l2jserver.gameserver.instancemanager.GrandBossManager;
 import com.l2jserver.gameserver.instancemanager.ZoneManager;
@@ -57,13 +56,13 @@
 		// track the times that players got disconnected. Players are allowed
 		// to log back into the zone as long as their log-out was within _timeInvade time...
 		// <player objectId, expiration time in milliseconds>
-		private final Map<Integer, Long> _playerAllowedReEntryTimes = new FastMap<>();
+		private final Map<Integer, Long> _playerAllowedReEntryTimes = new HashMap<>();
 		
 		// track the players admitted to the zone who should be allowed back in
 		// after reboot/server downtime (outside of their control), within 30 of server restart
-		private final List<Integer> _playersAllowed = new FastList<>();
+		private final List<Integer> _playersAllowed = new ArrayList<>();
 		
-		private final List<L2Character> _raidList = new FastList<>();
+		private final List<L2Character> _raidList = new ArrayList<>();
 		
 		protected Settings()
 		{
Index: java/com/l2jserver/gameserver/engines/skills/DocumentSkill.java
===================================================================
--- java/com/l2jserver/gameserver/engines/skills/DocumentSkill.java	(revision 177)
+++ java/com/l2jserver/gameserver/engines/skills/DocumentSkill.java	(working copy)
@@ -19,11 +19,10 @@
 package com.l2jserver.gameserver.engines.skills;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -54,12 +53,12 @@
 		public StatsSet[] enchsets7;
 		public StatsSet[] enchsets8;
 		public int currentLevel;
-		public List<Skill> skills = new FastList<>();
-		public List<Skill> currentSkills = new FastList<>();
+		public List<Skill> skills = new ArrayList<>();
+		public List<Skill> currentSkills = new ArrayList<>();
 	}
 	
 	private SkillInfo _currentSkill;
-	private final List<Skill> _skillsInFile = new FastList<>();
+	private final List<Skill> _skillsInFile = new ArrayList<>();
 	
 	public DocumentSkill(File file)
 	{
@@ -1491,7 +1490,7 @@
 	private void makeSkills()
 	{
 		int count = 0;
-		_currentSkill.currentSkills = new FastList<>(_currentSkill.sets.length + _currentSkill.enchsets1.length + _currentSkill.enchsets2.length + _currentSkill.enchsets3.length + _currentSkill.enchsets4.length + _currentSkill.enchsets5.length + _currentSkill.enchsets6.length + _currentSkill.enchsets7.length + _currentSkill.enchsets8.length);
+		_currentSkill.currentSkills = new ArrayList<>(_currentSkill.sets.length + _currentSkill.enchsets1.length + _currentSkill.enchsets2.length + _currentSkill.enchsets3.length + _currentSkill.enchsets4.length + _currentSkill.enchsets5.length + _currentSkill.enchsets6.length + _currentSkill.enchsets7.length + _currentSkill.enchsets8.length);
 		StatsSet set;
 		for (int i = 0; i < _currentSkill.sets.length; i++)
 		{
Index: java/com/l2jserver/gameserver/model/entity/TvTEvent.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/TvTEvent.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/entity/TvTEvent.java	(working copy)
@@ -18,6 +18,7 @@
  */
 package com.l2jserver.gameserver.model.entity;
 
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -25,8 +26,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.cache.HtmCache;
 import com.l2jserver.gameserver.data.xml.impl.DoorData;
@@ -188,7 +187,7 @@
 		setState(EventState.STARTING);
 		
 		// Randomize and balance team distribution
-		Map<Integer, L2PcInstance> allParticipants = new FastMap<>();
+		Map<Integer, L2PcInstance> allParticipants = new HashMap<>();
 		allParticipants.putAll(_teams[0].getParticipatedPlayers());
 		allParticipants.putAll(_teams[1].getParticipatedPlayers());
 		_teams[0].cleanMe();
Index: java/com/l2jserver/gameserver/model/Petition.java
===================================================================
--- java/com/l2jserver/gameserver/model/Petition.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/Petition.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.enums.PetitionState;
 import com.l2jserver.gameserver.enums.PetitionType;
 import com.l2jserver.gameserver.idfactory.IdFactory;
@@ -44,7 +43,7 @@
 	private final PetitionType _type;
 	private PetitionState _state = PetitionState.PENDING;
 	private final String _content;
-	private final List<CreatureSay> _messageLog = new FastList<>();
+	private final List<CreatureSay> _messageLog = new ArrayList<>();
 	private final L2PcInstance _petitioner;
 	private L2PcInstance _responder;
 	
Index: java/com/l2jserver/gameserver/model/zone/type/L2EffectZone.java
===================================================================
--- java/com/l2jserver/gameserver/model/zone/type/L2EffectZone.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/zone/type/L2EffectZone.java	(working copy)
@@ -19,9 +19,8 @@
 package com.l2jserver.gameserver.model.zone.type;
 
 import java.util.Map.Entry;
+import java.util.concurrent.ConcurrentHashMap;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.datatables.SkillData;
 import com.l2jserver.gameserver.enums.InstanceType;
@@ -47,7 +46,7 @@
 	private int _reuse;
 	protected boolean _bypassConditions;
 	private boolean _isShowDangerIcon;
-	protected volatile FastMap<Integer, Integer> _skills;
+	protected volatile ConcurrentHashMap<Integer, Integer> _skills;
 	
 	public L2EffectZone(int id)
 	{
@@ -93,12 +92,12 @@
 		}
 		else if (name.equals("maxDynamicSkillCount"))
 		{
-			_skills = new FastMap<Integer, Integer>(Integer.parseInt(value)).shared();
+			_skills = new ConcurrentHashMap<>(Integer.parseInt(value));
 		}
 		else if (name.equals("skillIdLvl"))
 		{
 			String[] propertySplit = value.split(";");
-			_skills = new FastMap<>(propertySplit.length);
+			_skills = new ConcurrentHashMap<>(propertySplit.length);
 			for (String skill : propertySplit)
 			{
 				String[] skillSplit = skill.split("-");
@@ -204,7 +203,7 @@
 			{
 				if (_skills == null)
 				{
-					_skills = new FastMap<Integer, Integer>(3).shared();
+					_skills = new ConcurrentHashMap<>(3);
 				}
 			}
 		}
Index: java/com/l2jserver/gameserver/model/actor/instance/L2PetInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2PetInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2PetInstance.java	(working copy)
@@ -21,13 +21,12 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.Future;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -1031,7 +1030,7 @@
 			
 			int buff_index = 0;
 			
-			final List<Integer> storedSkills = new FastList<>();
+			final List<Integer> storedSkills = new ArrayList<>();
 			
 			// Store all effect data along with calculated remaining
 			if (storeEffects)
@@ -1077,7 +1076,7 @@
 					
 					if (!SummonEffectsTable.getInstance().getPetEffects().containsKey(getControlObjectId()))
 					{
-						SummonEffectsTable.getInstance().getPetEffects().put(getControlObjectId(), new FastList<SummonEffect>());
+						SummonEffectsTable.getInstance().getPetEffects().put(getControlObjectId(), new ArrayList<SummonEffect>());
 					}
 					
 					SummonEffectsTable.getInstance().getPetEffects().get(getControlObjectId()).add(SummonEffectsTable.getInstance().new SummonEffect(skill, info.getTime()));
@@ -1116,7 +1115,7 @@
 						{
 							if (!SummonEffectsTable.getInstance().getPetEffects().containsKey(getControlObjectId()))
 							{
-								SummonEffectsTable.getInstance().getPetEffects().put(getControlObjectId(), new FastList<SummonEffect>());
+								SummonEffectsTable.getInstance().getPetEffects().put(getControlObjectId(), new ArrayList<SummonEffect>());
 							}
 							
 							SummonEffectsTable.getInstance().getPetEffects().get(getControlObjectId()).add(SummonEffectsTable.getInstance().new SummonEffect(skill, effectCurTime));
Index: java/com/l2jserver/gameserver/model/actor/instance/L2TamedBeastInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2TamedBeastInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2TamedBeastInstance.java	(working copy)
@@ -20,11 +20,10 @@
 
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_IDLE;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.Future;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.ai.CtrlIntention;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -206,7 +205,7 @@
 	{
 		if (_beastSkills == null)
 		{
-			_beastSkills = new FastList<>();
+			_beastSkills = new ArrayList<>();
 		}
 		_beastSkills.add(skill);
 	}
Index: java/com/l2jserver/gameserver/model/entity/FortSiege.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/FortSiege.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/entity/FortSiege.java	(working copy)
@@ -21,14 +21,13 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.List;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -227,10 +226,10 @@
 		}
 	}
 	
-	private final List<L2SiegeClan> _attackerClans = new FastList<>();
+	private final List<L2SiegeClan> _attackerClans = new ArrayList<>();
 	
 	// Fort setting
-	protected FastList<L2Spawn> _commanders = new FastList<>();
+	protected ArrayList<L2Spawn> _commanders = new ArrayList<>();
 	protected final Fort _fort;
 	private boolean _isInProgress = false;
 	private FortSiegeGuardManager _siegeGuardManager;
@@ -553,7 +552,7 @@
 	@Override
 	public List<L2PcInstance> getAttackersInZone()
 	{
-		List<L2PcInstance> players = new FastList<>();
+		List<L2PcInstance> players = new ArrayList<>();
 		L2Clan clan;
 		for (L2SiegeClan siegeclan : getAttackerClans())
 		{
@@ -587,7 +586,7 @@
 	 */
 	public List<L2PcInstance> getOwnersInZone()
 	{
-		List<L2PcInstance> players = new FastList<>();
+		List<L2PcInstance> players = new ArrayList<>();
 		L2Clan clan;
 		if (getFort().getOwnerClan() != null)
 		{
@@ -625,7 +624,7 @@
 			L2Spawn spawn = instance.getSpawn();
 			if (spawn != null)
 			{
-				FastList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(getFort().getResidenceId());
+				ArrayList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(getFort().getResidenceId());
 				for (FortSiegeSpawn spawn2 : commanders)
 				{
 					if (spawn2.getId() == spawn.getId())
Index: java/com/l2jserver/gameserver/model/L2Spawn.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Spawn.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Spawn.java	(working copy)
@@ -19,14 +19,13 @@
 package com.l2jserver.gameserver.model;
 
 import java.lang.reflect.Constructor;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -80,8 +79,8 @@
 	private boolean _doRespawn;
 	/** If true then spawn is custom */
 	private boolean _customSpawn;
-	private static List<SpawnListener> _spawnListeners = new FastList<>();
-	private final FastList<L2Npc> _spawnedNpcs = new FastList<>();
+	private static List<SpawnListener> _spawnListeners = new ArrayList<>();
+	private final ArrayList<L2Npc> _spawnedNpcs = new ArrayList<>();
 	private Map<Integer, Location> _lastSpawnPoints;
 	private boolean _isNoRndWalk = false; // Is no random walk
 	
@@ -779,13 +778,13 @@
 	{
 		if (!_spawnedNpcs.isEmpty())
 		{
-			return _spawnedNpcs.getLast();
+			return _spawnedNpcs.get(_spawnedNpcs.size() - 1);
 		}
 		
 		return null;
 	}
 	
-	public final FastList<L2Npc> getSpawnedNpcs()
+	public final ArrayList<L2Npc> getSpawnedNpcs()
 	{
 		return _spawnedNpcs;
 	}
Index: java/com/l2jserver/loginserver/GameServerTable.java
===================================================================
--- java/com/l2jserver/loginserver/GameServerTable.java	(revision 177)
+++ java/com/l2jserver/loginserver/GameServerTable.java	(working copy)
@@ -19,8 +19,6 @@
 package com.l2jserver.loginserver;
 
 import java.io.File;
-import java.io.FileInputStream;
-import java.io.InputStream;
 import java.math.BigInteger;
 import java.net.InetAddress;
 import java.net.UnknownHostException;
@@ -36,10 +34,13 @@
 import java.util.Map;
 import java.util.logging.Logger;
 
-import javolution.io.UTF8StreamReader;
-import javolution.xml.stream.XMLStreamConstants;
-import javolution.xml.stream.XMLStreamReaderImpl;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
 
+import org.w3c.dom.Document;
+import org.w3c.dom.NamedNodeMap;
+import org.w3c.dom.Node;
+
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.loginserver.network.gameserverpackets.ServerStatus;
@@ -81,29 +82,29 @@
 	 */
 	private void loadGameServerNames()
 	{
-		final File xml = new File(Config.DATAPACK_ROOT, "data/servername.xml");
-		try (InputStream in = new FileInputStream(xml);
-			UTF8StreamReader utf8 = new UTF8StreamReader())
+		final File file = new File(Config.DATAPACK_ROOT + "/data/servername.xml");
+		final DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+		try
 		{
-			final XMLStreamReaderImpl xpp = new XMLStreamReaderImpl();
-			xpp.setInput(utf8.setInput(in));
-			for (int e = xpp.getEventType(); e != XMLStreamConstants.END_DOCUMENT; e = xpp.next())
+			final DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
+			final Document document = documentBuilder.parse(file);
+			final Node node = document.getFirstChild();
+			for (Node n = node.getFirstChild(); n != null; n = n.getNextSibling())
 			{
-				if (e == XMLStreamConstants.START_ELEMENT)
+				if (n.getNodeName().equals("server"))
 				{
-					if (xpp.getLocalName().toString().equals("server"))
-					{
-						Integer id = Integer.valueOf(xpp.getAttributeValue(null, "id").toString());
-						String name = xpp.getAttributeValue(null, "name").toString();
-						_serverNames.put(id, name);
-					}
+					NamedNodeMap attrs = n.getAttributes();
+					
+					int id = Integer.parseInt(attrs.getNamedItem("id").getNodeValue());
+					String name = attrs.getNamedItem("name").getNodeValue();
+					
+					_serverNames.put(id, name);
 				}
 			}
-			xpp.close();
 		}
 		catch (Exception e)
 		{
-			_log.info(getClass().getSimpleName() + ": Cannot load " + xml.getAbsolutePath() + "!");
+			_log.info(getClass().getSimpleName() + ": Cannot load servername.xml!");
 		}
 	}
 	
@@ -443,13 +444,20 @@
 		{
 			switch (_status)
 			{
-				case 0: return "Auto";
-				case 1: return "Good";
-				case 2: return "Normal";
-				case 3: return "Full";
-				case 4: return "Down";
-				case 5: return "GM Only";
-				default: return "Unknown";
+				case 0:
+					return "Auto";
+				case 1:
+					return "Good";
+				case 2:
+					return "Normal";
+				case 3:
+					return "Full";
+				case 4:
+					return "Down";
+				case 5:
+					return "GM Only";
+				default:
+					return "Unknown";
 			}
 		}
 		
Index: java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillList.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillList.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillList.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 public class ExEnchantSkillList extends L2GameServerPacket
 {
 	public enum EnchantSkillType
@@ -55,7 +54,7 @@
 	public ExEnchantSkillList(EnchantSkillType type)
 	{
 		_type = type;
-		_skills = new FastList<>();
+		_skills = new ArrayList<>();
 	}
 	
 	@Override
Index: java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressSiegeInfo.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressSiegeInfo.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressSiegeInfo.java	(working copy)
@@ -18,7 +18,7 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
-import javolution.util.FastList;
+import java.util.ArrayList;
 
 import com.l2jserver.gameserver.instancemanager.FortSiegeManager;
 import com.l2jserver.gameserver.model.FortSiegeSpawn;
@@ -41,7 +41,7 @@
 	{
 		_fortId = fort.getResidenceId();
 		_size = fort.getFortSize();
-		FastList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(_fortId);
+		ArrayList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(_fortId);
 		_csize = ((commanders == null) ? 0 : commanders.size());
 		_csize2 = fort.getSiege().getCommanders().size();
 	}
Index: java/com/l2jserver/status/Status.java
===================================================================
--- java/com/l2jserver/status/Status.java	(revision 177)
+++ java/com/l2jserver/status/Status.java	(working copy)
@@ -24,12 +24,11 @@
 import java.io.InputStream;
 import java.net.ServerSocket;
 import java.net.Socket;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Properties;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.Server;
 import com.l2jserver.util.Rnd;
@@ -123,7 +122,7 @@
 		}
 		statusServerSocket = new ServerSocket(statusPort);
 		_uptime = (int) System.currentTimeMillis();
-		_loginStatus = new FastList<>();
+		_loginStatus = new ArrayList<>();
 	}
 	
 	private String rndPW(int length)
@@ -154,7 +153,7 @@
 	
 	public void sendMessageToTelnets(String msg)
 	{
-		List<LoginStatusThread> lsToRemove = new FastList<>();
+		List<LoginStatusThread> lsToRemove = new ArrayList<>();
 		for (LoginStatusThread ls : _loginStatus)
 		{
 			if (ls.isInterrupted())
Index: dist/game/data/scripts/ai/fantasy_isle/Parade.java
===================================================================
--- dist/game/data/scripts/ai/fantasy_isle/Parade.java	(revision 177)
+++ dist/game/data/scripts/ai/fantasy_isle/Parade.java	(working copy)
@@ -20,9 +20,9 @@
 
 import java.text.SimpleDateFormat;
 import java.util.Iterator;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.ScheduledFuture;
 
-import javolution.util.FastList;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.GameTimeController;
@@ -127,7 +127,7 @@
 	protected ScheduledFuture<?> cleanTask;
 	
 	protected int npcIndex;
-	protected FastList<L2Npc> spawns;
+	protected CopyOnWriteArrayList<L2Npc> spawns;
 	
 	public Parade()
 	{
@@ -148,7 +148,7 @@
 	protected void load()
 	{
 		npcIndex = 0;
-		spawns = new FastList<L2Npc>().shared();
+		spawns = new CopyOnWriteArrayList<>();
 	}
 	
 	protected void clean()
Index: java/com/l2jserver/gameserver/communitybbs/Manager/ForumsBBSManager.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/Manager/ForumsBBSManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/Manager/ForumsBBSManager.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.communitybbs.BB.Forum;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -42,7 +41,7 @@
 	 */
 	protected ForumsBBSManager()
 	{
-		_table = new FastList<>();
+		_table = new ArrayList<>();
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			Statement s = con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT forum_id FROM forums WHERE forum_type = 0"))
Index: java/com/l2jserver/gameserver/instancemanager/FortManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/FortManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/FortManager.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.InstanceListManager;
 import com.l2jserver.gameserver.model.L2Clan;
@@ -159,7 +158,7 @@
 	{
 		if (_forts == null)
 		{
-			_forts = new FastList<>();
+			_forts = new ArrayList<>();
 		}
 		return _forts;
 	}
Index: java/com/l2jserver/gameserver/model/L2SiegeClan.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2SiegeClan.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2SiegeClan.java	(working copy)
@@ -18,17 +18,16 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.enums.SiegeClanType;
 import com.l2jserver.gameserver.model.actor.L2Npc;
 
 public class L2SiegeClan
 {
 	private int _clanId = 0;
-	private List<L2Npc> _flag = new FastList<>();
+	private List<L2Npc> _flag = new ArrayList<>();
 	private int _numFlagsAdded = 0;
 	private SiegeClanType _type;
 	
@@ -88,7 +87,7 @@
 	{
 		if (_flag == null)
 		{
-			_flag = new FastList<>();
+			_flag = new ArrayList<>();
 		}
 		return _flag;
 	}
Index: java/com/l2jserver/gameserver/instancemanager/FortSiegeGuardManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/FortSiegeGuardManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/FortSiegeGuardManager.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
 import com.l2jserver.gameserver.model.L2Spawn;
@@ -38,7 +37,7 @@
 	private static final Logger _log = Logger.getLogger(FortSiegeGuardManager.class.getName());
 	
 	private final Fort _fort;
-	private final FastMap<Integer, FastList<L2Spawn>> _siegeGuards = new FastMap<>();
+	private final HashMap<Integer, ArrayList<L2Spawn>> _siegeGuards = new HashMap<>();
 	
 	public FortSiegeGuardManager(Fort fort)
 	{
@@ -52,7 +51,7 @@
 	{
 		try
 		{
-			final FastList<L2Spawn> monsterList = getSiegeGuardSpawn().get(getFort().getResidenceId());
+			final ArrayList<L2Spawn> monsterList = getSiegeGuardSpawn().get(getFort().getResidenceId());
 			if (monsterList != null)
 			{
 				for (L2Spawn spawnDat : monsterList)
@@ -82,7 +81,7 @@
 	{
 		try
 		{
-			final FastList<L2Spawn> monsterList = getSiegeGuardSpawn().get(getFort().getResidenceId());
+			final ArrayList<L2Spawn> monsterList = getSiegeGuardSpawn().get(getFort().getResidenceId());
 			
 			if (monsterList != null)
 			{
@@ -115,7 +114,7 @@
 			ps.setInt(1, fortId);
 			try (ResultSet rs = ps.executeQuery())
 			{
-				FastList<L2Spawn> siegeGuardSpawns = new FastList<>();
+				ArrayList<L2Spawn> siegeGuardSpawns = new ArrayList<>();
 				while (rs.next())
 				{
 					L2NpcTemplate template = NpcData.getInstance().getTemplate(rs.getInt("npcId"));
@@ -151,7 +150,7 @@
 		return _fort;
 	}
 	
-	public final FastMap<Integer, FastList<L2Spawn>> getSiegeGuardSpawn()
+	public final HashMap<Integer, ArrayList<L2Spawn>> getSiegeGuardSpawn()
 	{
 		return _siegeGuards;
 	}
Index: dist/game/data/scripts/handlers/admincommandhandlers/AdminServerInfo.java
===================================================================
--- dist/game/data/scripts/handlers/admincommandhandlers/AdminServerInfo.java	(revision 177)
+++ dist/game/data/scripts/handlers/admincommandhandlers/AdminServerInfo.java	(working copy)
@@ -26,8 +26,6 @@
 import java.util.Set;
 import java.util.concurrent.TimeUnit;
 
-import javolution.text.TextBuilder;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameServer;
 import com.l2jserver.gameserver.GameTimeController;
@@ -103,7 +101,7 @@
 	
 	private String buildTheardInfo(String category)
 	{
-		final TextBuilder tb = new TextBuilder();
+		final StringBuilder tb = new StringBuilder();
 		
 		tb.append("<table width=\"270\" border=\"0\" bgcolor=\"444444\">");
 		for (Entry<String, Object> info : ThreadPoolManager.getInstance().getStats(category).getSet().entrySet())
Index: java/com/l2jserver/gameserver/communitybbs/BB/Forum.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/BB/Forum.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/BB/Forum.java	(working copy)
@@ -21,14 +21,13 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.communitybbs.Manager.ForumsBBSManager;
 import com.l2jserver.gameserver.communitybbs.Manager.TopicBBSManager;
@@ -69,8 +68,8 @@
 	{
 		_forumId = Forumid;
 		_fParent = FParent;
-		_children = new FastList<>();
-		_topic = new FastMap<>();
+		_children = new ArrayList<>();
+		_topic = new HashMap<>();
 	}
 	
 	/**
@@ -89,8 +88,8 @@
 		_forumPerm = perm;
 		_fParent = parent;
 		_ownerID = OwnerID;
-		_children = new FastList<>();
-		_topic = new FastMap<>();
+		_children = new ArrayList<>();
+		_topic = new HashMap<>();
 		parent._children.add(this);
 		ForumsBBSManager.getInstance().addForum(this);
 		_loaded = true;
Index: java/com/l2jserver/gameserver/instancemanager/CHSiegeManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/CHSiegeManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/CHSiegeManager.java	(working copy)
@@ -21,11 +21,10 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.L2Clan;
@@ -46,7 +45,7 @@
 	private static final Logger _log = Logger.getLogger(CHSiegeManager.class.getName());
 	private static final String SQL_LOAD_HALLS = "SELECT * FROM siegable_clanhall";
 	
-	private final FastMap<Integer, SiegableHall> _siegableHalls = new FastMap<>();
+	private final HashMap<Integer, SiegableHall> _siegableHalls = new HashMap<>();
 	
 	protected CHSiegeManager()
 	{
@@ -87,7 +86,7 @@
 		}
 	}
 	
-	public FastMap<Integer, SiegableHall> getConquerableHalls()
+	public HashMap<Integer, SiegableHall> getConquerableHalls()
 	{
 		return _siegableHalls;
 	}
Index: java/com/l2jserver/gameserver/model/actor/instance/L2AuctioneerInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2AuctioneerInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2AuctioneerInstance.java	(working copy)
@@ -22,12 +22,11 @@
 
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.StringTokenizer;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.enums.InstanceType;
 import com.l2jserver.gameserver.instancemanager.ClanHallAuctionManager;
@@ -47,7 +46,7 @@
 	private static final int COND_BUSY_BECAUSE_OF_SIEGE = 1;
 	private static final int COND_REGULAR = 3;
 	
-	private final Map<Integer, Auction> _pendingAuctions = new FastMap<>();
+	private final Map<Integer, Auction> _pendingAuctions = new HashMap<>();
 	
 	public L2AuctioneerInstance(int objectId, L2NpcTemplate template)
 	{
Index: dist/game/data/scripts/ai/group_template/RandomSpawn.java
===================================================================
--- dist/game/data/scripts/ai/group_template/RandomSpawn.java	(revision 177)
+++ dist/game/data/scripts/ai/group_template/RandomSpawn.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.group_template;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -33,7 +33,7 @@
  */
 public final class RandomSpawn extends AbstractNpcAI
 {
-	private static Map<Integer, Location[]> SPAWN_POINTS = new FastMap<>();
+	private static Map<Integer, Location[]> SPAWN_POINTS = new HashMap<>();
 	static
 	{
 		// Keltas
Index: java/com/l2jserver/gameserver/script/ScriptPackage.java
===================================================================
--- java/com/l2jserver/gameserver/script/ScriptPackage.java	(revision 177)
+++ java/com/l2jserver/gameserver/script/ScriptPackage.java	(working copy)
@@ -19,14 +19,13 @@
 package com.l2jserver.gameserver.script;
 
 import java.io.IOException;
+import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.List;
 import java.util.logging.Logger;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 
 /**
@@ -42,8 +41,8 @@
 	
 	public ScriptPackage(ZipFile pack)
 	{
-		_scriptFiles = new FastList<>();
-		_otherFiles = new FastList<>();
+		_scriptFiles = new ArrayList<>();
+		_otherFiles = new ArrayList<>();
 		_name = pack.getName();
 		addFiles(pack);
 	}
Index: java/com/l2jserver/gameserver/model/L2Party.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Party.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Party.java	(working copy)
@@ -26,12 +26,11 @@
 import java.util.NoSuchElementException;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.Future;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -84,7 +83,7 @@
 	private static final Duration PARTY_POSITION_BROADCAST_INTERVAL = Duration.ofSeconds(12);
 	private static final Duration PARTY_DISTRIBUTION_TYPE_REQUEST_TIMEOUT = Duration.ofSeconds(15);
 	
-	private final FastList<L2PcInstance> _members;
+	private final CopyOnWriteArrayList<L2PcInstance> _members;
 	private boolean _pendingInvitation = false;
 	private long _pendingInviteTimeout;
 	private int _partyLvl = 0;
@@ -117,7 +116,7 @@
 	 */
 	public L2Party(L2PcInstance leader, PartyDistributionType partyDistributionType)
 	{
-		_members = new FastList<L2PcInstance>().shared();
+		_members = new CopyOnWriteArrayList<>();
 		_members.add(leader);
 		_partyLvl = leader.getLevel();
 		_distributionType = partyDistributionType;
@@ -161,7 +160,7 @@
 	 */
 	private L2PcInstance getCheckedRandomMember(int itemId, L2Character target)
 	{
-		List<L2PcInstance> availableMembers = new FastList<>();
+		List<L2PcInstance> availableMembers = new ArrayList<>();
 		for (L2PcInstance member : getMembers())
 		{
 			if (member.getInventory().validateCapacityByItemId(itemId) && Util.checkIfInRange(Config.ALT_PARTY_RANGE2, target, member, true))
@@ -365,8 +364,7 @@
 		
 		if (_positionBroadcastTask == null)
 		{
-			_positionBroadcastTask = ThreadPoolManager.getInstance().scheduleGeneralAtFixedRate(() ->
-			{
+			_positionBroadcastTask = ThreadPoolManager.getInstance().scheduleGeneralAtFixedRate(() -> {
 				if (_positionPacket == null)
 				{
 					_positionPacket = new PartyMemberPosition(this);
@@ -432,8 +430,7 @@
 			{
 				// Otherwise, delete the old sign, and apply it to the new target
 				_tacticalSigns.replace(tacticalSignId, target);
-				getMembers().forEach(m ->
-				{
+				getMembers().forEach(m -> {
 					m.sendPacket(new ExTacticalSign(tacticalTarget, 0));
 					m.sendPacket(new ExTacticalSign(target, tacticalSignId));
 				});
@@ -774,7 +771,7 @@
 		
 		// Check the number of party members that must be rewarded
 		// (The party member must be in range to receive its reward)
-		List<L2PcInstance> ToReward = FastList.newInstance();
+		List<L2PcInstance> ToReward = new ArrayList<>();
 		for (L2PcInstance member : membersList)
 		{
 			if (!Util.checkIfInRange(Config.ALT_PARTY_RANGE2, target, member, true))
@@ -797,8 +794,6 @@
 		{
 			member.addAdena("Party", count, player, true);
 		}
-		
-		FastList.recycle((FastList<?>) ToReward);
 	}
 	
 	/**
@@ -1049,7 +1044,7 @@
 	{
 		try
 		{
-			return _members.getFirst();
+			return _members.get(0);
 		}
 		catch (NoSuchElementException e)
 		{
Index: java/com/l2jserver/gameserver/RecipeController.java
===================================================================
--- java/com/l2jserver/gameserver/RecipeController.java	(revision 177)
+++ java/com/l2jserver/gameserver/RecipeController.java	(working copy)
@@ -21,10 +21,9 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.data.xml.impl.RecipeData;
 import com.l2jserver.gameserver.datatables.ItemTable;
@@ -57,11 +56,10 @@
 
 public class RecipeController
 {
-	protected static final FastMap<Integer, RecipeItemMaker> _activeMakers = new FastMap<>();
+	protected static final ConcurrentHashMap<Integer, RecipeItemMaker> _activeMakers = new ConcurrentHashMap<>();
 	
 	protected RecipeController()
 	{
-		_activeMakers.shared();
 	}
 	
 	public void requestBookOpen(L2PcInstance player, boolean isDwarvenCraft)
Index: java/com/l2jserver/gameserver/model/actor/instance/L2DoorInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2DoorInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2DoorInstance.java	(working copy)
@@ -18,13 +18,12 @@
  */
 package com.l2jserver.gameserver.model.actor.instance;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Set;
 import java.util.concurrent.Future;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.ai.L2CharacterAI;
 import com.l2jserver.gameserver.ai.L2DoorAI;
@@ -612,7 +611,7 @@
 	
 	public Collection<L2DefenderInstance> getKnownDefenders()
 	{
-		FastList<L2DefenderInstance> result = new FastList<>();
+		ArrayList<L2DefenderInstance> result = new ArrayList<>();
 		
 		Collection<L2Object> objs = getKnownList().getKnownObjects().values();
 		for (L2Object obj : objs)
Index: java/com/l2jserver/gameserver/model/events/AbstractScript.java
===================================================================
--- java/com/l2jserver/gameserver/model/events/AbstractScript.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/events/AbstractScript.java	(working copy)
@@ -24,18 +24,18 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArrayList;
+import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.ai.CtrlIntention;
@@ -143,7 +143,7 @@
 {
 	protected static final Logger _log = Logger.getLogger(AbstractScript.class.getName());
 	private final Map<ListenerRegisterType, Set<Integer>> _registeredIds = new ConcurrentHashMap<>();
-	private final List<AbstractEventListener> _listeners = new FastList<AbstractEventListener>().shared();
+	private final List<AbstractEventListener> _listeners = new CopyOnWriteArrayList<>();
 	
 	public AbstractScript()
 	{
@@ -291,7 +291,7 @@
 				{
 					if (!_registeredIds.containsKey(type))
 					{
-						_registeredIds.put(type, new FastSet<Integer>().shared());
+						_registeredIds.put(type, new CopyOnWriteArraySet<Integer>());
 					}
 					_registeredIds.get(type).addAll(ids);
 				}
@@ -1338,7 +1338,7 @@
 				
 				if (!_registeredIds.containsKey(registerType))
 				{
-					_registeredIds.put(registerType, new FastSet<Integer>().shared());
+					_registeredIds.put(registerType, new HashSet<Integer>());
 				}
 				_registeredIds.get(registerType).add(id);
 			}
@@ -1453,7 +1453,7 @@
 			}
 			if (!_registeredIds.containsKey(registerType))
 			{
-				_registeredIds.put(registerType, new FastSet<Integer>().shared());
+				_registeredIds.put(registerType, new HashSet<Integer>());
 			}
 			_registeredIds.get(registerType).addAll(ids);
 		}
@@ -2508,16 +2508,14 @@
 		{
 			if (includeCommandChannel && player.getParty().isInCommandChannel())
 			{
-				player.getParty().getCommandChannel().forEachMember(member ->
-				{
+				player.getParty().getCommandChannel().forEachMember(member -> {
 					actionForEachPlayer(member, npc, isSummon);
 					return true;
 				});
 			}
 			else if (includeParty)
 			{
-				player.getParty().forEachMember(member ->
-				{
+				player.getParty().forEachMember(member -> {
 					actionForEachPlayer(member, npc, isSummon);
 					return true;
 				});
Index: java/com/l2jserver/gameserver/model/itemcontainer/Inventory.java
===================================================================
--- java/com/l2jserver/gameserver/model/itemcontainer/Inventory.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/itemcontainer/Inventory.java	(working copy)
@@ -26,8 +26,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.xml.impl.ArmorSetsData;
@@ -130,7 +128,7 @@
 		ChangeRecorder(Inventory inventory)
 		{
 			_inventory = inventory;
-			_changed = new FastList<>();
+			_changed = new ArrayList<>();
 			_inventory.addPaperdollListener(this);
 		}
 		
Index: java/com/l2jserver/gameserver/instancemanager/InstanceManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/InstanceManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/InstanceManager.java	(working copy)
@@ -25,8 +25,6 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -42,12 +40,12 @@
  */
 public final class InstanceManager implements IXmlReader
 {
-	private static final Map<Integer, Instance> _instanceList = new FastMap<>();
-	private final Map<Integer, InstanceWorld> _instanceWorlds = new FastMap<>();
+	private static final Map<Integer, Instance> _instanceList = new HashMap<>();
+	private final Map<Integer, InstanceWorld> _instanceWorlds = new HashMap<>();
 	private int _dynamic = 300000;
 	// InstanceId Names
 	private static final Map<Integer, String> _instanceIdNames = new HashMap<>();
-	private final Map<Integer, Map<Integer, Long>> _playerInstanceTimes = new FastMap<>();
+	private final Map<Integer, Map<Integer, Long>> _playerInstanceTimes = new HashMap<>();
 	// SQL Queries
 	private static final String ADD_INSTANCE_TIME = "INSERT INTO character_instance_time (charId,instanceId,time) values (?,?,?) ON DUPLICATE KEY UPDATE time=?";
 	private static final String RESTORE_INSTANCE_TIMES = "SELECT instanceId,time FROM character_instance_time WHERE charId=?";
@@ -168,7 +166,7 @@
 		{
 			return; // already restored
 		}
-		_playerInstanceTimes.put(playerObjId, new FastMap<Integer, Long>());
+		_playerInstanceTimes.put(playerObjId, new HashMap<Integer, Long>());
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			PreparedStatement ps = con.prepareStatement(RESTORE_INSTANCE_TIMES))
 		{
Index: java/com/l2jserver/gameserver/communitybbs/Manager/TopicBBSManager.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/Manager/TopicBBSManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/Manager/TopicBBSManager.java	(working copy)
@@ -19,15 +19,14 @@
 package com.l2jserver.gameserver.communitybbs.Manager;
 
 import java.text.DateFormat;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Date;
 import java.util.List;
 import java.util.Map;
 import java.util.StringTokenizer;
+import java.util.concurrent.ConcurrentHashMap;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.communitybbs.BB.Forum;
 import com.l2jserver.gameserver.communitybbs.BB.Post;
 import com.l2jserver.gameserver.communitybbs.BB.Topic;
@@ -43,8 +42,8 @@
 	
 	protected TopicBBSManager()
 	{
-		_table = new FastList<>();
-		_maxId = new FastMap<Forum, Integer>().shared();
+		_table = new ArrayList<>();
+		_maxId = new ConcurrentHashMap<>();
 	}
 	
 	public void addTopic(Topic tt)
Index: java/com/l2jserver/gameserver/network/clientpackets/RequestPrivateStoreBuy.java
===================================================================
--- java/com/l2jserver/gameserver/network/clientpackets/RequestPrivateStoreBuy.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/clientpackets/RequestPrivateStoreBuy.java	(working copy)
@@ -19,8 +19,9 @@
 package com.l2jserver.gameserver.network.clientpackets;
 
 import static com.l2jserver.gameserver.model.actor.L2Npc.INTERACTION_DISTANCE;
-import javolution.util.FastSet;
 
+import java.util.HashSet;
+
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.data.sql.impl.OfflineTradersTable;
 import com.l2jserver.gameserver.enums.PrivateStoreType;
@@ -43,7 +44,7 @@
 	private static final int BATCH_LENGTH = 20; // length of the one item
 	
 	private int _storePlayerId;
-	private FastSet<ItemRequest> _items = null;
+	private HashSet<ItemRequest> _items = null;
 	
 	@Override
 	protected void readImpl()
@@ -54,7 +55,7 @@
 		{
 			return;
 		}
-		_items = new FastSet<>();
+		_items = new HashSet<>();
 		
 		for (int i = 0; i < count; i++)
 		{
Index: dist/game/data/scripts/ai/group_template/FeedableBeasts.java
===================================================================
--- dist/game/data/scripts/ai/group_template/FeedableBeasts.java	(revision 178)
+++ dist/game/data/scripts/ai/group_template/FeedableBeasts.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.group_template;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import quests.Q00020_BringUpWithLove.Q00020_BringUpWithLove;
 import quests.Q00655_AGrandPlanForTamingWildBeasts.Q00655_AGrandPlanForTamingWildBeasts;
 import ai.npc.AbstractNpcAI;
@@ -76,7 +76,7 @@
 	};
 	// @formatter:on
 	
-	private static final Map<Integer, Integer> MAD_COW_POLYMORPH = new FastMap<>();
+	private static final Map<Integer, Integer> MAD_COW_POLYMORPH = new HashMap<>();
 	static
 	{
 		MAD_COW_POLYMORPH.put(21824, 21468);
@@ -129,8 +129,8 @@
 		NpcStringId.ANIMALS_NEED_LOVE_TOO
 	};
 	
-	private static Map<Integer, Integer> _FeedInfo = new FastMap<>();
-	private static Map<Integer, GrowthCapableMob> _GrowthCapableMobs = new FastMap<>();
+	private static Map<Integer, Integer> _FeedInfo = new HashMap<>();
+	private static Map<Integer, GrowthCapableMob> _GrowthCapableMobs = new HashMap<>();
 	
 	// all mobs that grow by eating
 	private static class GrowthCapableMob
@@ -138,7 +138,7 @@
 		private final int _growthLevel;
 		private final int _chance;
 		
-		private final Map<Integer, int[][]> _spiceToMob = new FastMap<>();
+		private final Map<Integer, int[][]> _spiceToMob = new HashMap<>();
 		
 		public GrowthCapableMob(int growthLevel, int chance)
 		{
Index: .classpath
===================================================================
--- .classpath	(revision 177)
+++ .classpath	(working copy)
@@ -2,7 +2,6 @@
 <classpath>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
 	<classpathentry kind="lib" path="dist/libs/c3p0-0.9.5.jar"/>
-	<classpathentry kind="lib" path="dist/libs/javolution-5.5.1.jar" sourcepath="dist/libs/javolution-5.5.1-src.zip"/>
 	<classpathentry kind="lib" path="dist/libs/mysql-connector-java-5.1.34-bin.jar"/>
 	<classpathentry kind="lib" path="dist/libs/ecj-4.4.jar"/>
 	<classpathentry kind="lib" path="dist/libs/mchange-commons-java-0.2.9.jar"/>
Index: java/com/l2jserver/gameserver/model/olympiad/Olympiad.java
===================================================================
--- java/com/l2jserver/gameserver/model/olympiad/Olympiad.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/olympiad/Olympiad.java	(working copy)
@@ -36,9 +36,6 @@
 import java.util.logging.LogRecord;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -60,7 +57,7 @@
 	protected static final Logger _log = Logger.getLogger(Olympiad.class.getName());
 	protected static final Logger _logResults = Logger.getLogger("olympiad");
 	
-	private static final Map<Integer, StatsSet> _nobles = new FastMap<>();
+	private static final Map<Integer, StatsSet> _nobles = new HashMap<>();
 	protected static List<StatsSet> _heroesToBe;
 	private static final Map<Integer, Integer> _noblesRank = new HashMap<>();
 	
@@ -877,7 +874,7 @@
 			}
 		}
 		
-		_heroesToBe = new FastList<>();
+		_heroesToBe = new ArrayList<>();
 		
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			PreparedStatement statement = con.prepareStatement(OLYMPIAD_GET_HEROS))
Index: java/com/l2jserver/gameserver/model/entity/TvTEventTeam.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/TvTEventTeam.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/TvTEventTeam.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model.entity;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 
 /**
@@ -35,8 +34,8 @@
 	private int[] _coordinates = new int[3];
 	/** The points of the team<br> */
 	private short _points;
-	/** Name and instance of all participated players in FastMap<br> */
-	private Map<Integer, L2PcInstance> _participatedPlayers = new FastMap<>();
+	/** Name and instance of all participated players in HashMap<br> */
+	private Map<Integer, L2PcInstance> _participatedPlayers = new HashMap<>();
 	
 	/**
 	 * C'tor initialize the team<br>
@@ -98,7 +97,7 @@
 	public void cleanMe()
 	{
 		_participatedPlayers.clear();
-		_participatedPlayers = new FastMap<>();
+		_participatedPlayers = new HashMap<>();
 		_points = 0;
 	}
 	
@@ -150,7 +149,7 @@
 	}
 	
 	/**
-	 * Returns name and instance of all participated players in FastMap<br>
+	 * Returns name and instance of all participated players in HashMap<br>
 	 * <br>
 	 * @return Map<String, L2PcInstance>: map of players in this team<br>
 	 */
Index: java/com/l2jserver/gameserver/model/L2Radar.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Radar.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Radar.java	(working copy)
@@ -18,7 +18,7 @@
  */
 package com.l2jserver.gameserver.model;
 
-import javolution.util.FastList;
+import java.util.ArrayList;
 
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 import com.l2jserver.gameserver.network.serverpackets.RadarControl;
@@ -29,12 +29,12 @@
 public final class L2Radar
 {
 	private final L2PcInstance _player;
-	private final FastList<RadarMarker> _markers;
+	private final ArrayList<RadarMarker> _markers;
 	
 	public L2Radar(L2PcInstance player)
 	{
 		_player = player;
-		_markers = new FastList<>();
+		_markers = new ArrayList<>();
 	}
 	
 	// Add a marker to player's radar
Index: java/com/l2jserver/gameserver/model/entity/Fort.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Fort.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Fort.java	(working copy)
@@ -33,9 +33,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.FortUpdater;
@@ -81,14 +78,14 @@
 	private int _state = 0;
 	private int _castleId = 0;
 	private int _supplyLvL = 0;
-	private final FastMap<Integer, FortFunction> _function;
+	private final HashMap<Integer, FortFunction> _function;
 	private final ScheduledFuture<?>[] _FortUpdater = new ScheduledFuture<?>[2];
 	
 	// Spawn Data
 	private boolean _isSuspiciousMerchantSpawned = false;
-	private final FastList<L2Spawn> _siegeNpcs = new FastList<>();
-	private final FastList<L2Spawn> _npcCommanders = new FastList<>();
-	private final FastList<L2Spawn> _specialEnvoys = new FastList<>();
+	private final ArrayList<L2Spawn> _siegeNpcs = new ArrayList<>();
+	private final ArrayList<L2Spawn> _npcCommanders = new ArrayList<>();
+	private final ArrayList<L2Spawn> _specialEnvoys = new ArrayList<>();
 	
 	private final Map<Integer, Integer> _envoyCastles = new HashMap<>(2);
 	private final Set<Integer> _availableCastles = new HashSet<>(1);
@@ -247,7 +244,7 @@
 		super(fortId);
 		load();
 		loadFlagPoles();
-		_function = new FastMap<>();
+		_function = new HashMap<>();
 		if (getOwnerClan() != null)
 		{
 			setVisibleFlag(true);
Index: java/com/l2jserver/gameserver/util/MinionList.java
===================================================================
--- java/com/l2jserver/gameserver/util/MinionList.java	(revision 177)
+++ java/com/l2jserver/gameserver/util/MinionList.java	(working copy)
@@ -18,14 +18,13 @@
  */
 package com.l2jserver.gameserver.util;
 
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -58,7 +57,7 @@
 		}
 		
 		_master = pMaster;
-		_minionReferences = new FastList<L2MonsterInstance>().shared();
+		_minionReferences = new CopyOnWriteArrayList<>();
 	}
 	
 	/**
@@ -156,7 +155,7 @@
 		// if master has spawn and can respawn - try to reuse minions
 		if ((_reusedMinionReferences == null) && (_master.getTemplate().getParameters().getSet().get("SummonPrivateRate") == null) && !_master.getTemplate().getParameters().getMinionList("Privates").isEmpty() && (_master.getSpawn() != null) && _master.getSpawn().isRespawnEnabled())
 		{
-			_reusedMinionReferences = new FastList<L2MonsterInstance>().shared();
+			_reusedMinionReferences = new CopyOnWriteArrayList<>();
 		}
 	}
 	
@@ -426,7 +425,7 @@
 	
 	public final int lazyCountSpawnedMinionsGroups()
 	{
-		Set<Integer> seenGroups = new FastSet<>();
+		Set<Integer> seenGroups = new HashSet<>();
 		for (L2MonsterInstance minion : _minionReferences)
 		{
 			if (minion == null)
Index: java/com/l2jserver/gameserver/engines/items/DocumentItem.java
===================================================================
--- java/com/l2jserver/gameserver/engines/items/DocumentItem.java	(revision 177)
+++ java/com/l2jserver/gameserver/engines/items/DocumentItem.java	(working copy)
@@ -21,11 +21,10 @@
 import java.io.File;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationTargetException;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.Node;
 
@@ -40,7 +39,7 @@
 public final class DocumentItem extends DocumentBase
 {
 	private Item _currentItem = null;
-	private final List<L2Item> _itemsInFile = new FastList<>();
+	private final List<L2Item> _itemsInFile = new ArrayList<>();
 	
 	/**
 	 * @param file
Index: java/com/l2jserver/gameserver/instancemanager/SiegeManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/SiegeManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/SiegeManager.java	(working copy)
@@ -29,8 +29,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.datatables.SkillData;
@@ -270,7 +268,7 @@
 	
 	public final List<Siege> getSieges()
 	{
-		FastList<Siege> sieges = new FastList<>();
+		ArrayList<Siege> sieges = new ArrayList<>();
 		for (Castle castle : CastleManager.getInstance().getCastles())
 		{
 			sieges.add(castle.getSiege());
Index: java/com/l2jserver/gameserver/network/clientpackets/RequestPreviewItem.java
===================================================================
--- java/com/l2jserver/gameserver/network/clientpackets/RequestPreviewItem.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/clientpackets/RequestPreviewItem.java	(working copy)
@@ -18,11 +18,10 @@
  */
 package com.l2jserver.gameserver.network.clientpackets;
 
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.xml.impl.BuyListData;
@@ -166,7 +165,7 @@
 		}
 		
 		long totalPrice = 0;
-		Map<Integer, Integer> itemList = new FastMap<>();
+		Map<Integer, Integer> itemList = new HashMap<>();
 		
 		for (int i = 0; i < _count; i++)
 		{
Index: java/com/l2jserver/gameserver/instancemanager/ClanHallManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/ClanHallManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/ClanHallManager.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.sql.impl.ClanTable;
 import com.l2jserver.gameserver.model.L2Clan;
@@ -48,7 +47,7 @@
 	private final Map<Integer, AuctionableHall> _clanHall;
 	private final Map<Integer, AuctionableHall> _freeClanHall;
 	private final Map<Integer, AuctionableHall> _allAuctionableClanHalls;
-	private static Map<Integer, ClanHall> _allClanHalls = new FastMap<>();
+	private static Map<Integer, ClanHall> _allClanHalls = new HashMap<>();
 	private boolean _loaded = false;
 	
 	public boolean loaded()
@@ -58,9 +57,9 @@
 	
 	protected ClanHallManager()
 	{
-		_clanHall = new FastMap<>();
-		_freeClanHall = new FastMap<>();
-		_allAuctionableClanHalls = new FastMap<>();
+		_clanHall = new HashMap<>();
+		_freeClanHall = new HashMap<>();
+		_allAuctionableClanHalls = new HashMap<>();
 		load();
 	}
 	
Index: java/com/l2jserver/gameserver/model/CharEffectList.java
===================================================================
--- java/com/l2jserver/gameserver/model/CharEffectList.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/CharEffectList.java	(working copy)
@@ -31,8 +31,6 @@
 import java.util.function.Function;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.model.actor.L2Character;
 import com.l2jserver.gameserver.model.actor.L2Summon;
@@ -65,17 +63,17 @@
 {
 	private static final Logger _log = Logger.getLogger(CharEffectList.class.getName());
 	/** Map containing all effects from buffs for this effect list. */
-	private volatile FastMap<Integer, BuffInfo> _buffs;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _buffs;
 	/** Map containing all triggered skills for this effect list. */
-	private volatile FastMap<Integer, BuffInfo> _triggered;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _triggered;
 	/** Map containing all dances/songs for this effect list. */
-	private volatile FastMap<Integer, BuffInfo> _dances;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _dances;
 	/** Map containing all toggle for this effect list. */
-	private volatile FastMap<Integer, BuffInfo> _toggles;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _toggles;
 	/** Map containing all debuffs for this effect list. */
-	private volatile FastMap<Integer, BuffInfo> _debuffs;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _debuffs;
 	/** They bypass most of the actions, they are not included in most operations. */
-	private volatile FastMap<Integer, BuffInfo> _passives;
+	private volatile ConcurrentHashMap<Integer, BuffInfo> _passives;
 	/** Map containing the all stacked effect in progress for each abnormal type. */
 	private volatile Map<AbnormalType, BuffInfo> _stackedEffects;
 	/** Set containing all abnormal types that shouldn't be added to this creature effect list. */
@@ -118,8 +116,7 @@
 			{
 				if (_buffs == null)
 				{
-					_buffs = new FastMap<>();
-					_buffs.shared();
+					_buffs = new ConcurrentHashMap<>();
 				}
 			}
 		}
@@ -138,8 +135,7 @@
 			{
 				if (_triggered == null)
 				{
-					_triggered = new FastMap<>();
-					_triggered.shared();
+					_triggered = new ConcurrentHashMap<>();
 				}
 			}
 		}
@@ -158,8 +154,7 @@
 			{
 				if (_dances == null)
 				{
-					_dances = new FastMap<>();
-					_dances.shared();
+					_dances = new ConcurrentHashMap<>();
 				}
 			}
 		}
@@ -178,8 +173,7 @@
 			{
 				if (_toggles == null)
 				{
-					_toggles = new FastMap<>();
-					_toggles.shared();
+					_toggles = new ConcurrentHashMap<>();
 				}
 			}
 		}
@@ -198,8 +192,7 @@
 			{
 				if (_debuffs == null)
 				{
-					_debuffs = new FastMap<>();
-					_debuffs.shared();
+					_debuffs = new ConcurrentHashMap<>();
 				}
 			}
 		}
@@ -218,8 +211,7 @@
 			{
 				if (_passives == null)
 				{
-					_passives = new FastMap<>();
-					_passives.shared();
+					_passives = new ConcurrentHashMap<>();
 				}
 			}
 		}
Index: java/com/l2jserver/gameserver/model/actor/instance/L2ServitorInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2ServitorInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2ServitorInstance.java	(working copy)
@@ -21,6 +21,7 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -28,8 +29,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -299,7 +298,7 @@
 			
 			int buff_index = 0;
 			
-			final List<Integer> storedSkills = new FastList<>();
+			final List<Integer> storedSkills = new ArrayList<>();
 			
 			// Store all effect data along with calculated remaining
 			if (storeEffects)
@@ -358,7 +357,7 @@
 						}
 						if (!SummonEffectsTable.getInstance().getServitorEffects(getOwner()).containsKey(getReferenceSkill()))
 						{
-							SummonEffectsTable.getInstance().getServitorEffects(getOwner()).put(getReferenceSkill(), new FastList<SummonEffect>());
+							SummonEffectsTable.getInstance().getServitorEffects(getOwner()).put(getReferenceSkill(), new ArrayList<SummonEffect>());
 						}
 						
 						SummonEffectsTable.getInstance().getServitorEffects(getOwner()).get(getReferenceSkill()).add(SummonEffectsTable.getInstance().new SummonEffect(skill, info.getTime()));
@@ -414,7 +413,7 @@
 								}
 								if (!SummonEffectsTable.getInstance().getServitorEffects(getOwner()).containsKey(getReferenceSkill()))
 								{
-									SummonEffectsTable.getInstance().getServitorEffects(getOwner()).put(getReferenceSkill(), new FastList<SummonEffect>());
+									SummonEffectsTable.getInstance().getServitorEffects(getOwner()).put(getReferenceSkill(), new ArrayList<SummonEffect>());
 								}
 								
 								SummonEffectsTable.getInstance().getServitorEffects(getOwner()).get(getReferenceSkill()).add(SummonEffectsTable.getInstance().new SummonEffect(skill, effectCurTime));
Index: java/com/l2jserver/gameserver/network/serverpackets/SortedWareHouseWithdrawalList.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/SortedWareHouseWithdrawalList.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/SortedWareHouseWithdrawalList.java	(working copy)
@@ -18,12 +18,11 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.data.xml.impl.RecipeData;
 import com.l2jserver.gameserver.model.L2RecipeList;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -42,7 +41,7 @@
 	public static final int FREIGHT = 4; // not sure
 	
 	private long _playerAdena;
-	private List<L2WarehouseItem> _objects = new FastList<>();
+	private List<L2WarehouseItem> _objects = new ArrayList<>();
 	private int _whType;
 	
 	public static enum WarehouseListType
@@ -419,7 +418,7 @@
 	 */
 	private List<L2WarehouseItem> createWeaponList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item.isWeapon() || (item.getItem().getType2() == L2Item.TYPE2_WEAPON) || (item.isEtcItem() && (item.getItemType() == EtcItemType.ARROW)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -444,7 +443,7 @@
 	 */
 	private List<L2WarehouseItem> createArmorList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item.isArmor() || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -469,7 +468,7 @@
 	 */
 	private List<L2WarehouseItem> createEtcItemList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item.isEtcItem() || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -494,7 +493,7 @@
 	 */
 	private List<L2WarehouseItem> createMatList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getEtcItem().getItemType() == EtcItemType.MATERIAL)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -519,7 +518,7 @@
 	 */
 	private List<L2WarehouseItem> createRecipeList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getEtcItem().getItemType() == EtcItemType.RECIPE)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -544,7 +543,7 @@
 	 */
 	private List<L2WarehouseItem> createAmulettList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getItemName().toUpperCase().startsWith("AMULET"))) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -569,7 +568,7 @@
 	 */
 	private List<L2WarehouseItem> createSpellbookList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (!item.getItemName().toUpperCase().startsWith("AMULET"))) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -594,7 +593,7 @@
 	 */
 	private List<L2WarehouseItem> createConsumableList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && ((item.getEtcItem().getItemType() == EtcItemType.SCROLL) || (item.getEtcItem().getItemType() == EtcItemType.SHOT))) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -619,7 +618,7 @@
 	 */
 	private List<L2WarehouseItem> createShotList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getEtcItem().getItemType() == EtcItemType.SHOT)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -644,7 +643,7 @@
 	 */
 	private List<L2WarehouseItem> createScrollList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getEtcItem().getItemType() == EtcItemType.SCROLL)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -669,7 +668,7 @@
 	 */
 	private List<L2WarehouseItem> createSeedList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && (item.getEtcItem().getItemType() == EtcItemType.SEED)) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -694,7 +693,7 @@
 	 */
 	private List<L2WarehouseItem> createOtherList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item.isEtcItem() && ((item.getEtcItem().getItemType() != EtcItemType.MATERIAL) && (item.getEtcItem().getItemType() != EtcItemType.RECIPE) && (item.getEtcItem().getItemType() != EtcItemType.SCROLL) && (item.getEtcItem().getItemType() != EtcItemType.SHOT))) || (item.getItem().getType2() == L2Item.TYPE2_MONEY))
@@ -719,7 +718,7 @@
 	 */
 	private List<L2WarehouseItem> createAllList(L2ItemInstance[] _items)
 	{
-		List<L2WarehouseItem> _list = new FastList<>();
+		List<L2WarehouseItem> _list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (_list.size() < MAX_SORT_LIST_ITEMS)
Index: dist/game/data/scripts/gracia/AI/EnergySeeds.java
===================================================================
--- dist/game/data/scripts/gracia/AI/EnergySeeds.java	(revision 178)
+++ dist/game/data/scripts/gracia/AI/EnergySeeds.java	(working copy)
@@ -18,9 +18,10 @@
  */
 package gracia.AI;
 
+import java.util.HashMap;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -53,8 +54,8 @@
 	private static final int RATE = 1;
 	private static final int RESPAWN = 480000;
 	private static final int RANDOM_RESPAWN_OFFSET = 180000;
-	private static Map<Integer, ESSpawn> _spawns = new FastMap<>();
-	protected static Map<L2Npc, Integer> _spawnedNpcs = new FastMap<L2Npc, Integer>().shared();
+	private static Map<Integer, ESSpawn> _spawns = new HashMap<>();
+	protected static Map<L2Npc, Integer> _spawnedNpcs = new ConcurrentHashMap<>();
 	
 	private static final int TEMPORARY_TELEPORTER = 32602;
 	// @formatter:off
@@ -711,8 +712,7 @@
 		
 		public void scheduleRespawn(long waitTime)
 		{
-			ThreadPoolManager.getInstance().scheduleGeneral(() ->
-			{
+			ThreadPoolManager.getInstance().scheduleGeneral(() -> {
 				// if the AI is inactive, do not spawn the NPC
 				if (isSeedActive(_seedId))
 				{
Index: java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2PcInstance.java	(working copy)
@@ -39,6 +39,8 @@
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentSkipListMap;
+import java.util.concurrent.CopyOnWriteArrayList;
+import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.concurrent.Future;
 import java.util.concurrent.ScheduledFuture;
 import java.util.concurrent.TimeUnit;
@@ -46,10 +48,6 @@
 import java.util.concurrent.locks.ReentrantLock;
 import java.util.logging.Level;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.GameTimeController;
@@ -410,7 +408,7 @@
 	
 	public static final String WORLD_CHAT_VARIABLE_NAME = "WORLD_CHAT_POINTS";
 	
-	private final List<IEventListener> _eventListeners = new FastList<IEventListener>().shared();
+	private final List<IEventListener> _eventListeners = new CopyOnWriteArrayList<>();
 	
 	public class AIAccessor extends L2Character.AIAccessor
 	{
@@ -522,7 +520,7 @@
 	
 	private int _bookmarkslot = 0; // The Teleport Bookmark Slot
 	
-	private final Map<Integer, TeleportBookmark> _tpbookmarks = new FastMap<>();
+	private final Map<Integer, TeleportBookmark> _tpbookmarks = new HashMap<>();
 	
 	private boolean _canFeed;
 	private boolean _isInSiege;
@@ -563,11 +561,11 @@
 	private Transform _transformation;
 	
 	/** The table containing all L2RecipeList of the L2PcInstance */
-	private final Map<Integer, L2RecipeList> _dwarvenRecipeBook = new FastMap<>();
-	private final Map<Integer, L2RecipeList> _commonRecipeBook = new FastMap<>();
+	private final Map<Integer, L2RecipeList> _dwarvenRecipeBook = new HashMap<>();
+	private final Map<Integer, L2RecipeList> _commonRecipeBook = new HashMap<>();
 	
 	/** Premium Items */
-	private final Map<Integer, L2PremiumItem> _premiumItems = new FastMap<>();
+	private final Map<Integer, L2PremiumItem> _premiumItems = new HashMap<>();
 	
 	/** True if the L2PcInstance is sitting */
 	private boolean _waitTypeSitting;
@@ -625,7 +623,7 @@
 	private int _questNpcObject = 0;
 	
 	/** The table containing all Quests began by the L2PcInstance */
-	private final Map<String, QuestState> _quests = new FastMap<>();
+	private final Map<String, QuestState> _quests = new HashMap<>();
 	
 	/** The list containing all shortCuts of this player. */
 	private final ShortCuts _shortCuts = new ShortCuts(this);
@@ -633,8 +631,8 @@
 	/** The list containing all macros of this player. */
 	private final MacroList _macros = new MacroList(this);
 	
-	private final List<L2PcInstance> _snoopListener = new FastList<>();
-	private final List<L2PcInstance> _snoopedPlayer = new FastList<>();
+	private final List<L2PcInstance> _snoopListener = new ArrayList<>();
+	private final List<L2PcInstance> _snoopedPlayer = new ArrayList<>();
 	
 	// hennas
 	private final L2Henna[] _henna = new L2Henna[3];
@@ -753,7 +751,7 @@
 	/** The fists L2Weapon of the L2PcInstance (used when no weapon is equipped) */
 	private L2Weapon _fistsWeaponItem;
 	
-	private final Map<Integer, String> _chars = new FastMap<>();
+	private final Map<Integer, String> _chars = new HashMap<>();
 	
 	// private byte _updateKnownCounter = 0;
 	
@@ -779,7 +777,7 @@
 	/** Player's cubics. */
 	private final Map<Integer, L2CubicInstance> _cubics = new ConcurrentSkipListMap<>();
 	/** Active shots. */
-	protected FastSet<Integer> _activeSoulShots = new FastSet<Integer>().shared();
+	protected CopyOnWriteArraySet<Integer> _activeSoulShots = new CopyOnWriteArraySet<>();
 	
 	public final ReentrantLock soulShotLock = new ReentrantLock();
 	
@@ -1574,7 +1572,7 @@
 			{
 				if (_notifyQuestOfDeathList == null)
 				{
-					_notifyQuestOfDeathList = new FastList<>();
+					_notifyQuestOfDeathList = new ArrayList<>();
 				}
 			}
 		}
@@ -5958,7 +5956,7 @@
 	{
 		if (_tamedBeast == null)
 		{
-			_tamedBeast = new FastList<>();
+			_tamedBeast = new ArrayList<>();
 		}
 		_tamedBeast.add(tamedBeast);
 	}
@@ -10539,7 +10537,7 @@
 	{
 		if (_subClasses == null)
 		{
-			_subClasses = new FastMap<>();
+			_subClasses = new HashMap<>();
 		}
 		
 		return _subClasses;
@@ -14601,7 +14599,7 @@
 		{
 			if (_customSkills == null)
 			{
-				_customSkills = new FastMap<Integer, Skill>().shared();
+				_customSkills = new ConcurrentHashMap<>();
 			}
 			_customSkills.put(skill.getDisplayId(), skill);
 		}
Index: dist/game/data/scripts/ai/individual/SinWardens.java
===================================================================
--- dist/game/data/scripts/ai/individual/SinWardens.java	(revision 178)
+++ dist/game/data/scripts/ai/individual/SinWardens.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.individual;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.enums.ChatType;
@@ -54,7 +54,7 @@
 		22438
 	};
 	
-	private final Map<Integer, Integer> killedMinionsCount = new FastMap<>();
+	private final Map<Integer, Integer> killedMinionsCount = new HashMap<>();
 	
 	private SinWardens()
 	{
Index: java/com/l2jserver/gameserver/instancemanager/DayNightSpawnManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/DayNightSpawnManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/DayNightSpawnManager.java	(working copy)
@@ -19,13 +19,12 @@
 package com.l2jserver.gameserver.instancemanager;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.model.L2Spawn;
 import com.l2jserver.gameserver.model.actor.L2Npc;
@@ -54,7 +53,7 @@
 	{
 		_dayCreatures = new ArrayList<>();
 		_nightCreatures = new ArrayList<>();
-		_bosses = new FastMap<>();
+		_bosses = new HashMap<>();
 	}
 	
 	public void addDayCreature(L2Spawn spawnDat)
Index: java/com/l2jserver/gameserver/taskmanager/KnownListUpdateTaskManager.java
===================================================================
--- java/com/l2jserver/gameserver/taskmanager/KnownListUpdateTaskManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/taskmanager/KnownListUpdateTaskManager.java	(working copy)
@@ -19,11 +19,10 @@
 package com.l2jserver.gameserver.taskmanager;
 
 import java.util.Collection;
+import java.util.HashSet;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.model.L2Object;
@@ -43,7 +42,7 @@
 	// Do full update every FULL_UPDATE_TIMER * KNOWNLIST_UPDATE_INTERVAL
 	public static int _fullUpdateTimer = FULL_UPDATE_TIMER;
 	
-	protected static final FastSet<L2WorldRegion> _failedRegions = new FastSet<>(1);
+	protected static final HashSet<L2WorldRegion> _failedRegions = new HashSet<>(1);
 	
 	protected KnownListUpdateTaskManager()
 	{
Index: java/com/l2jserver/gameserver/model/PartyMatchRoomList.java
===================================================================
--- java/com/l2jserver/gameserver/model/PartyMatchRoomList.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/PartyMatchRoomList.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 import com.l2jserver.gameserver.network.SystemMessageId;
 import com.l2jserver.gameserver.network.serverpackets.ExClosePartyRoom;
@@ -36,7 +35,7 @@
 	
 	protected PartyMatchRoomList()
 	{
-		_rooms = new FastMap<>();
+		_rooms = new HashMap<>();
 	}
 	
 	public synchronized void addPartyMatchRoom(int id, PartyMatchRoom room)
Index: dist/game/data/scripts/ai/individual/ScarletVanHalisha.java
===================================================================
--- dist/game/data/scripts/ai/individual/ScarletVanHalisha.java	(revision 177)
+++ dist/game/data/scripts/ai/individual/ScarletVanHalisha.java	(working copy)
@@ -22,9 +22,9 @@
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_FOLLOW;
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_IDLE;
 
+import java.util.ArrayList;
 import java.util.Collection;
 
-import javolution.util.FastList;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.GeoData;
@@ -217,7 +217,7 @@
 	private L2Character getRandomTarget(L2Npc npc)
 	{
 		Collection<L2Object> objs = npc.getKnownList().getKnownObjects().values();
-		FastList<L2Character> result = new FastList<>();
+		ArrayList<L2Character> result = new ArrayList<>();
 		{
 			for (L2Object obj : objs)
 			{
Index: dist/game/data/scripts/hellbound/AI/Zones/TullyWorkshop/TullyWorkshop.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/Zones/TullyWorkshop/TullyWorkshop.java	(revision 178)
+++ dist/game/data/scripts/hellbound/AI/Zones/TullyWorkshop/TullyWorkshop.java	(working copy)
@@ -18,15 +18,15 @@
  */
 package hellbound.AI.Zones.TullyWorkshop;
 
+import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ScheduledFuture;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -111,8 +111,8 @@
 		22383
 	};
 	
-	private static final Map<Integer, int[]> TULLY_DOORLIST = new FastMap<>();
-	private static final Map<Integer, Location[]> TELE_COORDS = new FastMap<>();
+	private static final Map<Integer, int[]> TULLY_DOORLIST = new HashMap<>();
+	private static final Map<Integer, Location[]> TELE_COORDS = new HashMap<>();
 	
 	protected int countdownTime;
 	private int nextServantIdx = 0;
@@ -125,14 +125,14 @@
 	protected ScheduledFuture<?> _countdown = null;
 	
 	// NPC's, spawned after Tully's death are stored here
-	protected static List<L2Npc> postMortemSpawn = new FastList<>();
+	protected static List<L2Npc> postMortemSpawn = new ArrayList<>();
 	// TODO: Zoey76: Not thread-safe, probably will lead to problems.
 	protected static Set<Integer> brokenContraptions = new HashSet<>();
 	protected static Set<Integer> rewardedContraptions = new HashSet<>();
 	protected static Set<Integer> talkedContraptions = new HashSet<>();
 	
-	private final List<L2MonsterInstance> spawnedFollowers = new FastList<>();
-	private final List<L2MonsterInstance> spawnedFollowerMinions = new FastList<>();
+	private final List<L2MonsterInstance> spawnedFollowers = new ArrayList<>();
+	private final List<L2MonsterInstance> spawnedFollowerMinions = new ArrayList<>();
 	private L2Npc spawnedAgent = null;
 	private L2Spawn pillarSpawn = null;
 	
Index: java/com/l2jserver/gameserver/model/zone/L2ZoneType.java
===================================================================
--- java/com/l2jserver/gameserver/model/zone/L2ZoneType.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/zone/L2ZoneType.java	(working copy)
@@ -22,10 +22,9 @@
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.enums.InstanceType;
 import com.l2jserver.gameserver.instancemanager.InstanceManager;
 import com.l2jserver.gameserver.model.L2Object;
@@ -48,7 +47,7 @@
 	
 	private final int _id;
 	protected L2ZoneForm _zone;
-	protected FastMap<Integer, L2Character> _characterList;
+	protected ConcurrentHashMap<Integer, L2Character> _characterList;
 	
 	/** Parameters to affect specific characters */
 	private boolean _checkAffected = false;
@@ -68,8 +67,7 @@
 	protected L2ZoneType(int id)
 	{
 		_id = id;
-		_characterList = new FastMap<>();
-		_characterList.shared();
+		_characterList = new ConcurrentHashMap<>();
 		
 		_minLvl = 0;
 		_maxLvl = 0xFF;
Index: java/com/l2jserver/gameserver/model/actor/L2Character.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/L2Character.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/L2Character.java	(working copy)
@@ -40,10 +40,6 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-import javolution.util.WeakFastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GameTimeController;
 import com.l2jserver.gameserver.GeoData;
@@ -220,7 +216,7 @@
 	/** Table of Calculators containing all used calculator */
 	private Calculator[] _calculators;
 	/** Map containing all skills of this character. */
-	private final Map<Integer, Skill> _skills = new FastMap<Integer, Skill>().shared();
+	private final Map<Integer, Skill> _skills = new ConcurrentHashMap<>();
 	/** Map containing the skill reuse time stamps. */
 	private volatile Map<Integer, TimeStamp> _reuseTimeStampsSkills = null;
 	/** Map containing the item reuse time stamps. */
@@ -2699,7 +2695,7 @@
 			{
 				if (_attackByList == null)
 				{
-					_attackByList = new WeakFastSet<>(true);
+					_attackByList = new HashSet<>();
 				}
 			}
 		}
@@ -4315,8 +4311,7 @@
 		
 		if (distFraction > 1)
 		{
-			ThreadPoolManager.getInstance().executeAi(() ->
-			{
+			ThreadPoolManager.getInstance().executeAi(() -> {
 				try
 				{
 					if (Config.MOVE_BASED_KNOWNLIST)
@@ -5605,7 +5600,7 @@
 			int _skiprange = 0;
 			int _skipgeo = 0;
 			int _skippeace = 0;
-			List<L2Character> targetList = new FastList<>(targets.length);
+			List<L2Character> targetList = new ArrayList<>(targets.length);
 			for (L2Object target : targets)
 			{
 				if (target instanceof L2Character)
Index: java/com/l2jserver/gameserver/model/actor/instance/L2RaceManagerInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2RaceManagerInstance.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2RaceManagerInstance.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model.actor.instance;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.MonsterRace;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.enums.InstanceType;
@@ -101,8 +100,8 @@
 		{
 			_notInitialized = false;
 			
-			// _history = new FastList<>();
-			_managers = new FastList<>();
+			// _history = new ArrayList<>();
+			_managers = new ArrayList<>();
 			
 			ThreadPoolManager s = ThreadPoolManager.getInstance();
 			s.scheduleGeneralAtFixedRate(new Announcement(SystemMessageId.TICKETS_ARE_NOW_AVAILABLE_FOR_MONSTER_RACE_S1), 0, 10 * MINUTE);
Index: dist/game/data/scripts/instances/CrystalCaverns/CrystalCaverns.java
===================================================================
--- dist/game/data/scripts/instances/CrystalCaverns/CrystalCaverns.java	(revision 178)
+++ dist/game/data/scripts/instances/CrystalCaverns/CrystalCaverns.java	(working copy)
@@ -20,12 +20,11 @@
 
 import instances.AbstractInstance;
 
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.ai.CtrlIntention;
@@ -84,15 +83,15 @@
 	
 	private class CCWorld extends InstanceWorld
 	{
-		public Map<L2Npc, Boolean> npcList1 = new FastMap<>();
+		public Map<L2Npc, Boolean> npcList1 = new HashMap<>();
 		public L2Npc tears;
 		public boolean isUsedInvulSkill = false;
 		public long dragonScaleStart = 0;
 		public int dragonScaleNeed = 0;
 		public int cleanedRooms = 0;
 		public long endTime = 0;
-		public List<L2Npc> copys = new FastList<>();
-		public Map<L2Npc, CrystalGolem> crystalGolems = new FastMap<>();
+		public List<L2Npc> copys = new ArrayList<>();
+		public Map<L2Npc, CrystalGolem> crystalGolems = new HashMap<>();
 		public int correctGolems = 0;
 		public boolean[] OracleTriggered =
 		{
@@ -108,18 +107,18 @@
 			0,
 			0
 		}; // 0: not spawned, 1: spawned, 2: cleared
-		public Map<L2DoorInstance, L2PcInstance> openedDoors = new FastMap<>();
-		public Map<Integer, Map<L2Npc, Boolean>> npcList2 = new FastMap<>();
-		public Map<L2Npc, L2Npc> oracles = new FastMap<>();
-		public List<L2Npc> keyKeepers = new FastList<>();
-		public List<L2Npc> guards = new FastList<>();
-		public List<L2Npc> oracle = new FastList<>();
+		public Map<L2DoorInstance, L2PcInstance> openedDoors = new HashMap<>();
+		public Map<Integer, Map<L2Npc, Boolean>> npcList2 = new HashMap<>();
+		public Map<L2Npc, L2Npc> oracles = new HashMap<>();
+		public List<L2Npc> keyKeepers = new ArrayList<>();
+		public List<L2Npc> guards = new ArrayList<>();
+		public List<L2Npc> oracle = new ArrayList<>();
 		// baylor variables
-		protected final List<L2PcInstance> _raiders = new FastList<>();
+		protected final List<L2PcInstance> _raiders = new ArrayList<>();
 		protected int _raidStatus = 0;
 		protected long _dragonClawStart = 0;
 		protected int _dragonClawNeed = 0;
-		protected final List<L2Npc> _animationMobs = new FastList<>();
+		protected final List<L2Npc> _animationMobs = new ArrayList<>();
 		protected L2Npc _camera = null;
 		protected L2Npc _baylor = null;
 		protected L2Npc _alarm = null;
@@ -800,7 +799,7 @@
 	{
 		world.setStatus(3);
 		
-		Map<L2Npc, Boolean> spawnList = new FastMap<>();
+		Map<L2Npc, Boolean> spawnList = new HashMap<>();
 		for (int[] spawn : EMERALD_SPAWNS)
 		{
 			L2Npc mob = addSpawn(spawn[0], spawn[1], spawn[2], spawn[3], spawn[4], false, 0, false, world.getInstanceId());
@@ -811,7 +810,7 @@
 	
 	protected void runEmeraldRooms(CCWorld world, int[][] spawnList, int room)
 	{
-		Map<L2Npc, Boolean> spawned = new FastMap<>();
+		Map<L2Npc, Boolean> spawned = new HashMap<>();
 		for (int[] spawn : spawnList)
 		{
 			L2Npc mob = addSpawn(spawn[0], spawn[1], spawn[2], spawn[3], spawn[4], false, 0, false, world.getInstanceId());
@@ -839,7 +838,7 @@
 	{
 		world.setStatus(status);
 		
-		Map<L2Npc, Boolean> spawned = new FastMap<>();
+		Map<L2Npc, Boolean> spawned = new HashMap<>();
 		for (int[] spawn : spawnList)
 		{
 			L2Npc mob = addSpawn(spawn[0], spawn[1], spawn[2], spawn[3], spawn[4], false, 0, false, world.getInstanceId());
@@ -1380,7 +1379,7 @@
 					return "";
 				}
 				CrystalGolem cryGolem = world.crystalGolems.get(npc);
-				List<L2Object> crystals = new FastList<>();
+				List<L2Object> crystals = new ArrayList<>();
 				for (L2Object object : L2World.getInstance().getVisibleObjects(npc, 300))
 				{
 					if ((object instanceof L2ItemInstance) && (object.getId() == CRYSTALFOOD))
Index: java/com/l2jserver/gameserver/model/olympiad/OlympiadManager.java
===================================================================
--- java/com/l2jserver/gameserver/model/olympiad/OlympiadManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/olympiad/OlympiadManager.java	(working copy)
@@ -21,10 +21,9 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArrayList;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.instancemanager.AntiFeedManager;
@@ -47,9 +46,9 @@
 	
 	protected OlympiadManager()
 	{
-		_nonClassBasedRegisters = new FastList<Integer>().shared();
-		_classBasedRegisters = new FastMap<Integer, List<Integer>>().shared();
-		_teamsBasedRegisters = new FastList<List<Integer>>().shared();
+		_nonClassBasedRegisters = new CopyOnWriteArrayList<>();
+		_classBasedRegisters = new ConcurrentHashMap<>();
+		_teamsBasedRegisters = new CopyOnWriteArrayList<>();
 	}
 	
 	public static final OlympiadManager getInstance()
@@ -81,7 +80,7 @@
 			{
 				if (result == null)
 				{
-					result = new FastList<>();
+					result = new ArrayList<>();
 				}
 				
 				result.add(classList.getValue());
@@ -258,7 +257,7 @@
 				}
 				else
 				{
-					classed = new FastList<Integer>().shared();
+					classed = new CopyOnWriteArrayList<>();
 					classed.add(charId);
 					_classBasedRegisters.put(player.getBaseClass(), classed);
 				}
Index: java/com/l2jserver/gameserver/model/L2ContactList.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2ContactList.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2ContactList.java	(working copy)
@@ -22,11 +22,10 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.sql.impl.CharNameTable;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -53,7 +52,7 @@
 	public L2ContactList(L2PcInstance player)
 	{
 		activeChar = player;
-		_contacts = new FastList<String>().shared();
+		_contacts = new CopyOnWriteArrayList<>();
 		restore();
 	}
 	
Index: dist/game/data/scripts/hellbound/AI/Zones/TowerOfNaia/TowerOfNaia.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/Zones/TowerOfNaia/TowerOfNaia.java	(revision 178)
+++ dist/game/data/scripts/hellbound/AI/Zones/TowerOfNaia/TowerOfNaia.java	(working copy)
@@ -18,14 +18,14 @@
  */
 package hellbound.AI.Zones.TowerOfNaia;
 
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.CopyOnWriteArrayList;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -157,9 +157,9 @@
 	private int _challengeState;
 	private int _winIndex;
 	
-	private final Map<Integer, Boolean> _activeRooms = new FastMap<>();
-	private final Map<Integer, List<L2Npc>> _spawns = new FastMap<>();
-	private final FastList<L2Npc> _sporeSpawn = new FastList<L2Npc>().shared();
+	private final Map<Integer, Boolean> _activeRooms = new HashMap<>();
+	private final Map<Integer, List<L2Npc>> _spawns = new HashMap<>();
+	private final CopyOnWriteArrayList<L2Npc> _sporeSpawn = new CopyOnWriteArrayList<>();
 	static
 	{
 		// Format: entrance_door, exit_door
@@ -902,7 +902,7 @@
 		if (SPAWNS.containsKey(managerId))
 		{
 			int[][] spawnList = SPAWNS.get(managerId);
-			List<L2Npc> spawned = new FastList<>();
+			List<L2Npc> spawned = new ArrayList<>();
 			for (int[] spawn : spawnList)
 			{
 				L2Npc spawnedNpc = addSpawn(spawn[0], spawn[1], spawn[2], spawn[3], spawn[4], false, 0, false);
Index: java/com/l2jserver/gameserver/model/entity/Auction.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Auction.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Auction.java	(working copy)
@@ -25,12 +25,11 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.util.Calendar;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.sql.impl.ClanTable;
@@ -62,7 +61,7 @@
 	private long _currentBid = 0;
 	private long _startingBid = 0;
 	
-	private final Map<Integer, Bidder> _bidders = new FastMap<>();
+	private final Map<Integer, Bidder> _bidders = new HashMap<>();
 	
 	private static final String[] ItemTypeName =
 	{
Index: java/com/l2jserver/gameserver/pathfinding/cellnodes/CellPathFinding.java
===================================================================
--- java/com/l2jserver/gameserver/pathfinding/cellnodes/CellPathFinding.java	(revision 177)
+++ java/com/l2jserver/gameserver/pathfinding/cellnodes/CellPathFinding.java	(working copy)
@@ -24,8 +24,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.GeoData;
 import com.l2jserver.gameserver.idfactory.IdFactory;
@@ -50,7 +48,7 @@
 	private int _postFilterPasses = 0;
 	private long _postFilterElapsed = 0;
 	
-	private FastList<L2ItemInstance> _debugItems = null;
+	private ArrayList<L2ItemInstance> _debugItems = null;
 	
 	public static CellPathFinding getInstance()
 	{
@@ -121,7 +119,7 @@
 		{
 			if (_debugItems == null)
 			{
-				_debugItems = new FastList<>();
+				_debugItems = new ArrayList<>();
 			}
 			else
 			{
@@ -138,7 +136,7 @@
 			}
 		}
 		
-		FastList<AbstractNodeLoc> path = null;
+		ArrayList<AbstractNodeLoc> path = null;
 		try
 		{
 			CellNode result = buffer.findPath(gx, gy, gz, gtx, gty, gtz);
@@ -244,9 +242,9 @@
 		return path;
 	}
 	
-	private FastList<AbstractNodeLoc> constructPath(AbstractNode node)
+	private ArrayList<AbstractNodeLoc> constructPath(AbstractNode node)
 	{
-		FastList<AbstractNodeLoc> path = new FastList<>();
+		ArrayList<AbstractNodeLoc> path = new ArrayList<>();
 		int previousDirectionX = Integer.MIN_VALUE;
 		int previousDirectionY = Integer.MIN_VALUE;
 		int directionX, directionY;
@@ -280,7 +278,7 @@
 				previousDirectionX = directionX;
 				previousDirectionY = directionY;
 				
-				path.addFirst(node.getLoc());
+				path.add(node.getLoc());
 				node.setLoc(null);
 			}
 			
Index: dist/game/data/scripts/ai/group_template/BeastFarm.java
===================================================================
--- dist/game/data/scripts/ai/group_template/BeastFarm.java	(revision 177)
+++ dist/game/data/scripts/ai/group_template/BeastFarm.java	(working copy)
@@ -19,10 +19,10 @@
 package ai.group_template;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import quests.Q00020_BringUpWithLove.Q00020_BringUpWithLove;
 import ai.npc.AbstractNpcAI;
 
@@ -104,8 +104,8 @@
 		18900
 	};
 	
-	private static Map<Integer, Integer> _FeedInfo = new FastMap<>();
-	private static Map<Integer, GrowthCapableMob> _GrowthCapableMobs = new FastMap<>();
+	private static Map<Integer, Integer> _FeedInfo = new HashMap<>();
+	private static Map<Integer, GrowthCapableMob> _GrowthCapableMobs = new HashMap<>();
 	private static List<TamedBeast> TAMED_BEAST_DATA = new ArrayList<>();
 	
 	private BeastFarm()
@@ -395,7 +395,7 @@
 		private final int _chance;
 		private final int _growthLevel;
 		private final int _tameNpcId;
-		private final Map<Integer, Integer> _skillSuccessNpcIdList = new FastMap<>();
+		private final Map<Integer, Integer> _skillSuccessNpcIdList = new HashMap<>();
 		
 		public GrowthCapableMob(int chance, int growthLevel, int tameNpcId)
 		{
Index: java/com/l2jserver/gameserver/model/actor/knownlist/CharKnownList.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/knownlist/CharKnownList.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/knownlist/CharKnownList.java	(working copy)
@@ -25,8 +25,6 @@
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.L2Object;
 import com.l2jserver.gameserver.model.actor.L2Character;
 import com.l2jserver.gameserver.model.actor.L2Summon;
@@ -208,7 +206,7 @@
 	
 	public Collection<L2Character> getKnownCharacters()
 	{
-		FastList<L2Character> result = new FastList<>();
+		ArrayList<L2Character> result = new ArrayList<>();
 		
 		final Collection<L2Object> objs = getKnownObjects().values();
 		for (L2Object obj : objs)
Index: java/com/l2jserver/gameserver/instancemanager/DuelManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/DuelManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/DuelManager.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.instancemanager;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 import com.l2jserver.gameserver.model.entity.Duel;
 import com.l2jserver.gameserver.model.skills.Skill;
@@ -34,7 +33,7 @@
 	
 	protected DuelManager()
 	{
-		_duels = new FastList<>();
+		_duels = new ArrayList<>();
 	}
 	
 	private int getNextDuelId()
Index: java/com/l2jserver/gameserver/model/entity/clanhall/ClanHallSiegeEngine.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/clanhall/ClanHallSiegeEngine.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/entity/clanhall/ClanHallSiegeEngine.java	(working copy)
@@ -21,15 +21,14 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collection;
+import java.util.HashMap;
 import java.util.List;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -74,8 +73,8 @@
 	
 	protected final Logger _log;
 	
-	private final FastMap<Integer, L2SiegeClan> _attackers = new FastMap<>();
-	private FastList<L2Spawn> _guards;
+	private final HashMap<Integer, L2SiegeClan> _attackers = new HashMap<>();
+	private ArrayList<L2Spawn> _guards;
 	
 	public SiegableHall _hall;
 	public ScheduledFuture<?> _siegeTask;
@@ -151,7 +150,7 @@
 	{
 		if (_guards == null)
 		{
-			_guards = new FastList<>();
+			_guards = new ArrayList<>();
 			try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 				PreparedStatement statement = con.prepareStatement(SQL_LOAD_GUARDS))
 			{
@@ -225,7 +224,7 @@
 	
 	// XXX Attacker clans management -----------------------------
 	
-	public final FastMap<Integer, L2SiegeClan> getAttackers()
+	public final HashMap<Integer, L2SiegeClan> getAttackers()
 	{
 		return _attackers;
 	}
@@ -262,7 +261,7 @@
 	@Override
 	public List<L2SiegeClan> getAttackerClans()
 	{
-		FastList<L2SiegeClan> result = new FastList<>();
+		ArrayList<L2SiegeClan> result = new ArrayList<>();
 		result.addAll(_attackers.values());
 		return result;
 	}
@@ -271,7 +270,7 @@
 	public List<L2PcInstance> getAttackersInZone()
 	{
 		final Collection<L2PcInstance> list = _hall.getSiegeZone().getPlayersInside();
-		List<L2PcInstance> attackers = new FastList<>();
+		List<L2PcInstance> attackers = new ArrayList<>();
 		
 		for (L2PcInstance pc : list)
 		{
Index: java/com/l2jserver/gameserver/model/quest/QuestState.java
===================================================================
--- java/com/l2jserver/gameserver/model/quest/QuestState.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/quest/QuestState.java	(working copy)
@@ -221,8 +221,8 @@
 	 * <ul>
 	 * <li>Initialize class variable "vars" if is null.</li>
 	 * <li>Initialize parameter "val" if is null</li>
-	 * <li>Add/Update couple (var,val) in class variable FastMap "vars"</li>
-	 * <li>If the key represented by "var" exists in FastMap "vars", the couple (var,val) is updated in the database.<br>
+	 * <li>Add/Update couple (var,val) in class variable HashMap "vars"</li>
+	 * <li>If the key represented by "var" exists in HashMap "vars", the couple (var,val) is updated in the database.<br>
 	 * The key is known as existing if the preceding value of the key (given as result of function put()) is not null.<br>
 	 * If the key doesn't exist, the couple is added/created in the database</li>
 	 * <ul>
Index: java/com/l2jserver/gameserver/network/serverpackets/CharSelectionInfo.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/CharSelectionInfo.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/CharSelectionInfo.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.sql.impl.ClanTable;
@@ -201,7 +200,7 @@
 	private static CharSelectInfoPackage[] loadCharacterSelectInfo(String loginName)
 	{
 		CharSelectInfoPackage charInfopackage;
-		List<CharSelectInfoPackage> characterList = new FastList<>();
+		List<CharSelectInfoPackage> characterList = new ArrayList<>();
 		
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			PreparedStatement statement = con.prepareStatement("SELECT * FROM characters WHERE account_name=? ORDER BY createDate"))
Index: java/com/l2jserver/gameserver/instancemanager/RaidBossPointsManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/RaidBossPointsManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/RaidBossPointsManager.java	(working copy)
@@ -25,13 +25,12 @@
 import java.sql.Statement;
 import java.util.ArrayList;
 import java.util.Comparator;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 
@@ -43,7 +42,7 @@
 {
 	private static final Logger _log = Logger.getLogger(RaidBossPointsManager.class.getName());
 	
-	private FastMap<Integer, Map<Integer, Integer>> _list;
+	private HashMap<Integer, Map<Integer, Integer>> _list;
 	
 	public RaidBossPointsManager()
 	{
@@ -52,7 +51,7 @@
 	
 	private final void init()
 	{
-		_list = new FastMap<>();
+		_list = new HashMap<>();
 		try (Connection con = L2DatabaseFactory.getInstance().getConnection();
 			Statement s = con.createStatement();
 			ResultSet rs = s.executeQuery("SELECT `charId`,`boss_id`,`points` FROM `character_raid_points`"))
@@ -65,7 +64,7 @@
 				Map<Integer, Integer> values = _list.get(charId);
 				if (values == null)
 				{
-					values = new FastMap<>();
+					values = new HashMap<>();
 				}
 				values.put(bossId, points);
 				_list.put(charId, values);
@@ -100,7 +99,7 @@
 		Map<Integer, Integer> tmpPoint = _list.get(ownerId);
 		if (tmpPoint == null)
 		{
-			tmpPoint = new FastMap<>();
+			tmpPoint = new HashMap<>();
 			tmpPoint.put(bossId, points);
 			updatePointsInDB(player, bossId, points);
 		}
@@ -163,8 +162,8 @@
 	
 	public Map<Integer, Integer> getRankList()
 	{
-		Map<Integer, Integer> tmpRanking = new FastMap<>();
-		Map<Integer, Integer> tmpPoints = new FastMap<>();
+		Map<Integer, Integer> tmpRanking = new HashMap<>();
+		Map<Integer, Integer> tmpPoints = new HashMap<>();
 		
 		for (int ownerId : _list.keySet())
 		{
Index: java/com/l2jserver/gameserver/model/itemcontainer/PcInventory.java
===================================================================
--- java/com/l2jserver/gameserver/model/itemcontainer/PcInventory.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/itemcontainer/PcInventory.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.datatables.ItemTable;
@@ -141,7 +140,7 @@
 	
 	public L2ItemInstance[] getUniqueItems(boolean allowAdena, boolean allowAncientAdena, boolean onlyAvailable)
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item == null)
@@ -172,7 +171,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -190,7 +188,7 @@
 	
 	public L2ItemInstance[] getUniqueItemsByEnchantLevel(boolean allowAdena, boolean allowAncientAdena, boolean onlyAvailable)
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item == null)
@@ -223,7 +221,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -245,7 +242,7 @@
 	 */
 	public L2ItemInstance[] getAllItemsByItemId(int itemId, boolean includeEquipped)
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item == null)
@@ -260,7 +257,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -284,7 +280,7 @@
 	 */
 	public L2ItemInstance[] getAllItemsByItemId(int itemId, int enchantment, boolean includeEquipped)
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if (item == null)
@@ -299,7 +295,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -312,7 +307,7 @@
 	 */
 	public L2ItemInstance[] getAvailableItems(boolean allowAdena, boolean allowNonTradeable, boolean feightable)
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item == null) || !item.isAvailable(getOwner(), allowAdena, allowNonTradeable) || !canManipulateWithItemId(item.getId()))
@@ -333,7 +328,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -344,7 +338,7 @@
 	 */
 	public L2ItemInstance[] getAugmentedItems()
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item != null) && item.isAugmented())
@@ -354,7 +348,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -365,7 +358,7 @@
 	 */
 	public L2ItemInstance[] getElementItems()
 	{
-		FastList<L2ItemInstance> list = FastList.newInstance();
+		final ArrayList<L2ItemInstance> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item != null) && (item.getElementals() != null))
@@ -375,7 +368,6 @@
 		}
 		
 		L2ItemInstance[] result = list.toArray(new L2ItemInstance[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
@@ -387,7 +379,7 @@
 	 */
 	public TradeItem[] getAvailableItems(TradeList tradeList)
 	{
-		FastList<TradeItem> list = FastList.newInstance();
+		final ArrayList<TradeItem> list = new ArrayList<>();
 		for (L2ItemInstance item : _items)
 		{
 			if ((item != null) && item.isAvailable(getOwner(), false, false))
@@ -401,7 +393,6 @@
 		}
 		
 		TradeItem[] result = list.toArray(new TradeItem[list.size()]);
-		FastList.recycle(list);
 		
 		return result;
 	}
Index: java/com/l2jserver/gameserver/model/entity/BlockCheckerEngine.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/BlockCheckerEngine.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/BlockCheckerEngine.java	(working copy)
@@ -18,14 +18,13 @@
  */
 package com.l2jserver.gameserver.model.entity;
 
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.Map.Entry;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -64,15 +63,15 @@
 	// The object which holds all basic members info
 	protected ArenaParticipantsHolder _holder;
 	// Maps to hold player of each team and his points
-	protected FastMap<L2PcInstance, Integer> _redTeamPoints = new FastMap<>();
-	protected FastMap<L2PcInstance, Integer> _blueTeamPoints = new FastMap<>();
+	protected HashMap<L2PcInstance, Integer> _redTeamPoints = new HashMap<>();
+	protected HashMap<L2PcInstance, Integer> _blueTeamPoints = new HashMap<>();
 	// The initial points of the event
 	protected int _redPoints = 15;
 	protected int _bluePoints = 15;
 	// Current used arena
 	protected int _arena = -1;
 	// All blocks
-	protected FastList<L2Spawn> _spawns = new FastList<>();
+	protected ArrayList<L2Spawn> _spawns = new ArrayList<>();
 	// Sets if the red team won the event at the end of this (used for packets)
 	protected boolean _isRedWinner;
 	// Time when the event starts. Used on packet sending
@@ -121,7 +120,7 @@
 	// Common z coordinate
 	private static final int _zCoord = -2405;
 	// List of dropped items in event (for later deletion)
-	protected FastList<L2ItemInstance> _drops = new FastList<>();
+	protected ArrayList<L2ItemInstance> _drops = new ArrayList<>();
 	// Default arena
 	private static final byte DEFAULT_ARENA = -1;
 	// Event is started
@@ -662,7 +661,7 @@
 		 */
 		private void rewardAsWinner(boolean isRed)
 		{
-			FastMap<L2PcInstance, Integer> tempPoints = isRed ? _redTeamPoints : _blueTeamPoints;
+			HashMap<L2PcInstance, Integer> tempPoints = isRed ? _redTeamPoints : _blueTeamPoints;
 			
 			// Main give
 			for (Entry<L2PcInstance, Integer> points : tempPoints.entrySet())
@@ -719,7 +718,7 @@
 		 */
 		private void rewardAsLooser(boolean isRed)
 		{
-			FastMap<L2PcInstance, Integer> tempPoints = isRed ? _redTeamPoints : _blueTeamPoints;
+			HashMap<L2PcInstance, Integer> tempPoints = isRed ? _redTeamPoints : _blueTeamPoints;
 			
 			for (Entry<L2PcInstance, Integer> entry : tempPoints.entrySet())
 			{
Index: java/com/l2jserver/loginserver/GameServerListener.java
===================================================================
--- java/com/l2jserver/loginserver/GameServerListener.java	(revision 177)
+++ java/com/l2jserver/loginserver/GameServerListener.java	(working copy)
@@ -20,10 +20,9 @@
 
 import java.io.IOException;
 import java.net.Socket;
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 
 /**
@@ -31,7 +30,7 @@
  */
 public class GameServerListener extends FloodProtectedListener
 {
-	private static List<GameServerThread> _gameServers = new FastList<>();
+	private static List<GameServerThread> _gameServers = new ArrayList<>();
 	
 	public GameServerListener() throws IOException
 	{
Index: java/com/l2jserver/gameserver/ThreadPoolManager.java
===================================================================
--- java/com/l2jserver/gameserver/ThreadPoolManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/ThreadPoolManager.java	(working copy)
@@ -30,10 +30,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.model.StatsSet;
 import com.l2jserver.util.StringUtil;
@@ -616,11 +612,6 @@
 			" |- PoolSize:        " + _eventThreadPool.getPoolSize(),
 			" |- CompletedTasks:  " + _eventThreadPool.getCompletedTaskCount(),
 			" |- QueuedTasks:     " + _eventThreadPool.getQueue().size(),
-			" | -------",
-			" + Javolution stats:",
-			" |- FastList:        " + FastList.report(),
-			" |- FastMap:        " + FastMap.report(),
-			" |- FastSet:        " + FastSet.report(),
 			" | -------"
 		};
 	}
Index: dist/game/data/scripts/instances/DisciplesNecropolisPast/DisciplesNecropolisPast.java
===================================================================
--- dist/game/data/scripts/instances/DisciplesNecropolisPast/DisciplesNecropolisPast.java	(revision 178)
+++ dist/game/data/scripts/instances/DisciplesNecropolisPast/DisciplesNecropolisPast.java	(working copy)
@@ -20,10 +20,10 @@
 
 import instances.AbstractInstance;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastList;
 import quests.Q00196_SevenSignsSealOfTheEmperor.Q00196_SevenSignsSealOfTheEmperor;
 
 import com.l2jserver.gameserver.enums.ChatType;
@@ -47,8 +47,8 @@
 {
 	protected class DNPWorld extends InstanceWorld
 	{
-		protected final FastList<L2Npc> anakimGroup = new FastList<>();
-		protected final FastList<L2Npc> lilithGroup = new FastList<>();
+		protected final ArrayList<L2Npc> anakimGroup = new ArrayList<>();
+		protected final ArrayList<L2Npc> lilithGroup = new ArrayList<>();
 		protected int countKill = 0;
 	}
 	
@@ -180,7 +180,7 @@
 		teleportPlayer(player, ENTER, world.getInstanceId());
 	}
 	
-	private void makeCast(L2Npc npc, FastList<L2Npc> targets)
+	private void makeCast(L2Npc npc, ArrayList<L2Npc> targets)
 	{
 		npc.setTarget(targets.get(getRandom(targets.size())));
 		if (SKILLS.containsKey(npc.getId()))
Index: dist/game/data/scripts/instances/MonasteryOfSilence2/MonasteryOfSilence2.java
===================================================================
--- dist/game/data/scripts/instances/MonasteryOfSilence2/MonasteryOfSilence2.java	(revision 178)
+++ dist/game/data/scripts/instances/MonasteryOfSilence2/MonasteryOfSilence2.java	(working copy)
@@ -18,10 +18,10 @@
  */
 package instances.MonasteryOfSilence2;
 
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
 import quests.Q10294_SevenSignsToTheMonasteryOfSilence.Q10294_SevenSignsToTheMonasteryOfSilence;
 import quests.Q10295_SevenSignsSolinasTomb.Q10295_SevenSignsSolinasTomb;
 import quests.Q10296_SevenSignsPowerOfTheSeal.Q10296_SevenSignsPowerOfTheSeal;
@@ -196,11 +196,11 @@
 		6717
 	};
 	
-	private final FastMap<Integer, InstanceHolder> instanceWorlds = new FastMap<>();
+	private final HashMap<Integer, InstanceHolder> instanceWorlds = new HashMap<>();
 	
 	public static class InstanceHolder
 	{
-		List<L2Npc> mobs = new FastList<>();
+		List<L2Npc> mobs = new ArrayList<>();
 	}
 	
 	private class MoSWorld2 extends InstanceWorld
Index: java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressMapInfo.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressMapInfo.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/ExShowFortressMapInfo.java	(working copy)
@@ -18,7 +18,7 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
-import javolution.util.FastList;
+import java.util.ArrayList;
 
 import com.l2jserver.gameserver.instancemanager.FortSiegeManager;
 import com.l2jserver.gameserver.model.FortSiegeSpawn;
@@ -47,7 +47,7 @@
 		writeD(_fortress.getSiege().isInProgress() ? 1 : 0); // fortress siege status
 		writeD(_fortress.getFortSize()); // barracks count
 		
-		FastList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(_fortress.getResidenceId());
+		ArrayList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(_fortress.getResidenceId());
 		if ((commanders != null) && (commanders.size() != 0) && _fortress.getSiege().isInProgress())
 		{
 			switch (commanders.size())
Index: java/com/l2jserver/gameserver/instancemanager/GrandBossManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/GrandBossManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/GrandBossManager.java	(working copy)
@@ -32,9 +32,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -62,13 +59,13 @@
 	
 	protected static Logger _log = Logger.getLogger(GrandBossManager.class.getName());
 	
-	protected static Map<Integer, L2GrandBossInstance> _bosses = new FastMap<>();
+	protected static Map<Integer, L2GrandBossInstance> _bosses = new HashMap<>();
 	
 	protected static Map<Integer, StatsSet> _storedInfo = new HashMap<>();
 	
 	private final Map<Integer, Integer> _bossStatus = new HashMap<>();
 	
-	private final List<L2BossZone> _zones = new FastList<>();
+	private final List<L2BossZone> _zones = new ArrayList<>();
 	
 	protected GrandBossManager()
 	{
Index: java/com/l2jserver/gameserver/datatables/SpawnTable.java
===================================================================
--- java/com/l2jserver/gameserver/datatables/SpawnTable.java	(revision 177)
+++ java/com/l2jserver/gameserver/datatables/SpawnTable.java	(working copy)
@@ -26,13 +26,12 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.function.Function;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-import javolution.util.FastSet;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -58,7 +57,7 @@
 	private static final String SELECT_SPAWNS = "SELECT count, npc_templateid, locx, locy, locz, heading, respawn_delay, respawn_random, loc_id, periodOfDay FROM spawnlist";
 	private static final String SELECT_CUSTOM_SPAWNS = "SELECT count, npc_templateid, locx, locy, locz, heading, respawn_delay, respawn_random, loc_id, periodOfDay FROM custom_spawnlist";
 	
-	private static final Map<Integer, Set<L2Spawn>> _spawnTable = new FastMap<Integer, Set<L2Spawn>>().shared();
+	private static final Map<Integer, Set<L2Spawn>> _spawnTable = new ConcurrentHashMap<>();
 	
 	private int _xmlSpawnCount = 0;
 	
@@ -463,7 +462,7 @@
 	{
 		if (!_spawnTable.containsKey(spawn.getId()))
 		{
-			_spawnTable.put(spawn.getId(), new FastSet<L2Spawn>().shared());
+			_spawnTable.put(spawn.getId(), new CopyOnWriteArraySet<L2Spawn>());
 		}
 		_spawnTable.get(spawn.getId()).add(spawn);
 	}
Index: dist/game/data/scripts/handlers/admincommandhandlers/AdminShowQuests.java
===================================================================
--- dist/game/data/scripts/handlers/admincommandhandlers/AdminShowQuests.java	(revision 177)
+++ dist/game/data/scripts/handlers/admincommandhandlers/AdminShowQuests.java	(working copy)
@@ -23,8 +23,6 @@
 import java.sql.ResultSet;
 import java.util.logging.Logger;
 
-import javolution.text.TextBuilder;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.handler.IAdminCommandHandler;
 import com.l2jserver.gameserver.instancemanager.QuestManager;
@@ -158,7 +156,7 @@
 	
 	private static void showFirstQuestMenu(L2PcInstance target, L2PcInstance actor)
 	{
-		TextBuilder replyMSG = new TextBuilder("<html><body><table width=270><tr><td width=45><button value=\"Main\" action=\"bypass -h admin_admin\" width=45 height=21 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td><td width=180><center>Player: " + target.getName() + "</center></td><td width=45><button value=\"Back\" action=\"bypass -h admin_admin6\" width=45 height=21 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td></tr></table>");
+		StringBuilder replyMSG = new StringBuilder("<html><body><table width=270><tr><td width=45><button value=\"Main\" action=\"bypass -h admin_admin\" width=45 height=21 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td><td width=180><center>Player: " + target.getName() + "</center></td><td width=45><button value=\"Back\" action=\"bypass -h admin_admin6\" width=45 height=21 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td></tr></table>");
 		final NpcHtmlMessage adminReply = new NpcHtmlMessage();
 		int ID = target.getObjectId();
 		
@@ -182,7 +180,7 @@
 			PreparedStatement req;
 			int ID = target.getObjectId();
 			
-			TextBuilder replyMSG = new TextBuilder("<html><body>");
+			StringBuilder replyMSG = new StringBuilder("<html><body>");
 			final NpcHtmlMessage adminReply = new NpcHtmlMessage();
 			
 			switch (val[0])
Index: dist/game/data/scripts/ai/individual/Orfen.java
===================================================================
--- dist/game/data/scripts/ai/individual/Orfen.java	(revision 178)
+++ dist/game/data/scripts/ai/individual/Orfen.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.individual;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.Config;
@@ -72,7 +72,7 @@
 	private static final int RIBA_IREN = 29018;
 	
 	private static boolean _IsTeleported;
-	private static List<L2Attackable> _Minions = new FastList<>();
+	private static List<L2Attackable> _Minions = new ArrayList<>();
 	private static L2BossZone ZONE;
 	
 	private static final byte ALIVE = 0;
Index: java/com/l2jserver/gameserver/model/itemcontainer/ItemContainer.java
===================================================================
--- java/com/l2jserver/gameserver/model/itemcontainer/ItemContainer.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/itemcontainer/ItemContainer.java	(working copy)
@@ -23,11 +23,10 @@
 import java.sql.ResultSet;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.GameTimeController;
@@ -46,7 +45,7 @@
 {
 	protected static final Logger _log = Logger.getLogger(ItemContainer.class.getName());
 	
-	protected final List<L2ItemInstance> _items = new FastList<L2ItemInstance>().shared();
+	protected final List<L2ItemInstance> _items = new CopyOnWriteArrayList<>();
 	
 	protected ItemContainer()
 	{
Index: java/com/l2jserver/gameserver/model/actor/instance/L2FortCommanderInstance.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/instance/L2FortCommanderInstance.java	(revision 178)
+++ java/com/l2jserver/gameserver/model/actor/instance/L2FortCommanderInstance.java	(working copy)
@@ -18,7 +18,7 @@
  */
 package com.l2jserver.gameserver.model.actor.instance;
 
-import javolution.util.FastList;
+import java.util.ArrayList;
 
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -124,7 +124,7 @@
 		L2Spawn spawn = getSpawn();
 		if ((spawn != null) && canTalk())
 		{
-			FastList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(getFort().getResidenceId());
+			ArrayList<FortSiegeSpawn> commanders = FortSiegeManager.getInstance().getCommanderSpawnList(getFort().getResidenceId());
 			for (FortSiegeSpawn spawn2 : commanders)
 			{
 				if (spawn2.getId() == spawn.getId())
Index: java/com/l2jserver/gameserver/communitybbs/Manager/BaseBBSManager.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/Manager/BaseBBSManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/Manager/BaseBBSManager.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.communitybbs.Manager;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 import com.l2jserver.gameserver.network.serverpackets.ShowBoard;
 
@@ -59,7 +58,7 @@
 	 */
 	protected void send1002(L2PcInstance activeChar, String string, String string2, String string3)
 	{
-		List<String> _arg = new FastList<>();
+		List<String> _arg = new ArrayList<>();
 		_arg.add("0");
 		_arg.add("0");
 		_arg.add("0");
Index: java/com/l2jserver/gameserver/model/entity/L2Event.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/L2Event.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/L2Event.java	(working copy)
@@ -31,9 +31,6 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.cache.HtmCache;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
@@ -61,12 +58,12 @@
 	public static String _eventCreator = "";
 	public static String _eventInfo = "";
 	public static int _teamsNumber = 0;
-	public static final Map<Integer, String> _teamNames = new FastMap<>();
-	public static final List<L2PcInstance> _registeredPlayers = new FastList<>();
-	public static final Map<Integer, List<L2PcInstance>> _teams = new FastMap<>();
+	public static final Map<Integer, String> _teamNames = new HashMap<>();
+	public static final List<L2PcInstance> _registeredPlayers = new ArrayList<>();
+	public static final Map<Integer, List<L2PcInstance>> _teams = new HashMap<>();
 	public static int _npcId = 0;
-	// public static final List<L2Npc> _npcs = new FastList<L2Npc>();
-	private static final Map<L2PcInstance, PlayerEventHolder> _connectionLossData = new FastMap<>();
+	// public static final List<L2Npc> _npcs = new ArrayList<L2Npc>();
+	private static final Map<L2PcInstance, PlayerEventHolder> _connectionLossData = new HashMap<>();
 	
 	public enum EventState
 	{
@@ -385,7 +382,7 @@
 				_eventInfo = br.readLine();
 			}
 			
-			List<L2PcInstance> temp = new FastList<>();
+			List<L2PcInstance> temp = new ArrayList<>();
 			for (L2PcInstance player : L2World.getInstance().getPlayers())
 			{
 				if (!player.isOnline())
@@ -443,7 +440,7 @@
 			// Insert empty lists at _teams.
 			for (int i = 0; i < _teamsNumber; i++)
 			{
-				_teams.put(i + 1, new FastList<L2PcInstance>());
+				_teams.put(i + 1, new ArrayList<L2PcInstance>());
 			}
 			
 			int i = 0;
Index: java/com/l2jserver/gameserver/model/entity/Duel.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Duel.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Duel.java	(working copy)
@@ -18,13 +18,12 @@
  */
 package com.l2jserver.gameserver.model.entity;
 
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.ai.CtrlIntention;
 import com.l2jserver.gameserver.enums.DuelResult;
@@ -83,7 +82,7 @@
 			_duelEndTime.add(Calendar.SECOND, 120);
 		}
 		
-		_playerConditions = new FastList<>();
+		_playerConditions = new ArrayList<>();
 		
 		setFinished(false);
 		
@@ -108,7 +107,7 @@
 		private double _cp;
 		private boolean _paDuel;
 		private int _x, _y, _z;
-		private FastList<Skill> _debuffs;
+		private ArrayList<Skill> _debuffs;
 		
 		public PlayerCondition(L2PcInstance player, boolean partyDuel)
 		{
@@ -160,7 +159,7 @@
 		{
 			if (_debuffs == null)
 			{
-				_debuffs = new FastList<>();
+				_debuffs = new ArrayList<>();
 			}
 			
 			_debuffs.add(debuff);
Index: dist/game/data/scripts/ai/group_template/PolymorphingAngel.java
===================================================================
--- dist/game/data/scripts/ai/group_template/PolymorphingAngel.java	(revision 177)
+++ dist/game/data/scripts/ai/group_template/PolymorphingAngel.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.group_template;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.model.actor.L2Attackable;
@@ -32,7 +32,7 @@
  */
 public final class PolymorphingAngel extends AbstractNpcAI
 {
-	private static final Map<Integer, Integer> ANGELSPAWNS = new FastMap<>();
+	private static final Map<Integer, Integer> ANGELSPAWNS = new HashMap<>();
 	static
 	{
 		ANGELSPAWNS.put(20830, 20859);
Index: java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillInfo.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillInfo.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/ExEnchantSkillInfo.java	(working copy)
@@ -18,7 +18,7 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
-import javolution.util.FastList;
+import java.util.ArrayList;
 
 import com.l2jserver.gameserver.data.xml.impl.EnchantSkillGroupsData;
 import com.l2jserver.gameserver.model.L2EnchantSkillGroup.EnchantSkillHolder;
@@ -26,7 +26,7 @@
 
 public final class ExEnchantSkillInfo extends L2GameServerPacket
 {
-	private final FastList<Integer> _routes; // skill lvls for each route
+	private final ArrayList<Integer> _routes; // skill lvls for each route
 	
 	private final int _id;
 	private final int _lvl;
@@ -34,7 +34,7 @@
 	
 	public ExEnchantSkillInfo(int id, int lvl)
 	{
-		_routes = new FastList<>();
+		_routes = new ArrayList<>();
 		_id = id;
 		_lvl = lvl;
 		
Index: java/com/l2jserver/gameserver/model/holders/PlayerEventHolder.java
===================================================================
--- java/com/l2jserver/gameserver/model/holders/PlayerEventHolder.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/holders/PlayerEventHolder.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model.holders;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.data.sql.impl.ClanTable;
 import com.l2jserver.gameserver.model.Location;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -69,7 +68,7 @@
 		_pvpKills = player.getPvpKills();
 		_pkKills = player.getPkKills();
 		_karma = player.getKarma();
-		_kills = new FastList<>();
+		_kills = new ArrayList<>();
 		_sitForced = sitForced;
 	}
 	
Index: dist/game/data/scripts/ai/npc/ForgeOfTheGods/TarBeetleSpawn.java
===================================================================
--- dist/game/data/scripts/ai/npc/ForgeOfTheGods/TarBeetleSpawn.java	(revision 177)
+++ dist/game/data/scripts/ai/npc/ForgeOfTheGods/TarBeetleSpawn.java	(working copy)
@@ -22,8 +22,6 @@
 import java.util.List;
 import java.util.concurrent.ScheduledFuture;
 
-import javolution.util.FastList;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -192,7 +190,7 @@
 	private final class SpawnZone
 	{
 		private final List<Zone> _zones = new ArrayList<>();
-		private final List<L2Npc> _spawn = new FastList<>();
+		private final List<L2Npc> _spawn = new ArrayList<>();
 		private final int _maxNpcCount;
 		private final int _index;
 		
Index: java/com/l2jserver/gameserver/model/entity/Castle.java
===================================================================
--- java/com/l2jserver/gameserver/model/entity/Castle.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/entity/Castle.java	(working copy)
@@ -23,14 +23,13 @@
 import java.sql.ResultSet;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -244,7 +243,7 @@
 	{
 		super(castleId);
 		load();
-		_function = new FastMap<>();
+		_function = new HashMap<>();
 		initResidenceZone();
 		spawnSideNpcs();
 		if (getOwnerId() != 0)
Index: java/com/l2jserver/gameserver/taskmanager/TaskManager.java
===================================================================
--- java/com/l2jserver/gameserver/taskmanager/TaskManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/taskmanager/TaskManager.java	(working copy)
@@ -32,12 +32,11 @@
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.taskmanager.tasks.TaskBirthday;
@@ -62,7 +61,7 @@
 	protected static final Logger _log = Logger.getLogger(TaskManager.class.getName());
 	
 	private final Map<Integer, Task> _tasks = new ConcurrentHashMap<>();
-	protected final List<ExecutedTask> _currentTasks = new FastList<ExecutedTask>().shared();
+	protected final List<ExecutedTask> _currentTasks = new CopyOnWriteArrayList<>();
 	
 	protected static final String[] SQL_STATEMENTS =
 	{
@@ -204,8 +203,7 @@
 	public void registerTask(Task task)
 	{
 		int key = task.getName().hashCode();
-		_tasks.computeIfAbsent(key, k ->
-		{
+		_tasks.computeIfAbsent(key, k -> {
 			task.initializate();
 			return task;
 		});
Index: java/com/l2jserver/gameserver/communitybbs/Manager/PostBBSManager.java
===================================================================
--- java/com/l2jserver/gameserver/communitybbs/Manager/PostBBSManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/communitybbs/Manager/PostBBSManager.java	(working copy)
@@ -20,12 +20,11 @@
 
 import java.text.DateFormat;
 import java.util.Date;
+import java.util.HashMap;
 import java.util.Locale;
 import java.util.Map;
 import java.util.StringTokenizer;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.communitybbs.BB.Forum;
 import com.l2jserver.gameserver.communitybbs.BB.Post;
 import com.l2jserver.gameserver.communitybbs.BB.Post.CPost;
@@ -36,7 +35,7 @@
 
 public class PostBBSManager extends BaseBBSManager
 {
-	private final Map<Topic, Post> _postByTopic = new FastMap<>();
+	private final Map<Topic, Post> _postByTopic = new HashMap<>();
 	
 	public Post getGPosttByTopic(Topic t)
 	{
Index: java/com/l2jserver/loginserver/FloodProtectedListener.java
===================================================================
--- java/com/l2jserver/loginserver/FloodProtectedListener.java	(revision 177)
+++ java/com/l2jserver/loginserver/FloodProtectedListener.java	(working copy)
@@ -22,12 +22,11 @@
 import java.net.InetAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 
 /**
@@ -36,7 +35,7 @@
 public abstract class FloodProtectedListener extends Thread
 {
 	private final Logger _log = Logger.getLogger(FloodProtectedListener.class.getName());
-	private final Map<String, ForeignConnection> _floodProtection = new FastMap<>();
+	private final Map<String, ForeignConnection> _floodProtection = new HashMap<>();
 	private ServerSocket _serverSocket;
 	
 	public FloodProtectedListener(String listenIp, int port) throws IOException
Index: java/com/l2jserver/gameserver/network/serverpackets/RelationChanged.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/RelationChanged.java	(revision 178)
+++ java/com/l2jserver/gameserver/network/serverpackets/RelationChanged.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.L2Playable;
 
 /**
@@ -78,7 +77,7 @@
 	{
 		_mask |= SEND_MULTI;
 		
-		_multi = FastList.newInstance();
+		_multi = new ArrayList<>();
 	}
 	
 	public void addRelation(L2Playable activeChar, int relation, boolean autoattackable)
@@ -113,7 +112,7 @@
 			{
 				writeRelation(r);
 			}
-			FastList.recycle((FastList<?>) _multi);
+			// _multi.clear();
 		}
 	}
 	
Index: java/com/l2jserver/gameserver/network/serverpackets/SellList.java
===================================================================
--- java/com/l2jserver/gameserver/network/serverpackets/SellList.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/serverpackets/SellList.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.network.serverpackets;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.L2Summon;
 import com.l2jserver.gameserver.model.actor.instance.L2MerchantInstance;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -36,7 +35,7 @@
 	private final L2PcInstance _activeChar;
 	private final L2MerchantInstance _lease;
 	private final long _money;
-	private final List<L2ItemInstance> _selllist = new FastList<>();
+	private final List<L2ItemInstance> _selllist = new ArrayList<>();
 	
 	public SellList(L2PcInstance player)
 	{
Index: java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponLocation.java
===================================================================
--- java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponLocation.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponLocation.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.network.clientpackets;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.instancemanager.CursedWeaponsManager;
 import com.l2jserver.gameserver.model.CursedWeapon;
 import com.l2jserver.gameserver.model.Location;
@@ -52,7 +51,7 @@
 			return;
 		}
 		
-		List<CursedWeaponInfo> list = new FastList<>();
+		List<CursedWeaponInfo> list = new ArrayList<>();
 		for (CursedWeapon cw : CursedWeaponsManager.getInstance().getCursedWeapons())
 		{
 			if (!cw.isActive())
Index: java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponList.java
===================================================================
--- java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponList.java	(revision 177)
+++ java/com/l2jserver/gameserver/network/clientpackets/RequestCursedWeaponList.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.network.clientpackets;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.instancemanager.CursedWeaponsManager;
 import com.l2jserver.gameserver.model.actor.L2Character;
 import com.l2jserver.gameserver.network.serverpackets.ExCursedWeaponList;
@@ -50,7 +49,7 @@
 		}
 		
 		// send a ExCursedWeaponList :p
-		List<Integer> list = new FastList<>();
+		List<Integer> list = new ArrayList<>();
 		for (int id : CursedWeaponsManager.getInstance().getCursedWeaponsIds())
 		{
 			list.add(id);
Index: dist/game/data/scripts/ai/individual/DarkWaterDragon.java
===================================================================
--- dist/game/data/scripts/ai/individual/DarkWaterDragon.java	(revision 177)
+++ dist/game/data/scripts/ai/individual/DarkWaterDragon.java	(working copy)
@@ -18,11 +18,11 @@
  */
 package ai.individual;
 
+import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 
-import javolution.util.FastSet;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ai.CtrlIntention;
@@ -43,8 +43,8 @@
 	private static final int FAFURION = 18482;
 	private static final int DETRACTOR1 = 22270;
 	private static final int DETRACTOR2 = 22271;
-	private static Set<Integer> SECOND_SPAWN = new FastSet<>(); // Used to track if second Shades were already spawned
-	private static Set<Integer> MY_TRACKING_SET = new FastSet<>(); // Used to track instances of npcs
+	private static Set<Integer> SECOND_SPAWN = new HashSet<>(); // Used to track if second Shades were already spawned
+	private static Set<Integer> MY_TRACKING_SET = new HashSet<>(); // Used to track instances of npcs
 	private static Map<Integer, L2PcInstance> ID_MAP = new ConcurrentHashMap<>(); // Used to track instances of npcs
 	
 	private DarkWaterDragon()
Index: java/com/l2jserver/gameserver/model/variables/AbstractVariables.java
===================================================================
--- java/com/l2jserver/gameserver/model/variables/AbstractVariables.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/variables/AbstractVariables.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model.variables;
 
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.model.StatsSet;
 import com.l2jserver.gameserver.model.interfaces.IDeletable;
 import com.l2jserver.gameserver.model.interfaces.IRestorable;
@@ -36,7 +35,7 @@
 	
 	public AbstractVariables()
 	{
-		super(new FastMap<String, Object>().shared());
+		super(new ConcurrentHashMap<String, Object>());
 	}
 	
 	/**
Index: java/com/l2jserver/gameserver/LoginServerThread.java
===================================================================
--- java/com/l2jserver/gameserver/LoginServerThread.java	(revision 177)
+++ java/com/l2jserver/gameserver/LoginServerThread.java	(working copy)
@@ -37,13 +37,11 @@
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 import java.util.logging.LogRecord;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.L2World;
@@ -106,7 +104,7 @@
 	private final boolean _reserveHost;
 	private int _maxPlayer;
 	private final List<WaitingClient> _waitingClients;
-	private final FastMap<String, L2GameClient> _accountsInGameServer = new FastMap<>();
+	private final ConcurrentHashMap<String, L2GameClient> _accountsInGameServer = new ConcurrentHashMap<>();
 	private int _status;
 	private String _serverName;
 	private final List<String> _subnets;
@@ -135,8 +133,7 @@
 		_reserveHost = Config.RESERVE_HOST_ON_LOGIN;
 		_subnets = Config.GAME_SERVER_SUBNETS;
 		_hosts = Config.GAME_SERVER_HOSTS;
-		_waitingClients = new FastList<>();
-		_accountsInGameServer.shared();
+		_waitingClients = new ArrayList<>();
 		_maxPlayer = Config.MAXIMUM_ONLINE_USERS;
 	}
 	
Index: java/com/l2jserver/gameserver/instancemanager/ItemsOnGroundManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/ItemsOnGroundManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/ItemsOnGroundManager.java	(working copy)
@@ -24,11 +24,10 @@
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ItemsAutoDestroy;
@@ -44,7 +43,7 @@
 {
 	private static final Logger _log = Logger.getLogger(ItemsOnGroundManager.class.getName());
 	
-	private final List<L2ItemInstance> _items = new FastList<L2ItemInstance>().shared();
+	private final List<L2ItemInstance> _items = new CopyOnWriteArrayList<>();
 	
 	protected ItemsOnGroundManager()
 	{
Index: java/com/l2jserver/gameserver/model/L2Territory.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Territory.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Territory.java	(working copy)
@@ -18,11 +18,10 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.util.Rnd;
 
 /**
@@ -59,7 +58,7 @@
 	
 	public L2Territory(int terr)
 	{
-		_points = new FastList<>();
+		_points = new ArrayList<>();
 		_terr = terr;
 		_xMin = 999999;
 		_xMax = -999999;
Index: java/com/l2jserver/gameserver/model/actor/status/CharStatus.java
===================================================================
--- java/com/l2jserver/gameserver/model/actor/status/CharStatus.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/actor/status/CharStatus.java	(working copy)
@@ -19,12 +19,11 @@
 package com.l2jserver.gameserver.model.actor.status;
 
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArraySet;
 import java.util.concurrent.Future;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.model.actor.L2Character;
@@ -109,7 +108,7 @@
 	{
 		if (_StatusListener == null)
 		{
-			_StatusListener = new FastSet<L2Character>().shared();
+			_StatusListener = new CopyOnWriteArraySet<>();
 		}
 		return _StatusListener;
 	}
Index: dist/game/data/scripts/quests/Q00144_PailakaInjuredDragon/Q00144_PailakaInjuredDragon.java
===================================================================
--- dist/game/data/scripts/quests/Q00144_PailakaInjuredDragon/Q00144_PailakaInjuredDragon.java	(revision 177)
+++ dist/game/data/scripts/quests/Q00144_PailakaInjuredDragon/Q00144_PailakaInjuredDragon.java	(working copy)
@@ -18,13 +18,12 @@
  */
 package quests.Q00144_PailakaInjuredDragon;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.ai.CtrlEvent;
 import com.l2jserver.gameserver.ai.CtrlIntention;
 import com.l2jserver.gameserver.datatables.SkillData;
@@ -66,7 +65,7 @@
 	
 	// @formatter:off
 	// NO EXIT ZONES
-	private static final Map<Integer, int[]> NOEXIT_ZONES = new FastMap<>();
+	private static final Map<Integer, int[]> NOEXIT_ZONES = new HashMap<>();
 	static
 	{
 		NOEXIT_ZONES.put(200001, new int[]{123167, -45743, -3023});
@@ -204,7 +203,7 @@
 		{4347,6}  // Blessed Body Lv6
 	};
 	
-	private static final FastList<PailakaDrop> DROPLIST = new FastList<>();
+	private static final ArrayList<PailakaDrop> DROPLIST = new ArrayList<>();
 	static
 	{
 		DROPLIST.add(new PailakaDrop(HEAL_POTION, 80));
Index: java/com/l2jserver/gameserver/model/L2Object.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2Object.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2Object.java	(working copy)
@@ -19,10 +19,9 @@
 package com.l2jserver.gameserver.model;
 
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.gameserver.enums.InstanceType;
 import com.l2jserver.gameserver.enums.ShotType;
 import com.l2jserver.gameserver.handler.ActionHandler;
@@ -531,7 +530,7 @@
 			{
 				if (_scripts == null)
 				{
-					_scripts = new FastMap<String, Object>().shared();
+					_scripts = new ConcurrentHashMap<>();
 				}
 			}
 		}
Index: java/com/l2jserver/gameserver/engines/DocumentBase.java
===================================================================
--- java/com/l2jserver/gameserver/engines/DocumentBase.java	(revision 177)
+++ java/com/l2jserver/gameserver/engines/DocumentBase.java	(working copy)
@@ -20,6 +20,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
@@ -30,8 +31,6 @@
 
 import javax.xml.parsers.DocumentBuilderFactory;
 
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -154,7 +153,7 @@
 	protected DocumentBase(File pFile)
 	{
 		_file = pFile;
-		_tables = new FastMap<>();
+		_tables = new HashMap<>();
 	}
 	
 	public Document parse()
@@ -185,7 +184,7 @@
 	
 	protected void resetTable()
 	{
-		_tables = new FastMap<>();
+		_tables = new HashMap<>();
 	}
 	
 	protected void setTable(String name, String[] table)
Index: java/com/l2jserver/gameserver/instancemanager/SiegeGuardManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/SiegeGuardManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/SiegeGuardManager.java	(working copy)
@@ -21,12 +21,11 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
 import com.l2jserver.gameserver.model.L2Spawn;
@@ -39,7 +38,7 @@
 	private static Logger _log = Logger.getLogger(SiegeGuardManager.class.getName());
 	
 	private final Castle _castle;
-	private final List<L2Spawn> _siegeGuardSpawn = new FastList<>();
+	private final List<L2Spawn> _siegeGuardSpawn = new ArrayList<>();
 	
 	public SiegeGuardManager(Castle castle)
 	{
Index: java/com/l2jserver/gameserver/instancemanager/MercTicketManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/MercTicketManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/MercTicketManager.java	(working copy)
@@ -23,11 +23,10 @@
 import java.sql.Statement;
 import java.util.Iterator;
 import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.data.xml.impl.NpcData;
 import com.l2jserver.gameserver.enums.ItemLocation;
@@ -50,7 +49,7 @@
 {
 	private static final Logger _log = Logger.getLogger(MercTicketManager.class.getName());
 	
-	private static final FastList<L2ItemInstance> _droppedTickets = new FastList<>();
+	private static final CopyOnWriteArrayList<L2ItemInstance> _droppedTickets = new CopyOnWriteArrayList<>();
 	
 	// TODO: move all these values into siege.properties
 	// max tickets per merc type = 10 + (castleid * 2)?
@@ -114,7 +113,6 @@
 	
 	protected MercTicketManager()
 	{
-		_droppedTickets.shared();
 		load();
 	}
 	
Index: dist/game/data/scripts/hellbound/AI/Zones/AnomicFoundry/AnomicFoundry.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/Zones/AnomicFoundry/AnomicFoundry.java	(revision 178)
+++ dist/game/data/scripts/hellbound/AI/Zones/AnomicFoundry/AnomicFoundry.java	(working copy)
@@ -20,9 +20,9 @@
 
 import hellbound.HellboundEngine;
 
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.ai.CtrlIntention;
@@ -49,7 +49,7 @@
 	private static int LESSER_EVIL = 22398;
 	private static int GREATER_EVIL = 22399;
 	// Misc
-	private final Map<Integer, Integer> _atkIndex = new FastMap<>();
+	private final Map<Integer, Integer> _atkIndex = new HashMap<>();
 	// npcId, x, y, z, heading, max count
 	//@formatter:off
 	private static int[][] SPAWNS =
Index: dist/game/data/scripts/ai/individual/QueenAnt.java
===================================================================
--- dist/game/data/scripts/ai/individual/QueenAnt.java	(revision 177)
+++ dist/game/data/scripts/ai/individual/QueenAnt.java	(working copy)
@@ -18,10 +18,10 @@
  */
 package ai.individual;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.ScheduledFuture;
 
-import javolution.util.FastList;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.Config;
@@ -83,7 +83,7 @@
 	
 	L2MonsterInstance _queen = null;
 	private L2MonsterInstance _larva = null;
-	private final List<L2MonsterInstance> _nurses = new FastList<>(5);
+	private final List<L2MonsterInstance> _nurses = new ArrayList<>(5);
 	ScheduledFuture<?> _task = null;
 	
 	private QueenAnt()
Index: dist/game/data/scripts/ai/individual/Core.java
===================================================================
--- dist/game/data/scripts/ai/individual/Core.java	(revision 178)
+++ dist/game/data/scripts/ai/individual/Core.java	(working copy)
@@ -18,9 +18,9 @@
  */
 package ai.individual;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.Config;
@@ -56,7 +56,7 @@
 	
 	private static boolean _FirstAttacked;
 	
-	private final List<L2Attackable> Minions = new FastList<>();
+	private final List<L2Attackable> Minions = new ArrayList<>();
 	
 	private Core()
 	{
Index: java/com/l2jserver/gameserver/model/PartyMatchWaitingList.java
===================================================================
--- java/com/l2jserver/gameserver/model/PartyMatchWaitingList.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/PartyMatchWaitingList.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.model;
 
+import java.util.ArrayList;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
 
 /**
@@ -33,7 +32,7 @@
 	
 	protected PartyMatchWaitingList()
 	{
-		_members = new FastList<>();
+		_members = new ArrayList<>();
 	}
 	
 	public void addPlayer(L2PcInstance player)
Index: dist/game/data/scripts/hellbound/AI/Ranku.java
===================================================================
--- dist/game/data/scripts/hellbound/AI/Ranku.java	(revision 178)
+++ dist/game/data/scripts/hellbound/AI/Ranku.java	(working copy)
@@ -19,8 +19,8 @@
 package hellbound.AI;
 
 import java.util.Set;
+import java.util.concurrent.CopyOnWriteArraySet;
 
-import javolution.util.FastSet;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.gameserver.enums.ChatType;
@@ -42,7 +42,7 @@
 	private static final int MINION = 32305;
 	private static final int MINION_2 = 25543;
 	// Misc
-	private static final Set<Integer> MY_TRACKING_SET = new FastSet<Integer>().shared();
+	private static final Set<Integer> MY_TRACKING_SET = new CopyOnWriteArraySet<>();
 	
 	public Ranku()
 	{
Index: java/com/l2jserver/gameserver/engines/DocumentEngine.java
===================================================================
--- java/com/l2jserver/gameserver/engines/DocumentEngine.java	(revision 177)
+++ java/com/l2jserver/gameserver/engines/DocumentEngine.java	(working copy)
@@ -19,12 +19,11 @@
 package com.l2jserver.gameserver.engines;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.datatables.SkillData;
 import com.l2jserver.gameserver.engines.items.DocumentItem;
@@ -40,8 +39,8 @@
 {
 	private static final Logger _log = Logger.getLogger(DocumentEngine.class.getName());
 	
-	private final List<File> _itemFiles = new FastList<>();
-	private final List<File> _skillFiles = new FastList<>();
+	private final List<File> _itemFiles = new ArrayList<>();
+	private final List<File> _skillFiles = new ArrayList<>();
 	
 	public static DocumentEngine getInstance()
 	{
@@ -114,7 +113,7 @@
 	 */
 	public List<L2Item> loadItems()
 	{
-		List<L2Item> list = new FastList<>();
+		List<L2Item> list = new ArrayList<>();
 		for (File f : _itemFiles)
 		{
 			DocumentItem document = new DocumentItem(f);
Index: java/com/l2jserver/gameserver/instancemanager/RaidBossSpawnManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/RaidBossSpawnManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/RaidBossSpawnManager.java	(working copy)
@@ -23,13 +23,12 @@
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.util.Calendar;
+import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.ThreadPoolManager;
@@ -49,10 +48,10 @@
 {
 	private static final Logger _log = Logger.getLogger(RaidBossSpawnManager.class.getName());
 	
-	protected static final Map<Integer, L2RaidBossInstance> _bosses = new FastMap<>();
-	protected static final Map<Integer, L2Spawn> _spawns = new FastMap<>();
-	protected static final Map<Integer, StatsSet> _storedInfo = new FastMap<>();
-	protected static final Map<Integer, ScheduledFuture<?>> _schedules = new FastMap<>();
+	protected static final Map<Integer, L2RaidBossInstance> _bosses = new HashMap<>();
+	protected static final Map<Integer, L2Spawn> _spawns = new HashMap<>();
+	protected static final Map<Integer, StatsSet> _storedInfo = new HashMap<>();
+	protected static final Map<Integer, ScheduledFuture<?>> _schedules = new HashMap<>();
 	
 	public static enum StatusEnum
 	{
Index: dist/game/data/scripts/ai/fantasy_isle/MC_Show.java
===================================================================
--- dist/game/data/scripts/ai/fantasy_isle/MC_Show.java	(revision 178)
+++ dist/game/data/scripts/ai/fantasy_isle/MC_Show.java	(working copy)
@@ -19,9 +19,9 @@
 package ai.fantasy_isle;
 
 import java.text.SimpleDateFormat;
+import java.util.HashMap;
 import java.util.Map;
 
-import javolution.util.FastMap;
 import ai.npc.AbstractNpcAI;
 
 import com.l2jserver.Config;
@@ -166,8 +166,8 @@
 		}
 	}
 	
-	private static Map<String, ShoutInfo> talks = new FastMap<>();
-	private static Map<String, WalkInfo> walks = new FastMap<>();
+	private static Map<String, ShoutInfo> talks = new HashMap<>();
+	private static Map<String, WalkInfo> walks = new HashMap<>();
 	
 	private MC_Show()
 	{
Index: java/com/l2jserver/gameserver/instancemanager/MentorManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/MentorManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/MentorManager.java	(working copy)
@@ -27,11 +27,10 @@
 import java.util.Map;
 import java.util.Map.Entry;
 import java.util.Objects;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastMap;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.L2Mentee;
 import com.l2jserver.gameserver.model.L2World;
@@ -47,8 +46,8 @@
 {
 	private static final Logger _log = Logger.getLogger(MentorManager.class.getName());
 	
-	private final Map<Integer, Map<Integer, L2Mentee>> _menteeData = new FastMap<Integer, Map<Integer, L2Mentee>>().shared();
-	private final Map<Integer, L2Mentee> _mentors = new FastMap<Integer, L2Mentee>().shared();
+	private final Map<Integer, Map<Integer, L2Mentee>> _menteeData = new ConcurrentHashMap<>();
+	private final Map<Integer, L2Mentee> _mentors = new ConcurrentHashMap<>();
 	
 	protected MentorManager()
 	{
@@ -166,7 +165,7 @@
 	 */
 	public void addMentor(int mentorId, int menteeId)
 	{
-		_menteeData.computeIfAbsent(mentorId, map -> new FastMap<Integer, L2Mentee>().shared());
+		_menteeData.computeIfAbsent(mentorId, map -> new ConcurrentHashMap<>());
 		if (_menteeData.get(mentorId).containsKey(menteeId))
 		{
 			_menteeData.get(mentorId).get(menteeId).load(); // Just reloading data if is already there
Index: dist/game/data/scripts/handlers/admincommandhandlers/AdminAdmin.java
===================================================================
--- dist/game/data/scripts/handlers/admincommandhandlers/AdminAdmin.java	(revision 178)
+++ dist/game/data/scripts/handlers/admincommandhandlers/AdminAdmin.java	(working copy)
@@ -21,8 +21,6 @@
 import java.util.StringTokenizer;
 import java.util.logging.Logger;
 
-import javolution.text.TextBuilder;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.data.xml.impl.AdminData;
 import com.l2jserver.gameserver.enums.ChatType;
@@ -429,7 +427,7 @@
 	public void showConfigPage(L2PcInstance activeChar)
 	{
 		final NpcHtmlMessage adminReply = new NpcHtmlMessage();
-		TextBuilder replyMSG = new TextBuilder("<html><title>L2J :: Config</title><body>");
+		StringBuilder replyMSG = new StringBuilder("<html><title>L2J :: Config</title><body>");
 		replyMSG.append("<center><table width=270><tr><td width=60><button value=\"Main\" action=\"bypass -h admin_admin\" width=60 height=25 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td><td width=150>Config Server Panel</td><td width=60><button value=\"Back\" action=\"bypass -h admin_admin4\" width=60 height=25 back=\"L2UI_ct1.button_df\" fore=\"L2UI_ct1.button_df\"></td></tr></table></center><br>");
 		replyMSG.append("<center><table width=260><tr><td width=140></td><td width=40></td><td width=40></td></tr>");
 		replyMSG.append("<tr><td><font color=\"00AA00\">Drop:</font></td><td></td><td></td></tr>");
Index: java/com/l2jserver/gameserver/ai/L2ControllableMobAI.java
===================================================================
--- java/com/l2jserver/gameserver/ai/L2ControllableMobAI.java	(revision 177)
+++ java/com/l2jserver/gameserver/ai/L2ControllableMobAI.java	(working copy)
@@ -21,11 +21,10 @@
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_ACTIVE;
 import static com.l2jserver.gameserver.ai.CtrlIntention.AI_INTENTION_ATTACK;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
 
-import javolution.util.FastList;
-
 import com.l2jserver.gameserver.model.L2Object;
 import com.l2jserver.gameserver.model.MobGroup;
 import com.l2jserver.gameserver.model.MobGroupTable;
@@ -447,7 +446,7 @@
 		double dy, dx;
 		double dblAggroRange = aggroRange * aggroRange;
 		
-		List<L2Character> potentialTarget = new FastList<>();
+		List<L2Character> potentialTarget = new ArrayList<>();
 		
 		Collection<L2Object> objs = npc.getKnownList().getKnownObjects().values();
 		for (L2Object obj : objs)
Index: java/com/l2jserver/gameserver/pathfinding/cellnodes/CellNodeBuffer.java
===================================================================
--- java/com/l2jserver/gameserver/pathfinding/cellnodes/CellNodeBuffer.java	(revision 177)
+++ java/com/l2jserver/gameserver/pathfinding/cellnodes/CellNodeBuffer.java	(working copy)
@@ -18,10 +18,9 @@
  */
 package com.l2jserver.gameserver.pathfinding.cellnodes;
 
+import java.util.ArrayList;
 import java.util.concurrent.locks.ReentrantLock;
 
-import javolution.util.FastList;
-
 import com.l2jserver.Config;
 
 /**
@@ -113,9 +112,9 @@
 		return _lastElapsedTime;
 	}
 	
-	public final FastList<CellNode> debugPath()
+	public final ArrayList<CellNode> debugPath()
 	{
-		FastList<CellNode> result = new FastList<>();
+		ArrayList<CellNode> result = new ArrayList<>();
 		
 		for (CellNode n = _current; n.getParent() != null; n = (CellNode) n.getParent())
 		{
Index: java/com/l2jserver/gameserver/model/TradeList.java
===================================================================
--- java/com/l2jserver/gameserver/model/TradeList.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/TradeList.java	(working copy)
@@ -20,12 +20,11 @@
 
 import static com.l2jserver.gameserver.model.itemcontainer.Inventory.MAX_ADENA;
 
+import java.util.ArrayList;
+import java.util.HashSet;
 import java.util.List;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastSet;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.datatables.ItemTable;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -59,7 +58,7 @@
 	
 	public TradeList(L2PcInstance owner)
 	{
-		_items = new FastList<>();
+		_items = new ArrayList<>();
 		_owner = owner;
 	}
 	
@@ -123,7 +122,7 @@
 	 */
 	public TradeItem[] getAvailableItems(PcInventory inventory)
 	{
-		FastList<TradeItem> list = FastList.newInstance();
+		final ArrayList<TradeItem> list = new ArrayList<>();
 		for (TradeItem item : _items)
 		{
 			int el[] = new int[6];
@@ -135,8 +134,7 @@
 			inventory.adjustAvailableItem(item);
 			list.add(item);
 		}
-		TradeItem[] result = list.toArray(new TradeItem[list.size()]);
-		FastList.recycle(list);
+		final TradeItem[] result = list.toArray(new TradeItem[list.size()]);
 		return result;
 	}
 	
@@ -685,7 +683,7 @@
 	 * @param items
 	 * @return int: result of trading. 0 - ok, 1 - canceled (no adena), 2 - failed (item error)
 	 */
-	public synchronized int privateStoreBuy(L2PcInstance player, FastSet<ItemRequest> items)
+	public synchronized int privateStoreBuy(L2PcInstance player, HashSet<ItemRequest> items)
 	{
 		if (_locked)
 		{
Index: dist/game/data/scripts/instances/DarkCloudMansion/DarkCloudMansion.java
===================================================================
--- dist/game/data/scripts/instances/DarkCloudMansion/DarkCloudMansion.java	(revision 178)
+++ dist/game/data/scripts/instances/DarkCloudMansion/DarkCloudMansion.java	(working copy)
@@ -19,9 +19,10 @@
 package instances.DarkCloudMansion;
 
 import instances.AbstractInstance;
-import javolution.util.FastList;
-import javolution.util.FastMap;
 
+import java.util.ArrayList;
+import java.util.HashMap;
+
 import com.l2jserver.gameserver.enums.ChatType;
 import com.l2jserver.gameserver.instancemanager.InstanceManager;
 import com.l2jserver.gameserver.model.L2Party;
@@ -45,7 +46,7 @@
 {
 	protected class DMCWorld extends InstanceWorld
 	{
-		protected FastMap<String, DMCRoom> rooms = new FastMap<>();
+		protected HashMap<String, DMCRoom> rooms = new HashMap<>();
 	}
 	
 	// NPCs
@@ -229,7 +230,7 @@
 	
 	protected static class DMCRoom
 	{
-		public FastList<DMCNpc> npcList = new FastList<>();
+		public ArrayList<DMCNpc> npcList = new ArrayList<>();
 		public int counter = 0;
 		public int reset = 0;
 		public int founded = 0;
Index: java/com/l2jserver/gameserver/instancemanager/FortSiegeManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/FortSiegeManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/FortSiegeManager.java	(working copy)
@@ -24,15 +24,14 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
+import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Properties;
 import java.util.StringTokenizer;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.CombatFlag;
@@ -54,8 +53,8 @@
 	private int _attackerMaxClans = 500; // Max number of clans
 	
 	// Fort Siege settings
-	private FastMap<Integer, FastList<FortSiegeSpawn>> _commanderSpawnList;
-	private FastMap<Integer, FastList<CombatFlag>> _flagList;
+	private HashMap<Integer, ArrayList<FortSiegeSpawn>> _commanderSpawnList;
+	private HashMap<Integer, ArrayList<CombatFlag>> _flagList;
 	private boolean _justToTerritory = true; // Changeable in fortsiege.properties
 	private int _flagMaxCount = 1; // Changeable in fortsiege.properties
 	private int _siegeClanMinLevel = 4; // Changeable in fortsiege.properties
@@ -138,13 +137,13 @@
 		_suspiciousMerchantRespawnDelay = Integer.decode(siegeSettings.getProperty("SuspiciousMerchantRespawnDelay", "180"));
 		
 		// Siege spawns settings
-		_commanderSpawnList = new FastMap<>();
-		_flagList = new FastMap<>();
+		_commanderSpawnList = new HashMap<>();
+		_flagList = new HashMap<>();
 		
 		for (Fort fort : FortManager.getInstance().getForts())
 		{
-			FastList<FortSiegeSpawn> _commanderSpawns = new FastList<>();
-			FastList<CombatFlag> _flagSpawns = new FastList<>();
+			ArrayList<FortSiegeSpawn> _commanderSpawns = new ArrayList<>();
+			ArrayList<CombatFlag> _flagSpawns = new ArrayList<>();
 			for (int i = 1; i < 5; i++)
 			{
 				final String _spawnParams = siegeSettings.getProperty(fort.getName().replace(" ", "") + "Commander" + i, "");
@@ -199,7 +198,7 @@
 		}
 	}
 	
-	public final FastList<FortSiegeSpawn> getCommanderSpawnList(int _fortId)
+	public final ArrayList<FortSiegeSpawn> getCommanderSpawnList(int _fortId)
 	{
 		if (_commanderSpawnList.containsKey(_fortId))
 		{
@@ -208,7 +207,7 @@
 		return null;
 	}
 	
-	public final FastList<CombatFlag> getFlagList(int _fortId)
+	public final ArrayList<CombatFlag> getFlagList(int _fortId)
 	{
 		if (_flagList.containsKey(_fortId))
 		{
@@ -273,7 +272,7 @@
 	{
 		if (_sieges == null)
 		{
-			_sieges = new FastList<>();
+			_sieges = new ArrayList<>();
 		}
 		return _sieges;
 	}
@@ -282,7 +281,7 @@
 	{
 		if (_sieges == null)
 		{
-			_sieges = new FastList<>();
+			_sieges = new ArrayList<>();
 		}
 		_sieges.add(fortSiege);
 	}
@@ -301,7 +300,7 @@
 		
 		final Fort fort = FortManager.getInstance().getFort(player);
 		
-		final FastList<CombatFlag> fcf = _flagList.get(fort.getResidenceId());
+		final ArrayList<CombatFlag> fcf = _flagList.get(fort.getResidenceId());
 		for (CombatFlag cf : fcf)
 		{
 			if (cf.getCombatFlagInstance() == item)
@@ -349,7 +348,7 @@
 	{
 		final Fort fort = FortManager.getInstance().getFortById(fortId);
 		
-		final FastList<CombatFlag> fcf = _flagList.get(fort.getResidenceId());
+		final ArrayList<CombatFlag> fcf = _flagList.get(fort.getResidenceId());
 		
 		for (CombatFlag cf : fcf)
 		{
Index: dist/game/data/scripts/instances/FinalEmperialTomb/FinalEmperialTomb.java
===================================================================
--- dist/game/data/scripts/instances/FinalEmperialTomb/FinalEmperialTomb.java	(revision 177)
+++ dist/game/data/scripts/instances/FinalEmperialTomb/FinalEmperialTomb.java	(working copy)
@@ -21,9 +21,11 @@
 import instances.AbstractInstance;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.ScheduledFuture;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
@@ -31,9 +33,6 @@
 
 import javax.xml.parsers.DocumentBuilderFactory;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import org.w3c.dom.Document;
 import org.w3c.dom.NamedNodeMap;
 import org.w3c.dom.Node;
@@ -86,7 +85,7 @@
 	private class FETWorld extends InstanceWorld
 	{
 		protected Lock lock = new ReentrantLock();
-		protected FastList<L2Npc> npcList = new FastList<>();
+		protected CopyOnWriteArrayList<L2Npc> npcList = new CopyOnWriteArrayList<>();
 		protected int darkChoirPlayerCount = 0;
 		protected FrintezzaSong OnSong = null;
 		protected ScheduledFuture<?> songTask = null;
@@ -99,8 +98,8 @@
 		protected L2Npc scarletDummy = null;
 		protected L2GrandBossInstance frintezza = null;
 		protected L2GrandBossInstance activeScarlet = null;
-		protected List<L2MonsterInstance> demons = new FastList<>();
-		protected Map<L2MonsterInstance, Integer> portraits = new FastMap<>();
+		protected List<L2MonsterInstance> demons = new ArrayList<>();
+		protected Map<L2MonsterInstance, Integer> portraits = new HashMap<>();
 		protected int scarlet_x = 0;
 		protected int scarlet_y = 0;
 		protected int scarlet_z = 0;
@@ -109,7 +108,6 @@
 		
 		protected FETWorld()
 		{
-			npcList.shared();
 		}
 	}
 	
@@ -196,7 +194,7 @@
 	private static final boolean debug = false;
 	private final Map<Integer, L2Territory> _spawnZoneList = new HashMap<>();
 	private final Map<Integer, List<FETSpawn>> _spawnList = new HashMap<>();
-	private final List<Integer> _mustKillMobsId = new FastList<>();
+	private final List<Integer> _mustKillMobsId = new ArrayList<>();
 	protected static final int[] FIRST_ROOM_DOORS =
 	{
 		17130051,
@@ -303,7 +301,7 @@
 								int flag = Integer.parseInt(attrs.getNamedItem("flag").getNodeValue());
 								if (!_spawnList.containsKey(flag))
 								{
-									_spawnList.put(flag, new FastList<FETSpawn>());
+									_spawnList.put(flag, new ArrayList<FETSpawn>());
 								}
 								
 								for (Node cd = d.getFirstChild(); cd != null; cd = cd.getNextSibling())
@@ -850,7 +848,7 @@
 					
 					if ((_world.frintezza != null) && !_world.frintezza.isDead() && (_world.activeScarlet != null) && !_world.activeScarlet.isDead())
 					{
-						List<L2Character> targetList = new FastList<>();
+						List<L2Character> targetList = new ArrayList<>();
 						if (skill.hasEffectType(L2EffectType.STUN) || skill.isDebuff())
 						{
 							for (int objId : _world.getAllowed())
@@ -867,8 +865,7 @@
 									{
 										targetList.add(pet);
 									}
-									player.getServitors().values().forEach(s ->
-									{
+									player.getServitors().values().forEach(s -> {
 										if (!s.isDead())
 										{
 											targetList.add(s);
Index: java/com/l2jserver/gameserver/instancemanager/CoupleManager.java
===================================================================
--- java/com/l2jserver/gameserver/instancemanager/CoupleManager.java	(revision 177)
+++ java/com/l2jserver/gameserver/instancemanager/CoupleManager.java	(working copy)
@@ -21,11 +21,10 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
+import java.util.ArrayList;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-
 import com.l2jserver.L2DatabaseFactory;
 import com.l2jserver.gameserver.model.L2World;
 import com.l2jserver.gameserver.model.actor.instance.L2PcInstance;
@@ -38,7 +37,7 @@
 {
 	private static final Logger _log = Logger.getLogger(CoupleManager.class.getName());
 	
-	private FastList<Couple> _couples;
+	private ArrayList<Couple> _couples;
 	
 	protected CoupleManager()
 	{
@@ -139,11 +138,11 @@
 		return -1;
 	}
 	
-	public final FastList<Couple> getCouples()
+	public final ArrayList<Couple> getCouples()
 	{
 		if (_couples == null)
 		{
-			_couples = new FastList<>();
+			_couples = new ArrayList<>();
 		}
 		return _couples;
 	}
Index: java/com/l2jserver/gameserver/model/L2WorldRegion.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2WorldRegion.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2WorldRegion.java	(working copy)
@@ -22,12 +22,10 @@
 import java.util.Collection;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ScheduledFuture;
 import java.util.logging.Logger;
 
-import javolution.util.FastList;
-import javolution.util.FastMap;
-
 import com.l2jserver.Config;
 import com.l2jserver.gameserver.ThreadPoolManager;
 import com.l2jserver.gameserver.datatables.SpawnTable;
@@ -58,8 +56,8 @@
 	
 	public L2WorldRegion(int pTileX, int pTileY)
 	{
-		_allPlayable = new FastMap<Integer, L2Playable>().shared();
-		_visibleObjects = new FastMap<Integer, L2Object>().shared();
+		_allPlayable = new ConcurrentHashMap<>();
+		_visibleObjects = new ConcurrentHashMap<>();
 		_surroundingRegions = new ArrayList<>();
 		
 		_tileX = pTileX;
@@ -67,7 +65,7 @@
 		
 		// default a newly initialized region to inactive, unless always on is specified
 		_active = Config.GRIDS_ALWAYS_ON;
-		_zones = new FastList<>();
+		_zones = new ArrayList<>();
 	}
 	
 	public List<L2ZoneType> getZones()
@@ -456,7 +454,7 @@
 	}
 	
 	/**
-	 * @return the FastList _surroundingRegions containing all L2WorldRegion around the current L2WorldRegion
+	 * @return the ArrayList _surroundingRegions containing all L2WorldRegion around the current L2WorldRegion
 	 */
 	public List<L2WorldRegion> getSurroundingRegions()
 	{
Index: java/com/l2jserver/gameserver/model/L2World.java
===================================================================
--- java/com/l2jserver/gameserver/model/L2World.java	(revision 177)
+++ java/com/l2jserver/gameserver/model/L2World.java	(working copy)
@@ -446,10 +446,10 @@
 			return null;
 		}
 		
-		// Create an FastList in order to contain all visible L2Object
+		// Create an ArrayList in order to contain all visible L2Object
 		List<L2Object> result = new ArrayList<>();
 		
-		// Go through the FastList of region
+		// Go through the ArrayList of region
 		for (L2WorldRegion regi : reg.getSurroundingRegions())
 		{
 			// Go through visible objects of the selected region
@@ -488,10 +488,10 @@
 		
 		final int sqRadius = radius * radius;
 		
-		// Create an FastList in order to contain all visible L2Object
+		// Create an ArrayList in order to contain all visible L2Object
 		List<L2Object> result = new ArrayList<>();
 		
-		// Go through the FastList of region
+		// Go through the ArrayList of region
 		for (L2WorldRegion regi : object.getWorldRegion().getSurroundingRegions())
 		{
 			// Go through visible objects of the selected region
@@ -529,7 +529,7 @@
 		
 		final int sqRadius = radius * radius;
 		
-		// Create an FastList in order to contain all visible L2Object
+		// Create an ArrayList in order to contain all visible L2Object
 		List<L2Object> result = new ArrayList<>();
 		
 		// Go through visible object of the selected region
@@ -567,10 +567,10 @@
 			return null;
 		}
 		
-		// Create an FastList in order to contain all visible L2Object
+		// Create an ArrayList in order to contain all visible L2Object
 		List<L2Playable> result = new ArrayList<>();
 		
-		// Go through the FastList of region
+		// Go through the ArrayList of region
 		for (L2WorldRegion regi : reg.getSurroundingRegions())
 		{
 			// Create an Iterator to go through the visible L2Object of the L2WorldRegion