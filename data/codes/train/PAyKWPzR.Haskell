import SDL
import Prelude
import Control.Monad
import Linear
import Data.Text hiding (filter, null)


main :: IO ()
main = do
  initialize [InitEverything]
  window <- createWindow (pack "My SDL Application") defaultWindow
  renderer <- createRenderer window (-1) defaultRenderer
  appLoop renderer

appLoop :: Renderer -> IO ()
appLoop renderer = do
  events <- pollEvents
  let eventIsQPress event =
        case eventPayload event of
          KeyboardEvent keyboardEvent ->
            keyboardEventKeyMotion keyboardEvent == Pressed &&
            keysymKeycode (keyboardEventKeysym keyboardEvent) == KeycodeQ
          _ -> False
      qPressed = not (null (filter eventIsQPress events))

  renderDrawColor renderer $= V4 0 0 1 1
  renderClear renderer
  renderPresent renderer
  unless qPressed (appLoop renderer)